Content from https://openweathermap.org/:

Unleashing the Power of Weather APIs:
Transforming Data into Insights
Online webinar
May 13, 2 PM BST
Register
APIs
One Call API 3.0
Choose the subscription plan
"One Call by Call"
and get access to the various
            data for any coordinates
with One Call API 3.0
.
1,000 API calls per day for free!
Pay as you call
.
Included data
Time
Current
weather
Now
Minute
forecast
Next hour
Hourly
forecast
Next 48 hours
Daily
forecast
Next 8 days
Weather data
by any timestamp
46+ years back - 4 days ahead forecast
National weather alerts
All available data
Daily aggregation
46+ years back - 1,5 years ahead forecast
Weather overview
human-readable weather summary
Use our
Professional
                  collections
to get extended weather data for any
            coordinates on the globe
For professionals and specialists with middle and large sized projects, we recommend our Professional
            collections. They include either an extended data set, or various tools for receiving and displaying data and more.
current
weather
(current)
hourly
forecast
(4 days)
daily
forecast
(16 days)
climatic
forecast
(30 days)
historical
weather
(46+ years back)
Called by:
geographic coordinates, zip/post code, city name, city ID, number of cities (only in current weather and
            forecast APIs)
Learn more
Weather data
Weather for
any
geographic coordinates on the
            globe
For each point on the globe, we provide historical, current and forecasted weather data via light-speed
            APIs.
Minute-by-minute forecast
Other forecasts:
hourly (4-day)
,
daily
               (16-day)
,
30-day climatic forecast
Historical data
with 46+ years archive for any
            coordinates
Weather data
Forecasted weather data
Detailed forecasts available by city name, city ID, geographic coordinates or postal/ZIP code.
How to obtain
API
Bulks
A variety of subscriptions with various limits on calls/min, data availability, and service
Weather data
Historical weather data
Our technology
Time Machine
, has allowed us to enhance data in the
Historical Weather Collection
: historical weather data is now available for
               any coordinates and the depth of historical data has been extended to 46+ years.
How to obtain
Marketplace
of prepared data
                  sets
(cities, zip codes, grids)
On-the-fly bulks
for customized
               lists of coordinates
APIs
(city-based, up to 1 year back; subscriptions with various limits
               on calls/min, data availability, and service)
Weather data
Current weather data
Access current weather data for any location on Earth including over 200,000 cities! The data is frequently
            updated based on the global and local weather models, satellites, radars and a vast network of weather
            stations.
how to obtain
APIs
(subscriptions with various limits on calls/min, data availability, and service)
Prepared bulks
(cities, zip codes)
Our
new
products
Solar Panel Energy Prediction
This product provides users with current, forecast and historical solar panel power output data based on
               the panel’s technical characteristics for any coordinates on the globe. In addition each response
               includes essential solar irradiation data (DNI, GHI and DHI).
Solar Irradiance API
This product provides users with current, forecast and historical solar irradiation data for any
               coordinates on the globe. It includes DNI, DHI and GHI indices for the Clear Sky and Cloudy Sky models.
Global weather alerts via push notifications
This product collects weather warnings from the major weather warning systems and presents them 
               conveniently. Our push notification system provides you with timely notifications about severe weather.
AI and satellite imagery
Agriculture analytics
Based on large amount of processing satellite and climate data, we provide
analytical reports
and
detailed datasets
for crop monitoring:
Crop map (soy, corn, wheat, etc.)
Recognised field boundaries
Vegetation indicies statistics by each recognised field
Climate data for regions and particular field
Soil and weather data
Learn more
AI and satellite imagery
Agro
                  Dashboard
Dashboard is a visual service where you can easily work with satellite imagery and weather data for your
               fields. It is the visual demonstration of the data we provide through our
Agro API
:
New satellite imagery every 2-4 days
Historical satellite data archive
Vegetation indices and Historical NDVI chart
Current, Forecast and Historical weather data
Learn
               more
Weather maps
Forecast, Current and Historical
Using only one
API call
, you can get Forecast (for 10 days with 3-hour
            step), Historical, and Current weather maps.
15 map layers
include the most useful data, such as precipitation,
            clouds, pressure, temperature, wind, and much more.
Interactive weather map
allows you to watch for current temperature and
            weather conditions in your city or any other location on the interactive global map.
Learn more
20,000 OpenWeatherMap weather API repositories on GitHub
Explore a variety of example projects using our weather API’s in PHP, Java, Python, GO and more on our 
            Partners page, along with access to over 20,000 repositories on
GitHub
.
View solutions
Google Weather-Based Campaign Management with OpenWeatherMap API
Run your advertising campaign with the OpenWeatherMap API through Google AdWords.
Read more
Connect your weather station to OpenWeatherMap
Feel free to join our network of private weather stations. At the moment, we have more than 80,000 
            weather stations around the world.
Connect
Get weather data for free for open source project
We are happy to support open projects with open source code. If you need to make a large number of API calls
            and you have published your code on GitHub or BitBucket, please contact us and we will provide you with
            extended conditions.
Contact us


Content from https://openweathermap.org/api:

Weather API
Home
Weather API
Please,
sign up
to use our
                fast and easy-to-work weather APIs. As a start to
                use OpenWeather products, we recommend our
One Call API 3.0
. For more
                functionality, please consider our products, which are included in
professional
                    collections
.
One Call API 3.0
API doc
Subscribe
Make an API call to receive access to the various data:
Current
                                        weather and
                                        forecasts:
minute forecast for 1 hour
hourly forecast for 48 hours
daily forecast for 8 days
and government weather alerts
Weather data for any timestamp
for
                                46+
                                years historical archive and 4 days ahead forecast
Daily aggregation
of
                                weather data for 46+ years archive and 1.5 years ahead forecast
Weather overview
with a
                                human-readable weather summary for today and tomorrow's forecast
Read more about this API and subscription plan in the
FAQ
.
Pay as you call
1,000
API calls per day for
                                free
per API call over the daily limit
Subscribe
This is a separate subscription plan, which includes only One Call API.
Professional collections
For professionals and specialists with middle sized project, we recommend our Professional collections, which
            included
Current & Forecasts collection
,
Historical weather data
                collection
,
Weather Maps collection
and
            other APIs.
For Enterprise level projects we provide Enterprise license, which is included all forecast products and
            current state, along with alerts, maps, and other products.
Learn more
You can read the
How to Start
guide
            and enjoy using our powerful weather
            APIs right now.
Current & Forecast weather data collection
Current Weather Data
API doc
Subscribe
Access current weather data for any location
We collect and process weather data from different sources such as global and local
                        weather
                        models, satellites, radars and a vast network of weather stations
JSON, XML, and HTML formats
Included in both free and paid subscriptions
Hourly Forecast 4 days
API
                    doc
Subscribe
Hourly forecast is available for 4 days
Forecast weather data for 96 timestamps
JSON and XML formats
Included in the Developer, Professional and Expert subscription plans
Daily Forecast 16 days
API doc
Subscribe
16 days forecast is available for any location on the globe
1-day step for 16 days
JSON and XML formats
Included in all paid subscription plans
Climatic Forecast 30 days
API
                    doc
Subscribe
Forecast weather data for 30 days
JSON format
Included in the Developer, Professional and Expert subscription plans
Bulk Download
API doc
Subscribe
Current weather, a variety of weather forecasts and their 7-day archive via regularly
                        updated files
Weather bulks are grouped by types of weather data and location lists (global city lists or
                        ZIP code lists of EU, UK, and US)
Bulk files are available via CSV and JSON formats
Included in the Professional and Expert subscription plans
Global Weather Alerts
Push notifications
Doc
Subscribe
Get all the
warnings from national weather agencies
Weather alerts are pushed to your endpoint as soon as they occur
Data feed provides all active weather alerts from the entire world
Each alert contents date, time, location, and detailed description
Monthly subscription
. Please
contact us
to
                        get access.
5 Day / 3 Hour Forecast
API doc
Subscribe
5 day forecast for any location on the globe
5 day forecast with a 3-hour step
JSON and XML formats
Included in both free and paid subscriptions
Road Risk API
Doc
Get a quote
Specify your route and get weather data and national alerts for the point of destination and
                        along the route
Current, forecast for 5 days and historical weather data for 1 year for your route
Weather data are available for any point on the globe
To receive information on price and get a quote, please
contact us
Solar Irradiance & Energy Prediction service
Solar Irradiance API
Doc
Get
Get the solar data by particular location and calculate energy generation!
GHI
,
DNI
,
DHI
indices for clear sky and cloudy sky
                                models
Current data and forecast for 15 days ahead solar irradiation data
46+ years of historical data (from January 1, 1979)
Daily aggregation for every day with 1-hour and 15-minutes step detalization for
                                specified day
Historical solar irradiation and historical solar irradiation forecast bulks
                                downloading
Available worldwide
Solar Irradiance History Bulk
Doc
Get
Solar Irradiance History Bulk provides historical weather data for any location for more
                                than 46+ years back (from January 1, 1979)
GHI
,
DNI
,
DHI
indices for clear sky and cloudy
                                sky
                                models
Data is available in 15-minutes and 1-hour steps
CSV and JSON formats
Available worldwide
Available through our
Marketplace
Solar Irradiance History
                            Forecast
                            Bulk
Doc
Get
Archive of previously made solar irradiance forecasts 16 days ahead with 1-hour step (a
                                15-minute step by request)
Historical forecast is available from April, 2017
GHI
,
DNI
,
DHI
indices for clear sky and cloudy
                                sky
                                models
CSV and JSON formats
Available worldwide
Solar Panel Energy Prediction
Doc
Get
Get the particular solar panel power output, based on the panel’s technical
                                    characteristics!
Create unlimited number of solar panels for particular location with the desired
                                        specifications
Current and forecast for 15 days ahead solar panel power output data
46+ years of historical data (from January 1, 1979)
Daily aggregation for every day with 1-hour and 15-minutes step detalization for
                                        specified day
Available worldwide
Historical weather data collection
History API
API doc
Subscribe
Through our API we provide historical weather data for any location on the globe
Weather data have 1-hour step
History API is available in Professional and Expert subscription plans
JSON format
History Bulk
Doc
Get
History Bulk provides weather data for
any
location for 46+
                        years back (from January 01, 1979).
Available through our
Marketplace
CSV and JSON formats
History Forecast Bulk
Doc
Get
Historical archive of 16-days forecast weather data
Historical forecast data is available from October 7, 2017
CSV and JSON formats
You can purchase the product from our
Marketplace
Statistical Weather Data API
API
                    doc
Subscribe
Statistical data on main weather parameters for any day and month
                        of the year
The statistics are calculated based on our
Historical weather data
JSON format
The weather data updated every hour
Statistical Weather Data API is available in Expert subscription plan
Accumulated Parameters
API doc
Subscribe
Accumulated temperature and precipitation data
Accumulated Parameters are available in Professional and Expert subscription plans
JSON format
More opportunities for agriculture in our
Agricultural API
Maps collection
Weather Maps 2.0
3-hour step
API
                    doc
Subscribe
Forecast, Historical, Current weather maps with 3-hour step
15 weather map layers
The maps can be used as layers in Direct Tiles, OpenLayers, Leaflet, and Google Maps
Included in Developer, Professional and Expert subscription plans
Weather Maps 2.0
NEW
1-hour step
API
                    doc
Get
                    a quote
Forecast, Historical, Current weather maps with 1-hour step
14 weather map layers
The maps can be used as layers in Direct Tiles, OpenLayers, Leaflet, and Google Maps
Please
contact
                            us
to
                        get a quote
Weather Maps 1.0
API
                    doc
Subscribe
Weather maps include precipitation, clouds, pressure, temperature, wind, and more
Integrate our weather maps to your mobile applications and websites
Use as layers in Direct Tiles, OpenLayers, Leaflet, and Google Maps
Included in both free and paid subscriptions
Global Precipitation Maps Historical data
API
                    doc
Subscribe
Current and historical weather maps for the previous 2 days
Historical precipitation data with 10-minutes step
Resolution higher than 1 km
Use as layers in Direct Tiles, OpenLayers, Leaflet, and Google Maps
Included in Professional and Expert subscription plans
Global Precipitation Maps Historical & Forecast data
API
                    doc
Get
                    a quote
Current, forecast and historical precipitation maps
Forecast is available for the next 6 hours for the US territory and for the next 2 hours for
                        other global areas
The historical weather map for the previous 2 days
Data update period is every 10 minutes
Resolution higher than 1 km
Use as layers in Direct Tiles, OpenLayers, Leaflet, and Google Maps
Please
contact
                            us
to
                        get a quote
Relief Maps
API
                    doc
Subscribe
The combination of a layer tint (colored raster) and a hillshade
Customizable color palette
Use as layers in Direct Tiles, OpenLayers, Leaflet, and Google Maps
Included in Developer, Professional and Expert subscription plans
Fire Weather Index Maps
API
                    doc
Get
                    a quote
Current and 5 days daily forecast fire weather index maps
Use as layers in Direct Tiles, OpenLayers, Leaflet, and Google Maps
Please
contact
                            us
to
                        get a quote
Other weather API's collection
Air Pollution API
API
                    doc
Subscribe
Current, forecast and historical air pollution data
Forecast for 4 days ahead with 1-hour step
Air Pollution API includes both Air Quality Index and indices for CO, NO, NO
2
,
                        O
3
, SO
2
, NH
3
, PM
2.5
, PM
10
Included in both free and paid subscriptions
Fire Weather Index API
API
                    doc
Get a quote
Current fire index and daily forecast for 5 days are available for any geo location
                        (lat/lon)
JSON format
Please
contact
                            us
to get a quote
Geocoding API
API
                    doc
Subscribe
Geocoding API supports both the direct and reverse methods, working at the level of city
                        names, areas and districts, countries and states
You can cap how many locations with the same name or the nearby geographic coordinates will
                        be seen in the API response
Included in both free and paid subscriptions
Weather Stations
API doc
Subscribe
API for managing your personal weather stations
Connect your stations and transfer the measurements
Receive the aggregated measurements from the station
Included in both free and paid subscriptions
UV Index
Deprecated
API doc
Subscribe
The product retired on 1st April 2021, please find UVI data in
One
                                Call API 3.0
Current UV index (Clear Sky), forecast and historical data are available for any geo
                        location (lat/lon)
Interpretation of the UV Index and recommended protection are provided
JSON format
Weather Triggers
API doc
Subscribe
Simple syntax to create triggers which will be working upon the occurrence of specified
                        weather conditions (temperature, humidity, pressure, etc.) in a certain period of time
The alerts will be generated in our service once the conditions set in the trigger are met
Included in both free and paid subscriptions
API documentation
How to start
FAQ
Support
Current weather data
Call current weather data for one
                        location
How to make an API call
API response
JSON format
                                API response
                                example
JSON format
                                API response
                                fields
XML format API
                                response
                                example
XML format API
                                response
                                fields
List of weather condition
                                codes
Min/max temperature in
                                current weather
                                API and forecast API
Bulk downloading
Other features
Geocoding API
Built-in
                                geocoding
Built-in
                                        API request by city
                                        name
Built-in API request by
                                        city ID
Built-in API
                                        request by ZIP
                                        code
Format
Units format
Multilingual
                                support
Call back function for
                                JavaScript
                                code
5 day / 3 hour weather forecast
Call 5 day / 3 hour forecast
                        data
How to make an API
                                call
API response
JSON format
                                API response example
JSON format API
                                response fields
XML format API
                                response example
XML format API
                                response fields
List of weather
                                condition codes
Min/max temperature in
                                current weather API and forecast API
Bulk downloading
Other features
Geocoding API
Built-in
                                geocoding
Built-in
                                        API
                                        request by city name
Built-in
                                        API request by city ID
Built-in API
                                        request by ZIP code
Format
Limitation of
                                result
Units format
Multilingual
                                support
Call back function for
                                JavaScript code
16 day / daily weather forecast
Call 16 day / daily forecast
                        data
How to make an API
                                call
API response
JSON format
                                API
                                response example
JSON format
                                API
                                response fields
XML format
                                API
                                response example
XML format API
                                response fields
List of weather
                                condition codes
Min/max temperature in
                                current weather API and forecast
                                API
Bulk downloading
Other features
Geocoding API
Built-in
                                geocoding
Built-in API
                                        request by city name
Built-in API
                                        request by city ID
Built-in
                                        API
                                        request by ZIP code
Format
Limitation of
                                result
Units format
Multilingual
                                support
Call back function for
                                JavaScript code
One Call API 3.0
Current and forecasts
                        weather
                        data
How to make an API
                                call
Example of API
                                response
Fields in API
                                response
Weather data for
                        timestamp
How
                                to make an API
                                call
Example of API
                                response
Fields in API
                                response
Daily
                        aggregation
How to make an API call
Example of API
                                response
Fields in
                                API response
Other features
List of weather
                                condition
                                codes
Units of
                                measurement
Multilingual
                                support
List of
                                national
                                weather alerts sources
Call back
                                function for
                                JavaScript code
Hourly forecast for 4
                    days
Call Hourly
                        forecast data
How to make
                                an API call
API
                        response
JSON
                                format API response example
JSON
                                format API response fields
XML
                                format API response example
XML
                                format API response fields
List of
                                weather condition codes
Min/max
                                temperature in our weather API
Other features
Geocoding API
Built-in
                                geocoding
Built-in API request by city
                                        name
Built-in API request by city
                                        ID
Built-in API request by ZIP
                                        code
Format
Limitation
                                of result
Units of
                                measurement
Multilingual support
Call back
                                function for JavaScript code
History API
Call hourly historical data
How to make an API
                                call
Example of API
                                response
Fields in API
                                response
List of weather condition
                                codes
Min/max temperature in
                                historical weather API and forecast
                                API
Other features
Geocoding API
Built-in
                                geocoding
Built-in
                                        API
                                        request by city name
Built-in API
                                        request by city ID
History Bulk
Features of
                        History Bulk
How to get
                        historical weather data
Sample data
Weather fields
                        in History Bulk
JSON
                                example
List of
                                weather condition codes
Geocoding API
Product
                        description
Direct
                        geocoding
Coordinates by location name
How to make an API call
Example of API
                                        response
Fields in API response
Coordinates
                                by zip/post code
How to make an API call
Example of API response
Fields in API response
Reverse
                        geocoding
How to make an API call
Example of API response
Fields in API response
Bulk downloading
About
How to use the service
Types of bulk files
Current
                                weather bulks
Forecast
                                bulks
7-day
                                archives of bulk files
Weather maps 1.0
URL
                        format
Examples of
                        weather map layers
Map styles
                        legend
Google Maps
                        JavaScript API based on OpenWeatherMap API
Libraries to
                        connect weather layers
Clouds
Precipitation
Sea
                                level pressure
Wind
                                speed
Temperature
Weather Maps 2.0 1-hour step
URL format and
                        Parameters to
                        get Weather maps
How to get current,
                        forecast
                        and historical weather maps
                        using only 'Date' parameter?
What layers are there
                        in the
                        new weather maps?
How to pass my
                        palette in
                        the map?
Default
                        palettes
Examples of
                        Weather
                        maps
Libraries to
                        connect
                        weather layers
Global
                    Precipitation
                    Maps
Features of Global Precipitation
                        Map
URL format
                        and parameters
Libraries to connect weather layers
Global Weather Alerts
Features of
                        Global
                        Weather Alerts
How to get
                        access
Description
                        of alert
Fields in
                                alert
                                notifications
List
                                of
                                alerts sources
Solar Irradiance API
Product
                        concept
How to get
                        access
Call Solar
                        Irradiance API
How to
                                make an API call
Example of API call
Example of API response
Fields
                                in API response
Solar
                    Panel
                    Energy Prediction
Product concept
How
                        to use the service
Step 1: Manage my location
Step 2: Operations with solar
                                panels
Step 3: Get solar panel power
                                output
                                and solar irradiance data by location
Partners and solutions of API use
Google solutions, Ubuntu mobile,
                        Android, Java, PHP, big library on
                        GitHub and others


Content from https://openweathermap.org/price:

Pricing
Home
Pricing
Instantly access weather data for any location worldwide with OpenWeather’s robust and practical
        products and APIs. Simply subscribe to our self-service automated products using your email and begin utilizing
        a range of forecasts, current conditions, historical data, alerts, and maps. Our help desk provides technical
        support, with no procurement involved. The subscription process is fully automated. Depending on your
        subscription, we offer either an open license or a standard license agreement.
For high-demand requests and corporate needs, please consider
OpenWeather for Business solutions.
One Call API 3.0
✔
Current weather and forecasts:
minute forecast for 1 hour,
          hourly forecast for 48 hours,
          daily forecast for 8 days,
          long-term forecast for 1,5 years
✔ Government
weather alerts
✔ Historical data for
46+ years
back
✔ All weather parameters plus
UV index, Dew point, etc
.
Pay as you call
First 1000 API
calls per day are
FREE
Each additional call costs
Subscribe
Please note that the subscription requires your bank card details
License:
Creative Common Attribution-ShareAlike
      4.0 International
CC BY-SA 4.0
Attribution. You must give
appropriate credit
,
        provide a link to the license, and
indicate if
          changes were
          made
. You may do so in any reasonable manner, but not in any way that suggests the licensor
        endorses
        you or your use.
ShareAlike. If you remix, transform, or build upon the material, you must distribute your contributions under
        the
same license
as the original.
Attribution and Share-Alike for Data/Databases
ODbL
For high-demand requests and corporate needs, please consider
OpenWeather for Business solutions
.
Monthly subscriptions for Current, Forecasts and Historical data
We provide all data through auto subscriptions under an
Open License
, ensuring seamless
      access. Support is
      available via our Helpdesk, and dedicated managers are not included with this service. In case your business
      requires a customised solution, please consider
OpenWeather for Business solutions.
Startup
Subscribe
Current & Forecasts data
600 API calls/minute
10,000,000 calls/month
Current weather API
Daily Forecast 16 days
3-hour forecast for 5 days
Weather Maps - Current weather, 5
                  weather
                  layers
Air Pollution API
Geocoding API
Open License
Availability 95%
Weather data update:
every 2 hours (or less)
Developer
Subscribe
Current & Forecasts data
3,000 API calls/ minute
100,000,000 calls/ month
Current weather API
Hourly Forecast 4 days
Daily Forecast 16 days
3-hour forecast for 5 days
Weather Maps -
History
,
                  Current,
Forecast weather
,
15 weather
                    layers
Air Pollution API
Geocoding API
Open License
Availability 99.5%
Weather data update:
every 1 hour (or less)
recommended
Professional
Subscribe
Current & Forecasts data
30,000 API calls/ minute
1,000,000,000 calls/ month
Current weather API
Hourly Forecast 4 days
Daily Forecast 16 days
3-hour forecast for 5 days
Bulk
                    Download (global cities)
Weather Maps - History, Current,
                  Forecast weather, 15 weather layers
Global Precipitation
                    Map -
                    Historical data
Air Pollution API
Geocoding API
Historical data
5,000
                  calls/day
Up to 1 month back
History API
Accumulated Parameters
“OpenWeather for Business” License
Availability 99.5%
Weather data update:
every 10 min (or less)
Expert
Subscribe
Current & Forecasts data
100,000 calls/ minute
3,000,000,000 calls/ month
Current weather API
Hourly Forecast 4 days
Daily Forecast 16 days
3-hour forecast for 5 days
Bulk
                    Download (global cities + ZIPs of US,
                    EU, UK)
Road Risk API (basic configuration)
Weather Maps - History, Current,
                  Forecast weather, 15 weather layers
Global Precipitation
                    Map -
                    Historical data
Air Pollution API
Geocoding API
Historical data
50,000 calls/day
Up to 1 year back
History API
Accumulated Parameters
Statistical Weather Data API
“OpenWeather for Business” License
Availability 99.9%
Weather data update:
every 10 min (or less)
More
          details
Special industrial data packages
With minimal assistance, you will have access to industrial data through an
Open
        License
. Support is provided
      exclusively via our Helpdesk, without the need for dedicated managers. For high-demand requests and
      corporate
      needs, please consider
OpenWeather for Business
        solutions
.
Renewable Energy
Solar
                    Irradiance API
per API call
Any location | No API call limits |
Pay-as-you-call
Subscribe
Solar Panel
                    Energy Prediction
per location/ month
Any location | No API call limits
Contact us
Wind speed
                  on different hights
Data for key hub heights,
including 80m, 100m, and 200m
Get a
              quote
Solar
                    Irradiance History Bulk
per location
for 46+ years archive
Special price
Place order
Solar
                    Irradiance
                    History Forecast Bulk
per location
(3 years archive)
Access to the entire archive - by request
Contact
              us
Special products
Global Weather Alerts
Push notifications
Get
              a quote
Road Risk API
Advanced configuration
By request
Learn more
Fire Weather Index
Index API
|
Maps API
By request
Learn more
Agriculture
Satellite imagery
NDVI, EVI, NDWI, DSWI, NRI
Soil temperature and moisture
Learn more
Enterprise
OpenWeather for Business
offers real-time forecasts,
      global coverage, and historical data to power critical
      decisions. Our expert team tailors data formats, detailed reports, and actionable insights to meet your company’s
      specific needs, ensuring seamless integration and cost-effective, flexible solutions for any industry, wherever
      accurate and reliable weather information is essential.
Procurement
Security
Integration
Availability
Data
✔ Current weather | Forecasts | Historical data
✔ Weather alerts | Solar data
✔ Maps | Bulks
✔ 15-min weather data
(not for all parameters,
please
contact us
for details)
✔ 15-min solar radiance
(not for all parameters,
please
contact us
for details)
Services
✔ SLA |
“OpenWeather for Business” License
✔
Data
              Protection Coverage
✔ Support | Personal Key Account Manage
From
OpenWeather for Business
OpenWeather Dashboard
Join our AI-powered weather dashboard for free and stay up to date
            with
            accurate
            forecasts, timely alerts,
            detailed overviews, meteorological reports and professional expert consultations for any location,
            worldwide.
✔ Forecasts for your locations
✔ Weather Maps
✔ Alerts
✔ Meteorological reports
✔ Expert consultations
Request a
              demo
Learn
              more
Free Access
Current weather and forecasts
Free for everyone
60 API calls/minute
1,000,000 calls/month
Current weather API
3-hour forecast for 5
                days API
Weather Maps -
                Current
                weather, 5 weather layers
Air Pollution
                API
Geocoding API
Get API
                key
Current, Forecast and Historical data
for education
Free for students
Current & Forecasts data
3,000 API calls/ minute
100,000,000 calls/ month
Current weather
                    API
Hourly
                    Forecast
                    4 days
Daily Forecast
                    16
                    days
Weather Maps -
                    History, Current,
Forecast weather, 15 weather layers
Air
                    Pollution
                    API
Geocoding
                    API
Historical data
50,000 calls/day
1 year archive
History API
Statistical
                    Weather Data API
Accumulated Parameters
Learn more
Weather maps
We offer these products under an
Open License
. In case you need custom repackaging
      options,
      please consider
OpenWeather for Business solutions
.
Global
                  Precipitation Map API
History and
                  Forecast
Radar-based maps that provide highly precise information on precipitation in the area
              for any location on
              the globe.
Current, Forecast (for the next 6 hours for the US territory and for the next 2 hours
              for other global
              areas) and historical data (10-minute frequency, last 2 days) are available.
Contact
              us
Weather Maps 2.0
with 1-hour step
Current, historical (from September 2020) and 4-day forecast weather maps with 14
              layers available
              including temperature, precipitation, pressure, etc.
Contact
              us
Historical data packages
For custom repackaging requests and large orders, please don’t hesitate to
Contact Us
or consider
OpenWeather for
        Business
. Our team is ready to provide personalised solutions to meet your specific needs.
History Bulk
46+ years back
since January 1, 1979
Place order
History Forecast Bulk
8+ years back
since October 7, 2017
Place order
Online subscription
Our platform is designed to be
entirely self-service
, allowing you to choose and manage your
        subscription
        independently. All support is provided through our
help desk
ensuring that your questions are
        answered quickly
        and efficiently.
Easy, Self-Service Subscription Process
1. Create an Account
Sign up
on our website
          using your email address.
Once logged in, you’ll find your API key in the
API Keys
tab of your account settings.
2. Pick a Plan
On the
Pricing page
, select the subscription plan that meets your requirements.
3. Subscribe
Click Subscribe and complete the brief billing form.
Double-check your details and finalize your subscription.
You can view and manage your subscriptions in the
Billing Plans
section of your account settings
          at any
          time.
Because our service is self-served, you can handle your entire subscription journey such as sign-up, upgrades,
        downgrades, or cancellation, directly from your user dashboard.
Dedicated Help Desk Support
Our support team is available via a help desk system to answer all your technical or billing queries. Simply
        open
        a ticket on our website, and we’ll respond as soon as possible.
Note
: We do not provide phone support. Instead, our help desk system ensures you get clear, documented
        assistance
        that you can refer back to whenever needed.
Important Policies to Review Before Payment
We encourage you to read the following carefully before subscribing:
Terms and Conditions of Sale
Privacy Policy
Website Terms and Conditions of Use
These documents explain the billing process, cancellations, data usage, data protection, and important legal
        details.
Accepted Payment Methods
Credit or Debit Cards
: Visa®, MasterCard®, Union Pay®, American Express®, Apple Pay®,
          Google Pay®, Link via
          Stripe®, WeChat®, Alipay+, Revolut Pay®
Bank Transfers
: Available for Professional and Expert subscriptions and for longer-term
          plans
Note
: We do not accept cash or checks.
Monthly Subscriptions & Recurring Billing
Immediate Charge
: Upon subscribing, your card is charged for the first month.
Recurring Fee
: A fixed monthly fee is automatically billed every month thereafter.
Fee Changes
: Rates may change, but we’ll notify you in advance.
Activation
: After payment, your API key is activated, and a confirmation email (with
          endpoints and usage
          guides)
          is sent.
Invoices and Transaction History
Online Access
: Your invoices and payment history can be found in the
Payments
section of your account
          settings.
Invoice Info
: If you need your business details on invoices, add them under
Invoice Info
in
          your personal
          account.
Bank Transfers
: Invoices will be emailed to you directly by our support team. For any
          questions, please open
          a
          help desk ticket.
Canceling Your Subscription
Self-Service Cancellation
: Click
Unsubscribe
next to your active
          plan in your
          account settings. Your
          subscription remains valid until the end of the current billing cycle.
Manual Invoicing
: If you pay via bank transfer/manual invoicing, please contact our help
          desk to cancel.
Deleting Your Account
You can delete your account anytime from the
Privacy Center
in your account settings.
License Details
Apart from data itself, each of our subscriptions has its own license assigned to it. The license defines how
        you,
        as a user of our product, can use it. Our licenses are split into 2 groups:
open licenses
and
licenses for
          business
.
1. Open Licenses (
CC BY-SA 4.0
and
ODbL
)
For smaller or pay-as-you-go plans (such as One Call 3.0 pay-as-you-call, Startup, Developer)
Generally suitable for small teams or non-commercial use.
Important: consider
“ShareAlike”
requirement to ensure compliance with the license (see hyperlinks
          above for
          details). Alternatively, consider our business licenses below.
2. “OpenWeather for Business” License for Professional and Expert subscriptions.
Allows the users to integrate our data into their commercial derivative product. This can be an app,
          website,
          analysis or anything else.
“ShareAlike” requirement
no longer applies
Attribution
          requirement:
link to the
            corresponding FAQ section
Sublicensing and reselling of OpenWeather products is not allowed.
3. “OpenWeather for Business” License for Enterprise subscription.
Allows the users to integrate our data into their commercial derivative product. This can be an app,
          website,
          analysis or anything else.
“ShareAlike” requirement
no longer applies
No attribution to OpenWeather is required.
Sublicensing and reselling of OpenWeather products is not allowed by default but can be discussed
          separately.
A
visual explainer
further outlines these
        differences. Contact our help desk if you have any questions.
Enterprise and High-Demand Solutions
For organizations requiring advanced features, larger data capacities, or extensive support, our Enterprise and
        OpenWeather for Business solutions offer:
Expanded features and APIs
Custom configuration options
Priority support through the help desk
Contact us
to learn more or to discuss your specific needs.
Additional Considerations for Online Subscriptions
1. Automatic Renewal
Subscriptions renew each month (or year, if you select annual).
You can cancel at any time; charges already applied for the current cycle are non-refundable.
2. Plan Changes
Upgrades and downgrades are self-managed through your account.
Upgrades take effect immediately; downgrades usually start the next billing cycle.
3. Sales Tax & Other Fees
Depending on your location, taxes may be added.
You’re responsible for any additional fees charged by your bank or card issuer.
4. Refunds & Proration
We typically do not offer partial refunds.
If you downgrade, the lower rate starts from the next billing cycle.
5. Free Trials (If Offered)
Cancel before the trial ends to avoid being charged.
If you don’t cancel, the trial converts to a paid plan automatically.
6. Usage Limits & Overage Fees
Each plan has specific usage limits. Overage fees may apply if you exceed those limits.
We will notify you if you approach or exceed your plan’s threshold.
7. Service Reliability & Data Accuracy
We aim to provide accurate data and high service uptime.
External factors may affect forecasts and API access (e.g., location data, network outages).
8. Security & Data Privacy
We use industry-leading security measures to protect user data.
Refer to our
Privacy Policy
for more details.
9. Help Desk Response Times
We respond to tickets as quickly as possible.
Professional
and
Expert
plans receive priority in the queue.
Additional Resources
FAQ
: Quick answers regarding subscription, billing, and product
          usage.
API Documentation
: Detailed examples for each API call and its
          responses.
Help Desk: Submit a ticket if you need further assistance.
Please review our
Terms and Conditions of Sale
,
Privacy
            Policy
, and
Website Terms and
            Conditions of
            Use
before finalizing your subscription.
Remember
: Our service is fully self-served, and all support is handled through our help desk.


Content from https://openweathermap.org/examples:

Partners and solutions
Home
Partners and solutions
If you have not found a proper solution on this page, just look at the
20,000
OpenWeatherMap repositories
            on
GitHub
Google Weather-Based Campaign Management with OpenWeatherMap API
Demand for certain products and services varies greatly depending on the weather. For example, users
                  are much more likely to search for information on amusement parks on a hot, sunny day than if it's
                  cold and raining. An amusement park company may want to increase their bids when the weather is nice,
                  but doing so every day would require a lot of manual work. Using AdWords scripts, you can programmatically 
                  fetch weather data and adjust bids in minutes.
This script uses Google Spreadsheets to store the list of campaigns and their associated locations. A
                  call to the OpenWeatherMap API is made for each location and weather conditions are calculated using
                  some basic rules. If a rule evaluates as true, a location bid multiplier is applied to the campaign’s targeting.
More detailes with source code
Google Maps JavaScript API based on OpenWeatherMap API
Google has closed their Weather and Cloud solutions since 4th of June 2015 and recommended to use
                  OpenWeatherMap with the Google Maps JavaScript API as an alternative solution.
View on Github
Open manual
OpenWeather current weather data in Mozilla's IoT project
The WebThings Gateway for home automation: Monitor and control all your smart home devices via a
                  unified web interface.
Open
                  Website
Weather add-on for the gateway allows users to select from OpenWeatherMap or some other providers.
View on Github
Ubuntu
Ubuntu My Weather Indicator
Open
                  website
Ubuntu Unity OpenWeatherMap Scope
Open website
Android
Android weather app: JSON, HTTP and Openweathermap
In this post we want to describe how to create a weather app for
Android
that gives
                  current weather information. This app will use JSON, HTTP connection and AsyncTask to get this
                  information.
http://www.survivingwithandroid.com/2016/01/4-free-weather-providers-api-to-develop.html
http://www.survivingwithandroid.com/2013/05/build-weather-app-json-http-android.html
http://survivingwithandroid.github.io/WeatherLib
Weather Notification
Simple application which displays the air temperature and other weather conditions in the Android
                  notification bar. The air temperature is always visible like a system clock.
See on Bitbucket
Leaflet
A Leaflet plugin for adding a weather widget to the map using OpenWeatherMap API
View on Github
OpenWeatherMap for Leaflet based maps
A JavaScript library for including OpenWeatherMap's layers and OWM's current city/station data in
                  leaflet based maps without hassle.
View on Github
Leaflet providers
Leaflet-providers provides tile layers from different providers, including OpenStreetMap,
                  OpenWeatherMap and others.
View on Github
Java
OpenWeatherMap JSON API client library in Java
Java library to retrieve weather information and forecasts from Open Weather Map
View on
                  Github
OWM JAPIs
OWM JAPIs lets you develop weather-aware applications for Java and Android platforms in minimum time
                  using OWM JAPIs, an easy-to-use, detailed and documented weather APIs' wrapper library for retrieving
                  weather data from OpenWeatherMap.org. You can easily retrieve and use weather data in your
                  applications using this library.
OWM JAPIs allows you to fetch weather data in only 3-5 lines of code (excluding any other/skeleton
                  code, of course). You can develop applications and services for multiple platforms using this library,
                  such as Windows, Mac OS X, Linux, and Android.
View on
                     Github
Go (golang)
OpenWeatherMap Go API
Go (golang) library for use with openweathermap.org's API
See library
JavaScript
Weather.js
Weather.js fetches data from openweathermap.org and makes querying all kinds of weather related
                  information easy.
weatherjs.com
JavaScript libraries for OpenStreetMap applications
View on
                  Github
Weather Display
View
                  on Github
CMS
Drupal OpenLayers Open Weather Map
Provides default OpenWeatherMap layers and a new layer type to display weather forecast and weather
                  stations all around the globe.
See
                  on the
                  website
WordPress HD Weather Widget by The Waypoint
This plugin uses HD 331dpi images, in beautiful responsive circles, to display weather for your
                  location. Images included in this package now.
                  The plugin parses data from the OWM api to display information. The HD background image changes, based on the condition outside, 
                  aptly named "the Feels". We have provided one Feel in the initial
                  v.1. Use the documentation to xref the api condition statements, against file names. The images get
                  loaded via css, so they don't interfere with layered objects on the site.
View plugin
WordPress WPCloudy Plugin
WP Cloudy is a powerful weather plugin for WordPress, based on OpenWeatherMap API, using Custom Post
                  Types and shortcodes, and much more.
View Location Weather plugin
View WP Forecast plugin
View Extended Weather plugin
Raspberry Pi
Raspberry_temperature_log
Turn Raspberry Pi into temperature and humidity logging station with DHT11 sensor
View on Github
Python
PyOWM
PyOWM is a client Python wrapper library for the OpenWeatherMap. It allows quick and easy consumption
                  of OWM weather data (either observations and forecast) from Python applications via a simple object
                  model. No additional libraries are requested: only the Python 2.6/2.7 standard library modules. PyOWM
                  currently supports version 2.5 of the OWM API.
View on
                  Github
View on YouTube
pywws
This guide gives brief instructions on how to use pywws with some other weather services and software.
See the docs
PHP
OpenWeatherMap-PHP-Api
Php api to parse weather data from OpenWeatherMap.org
View on Github
Apache Camel
Weather Component
Component is used for polling weather information from Open Weather Map - a site that provides free
                  global weather and forecast information. The information is returned as a json String object.
See on the
                  website
Desktop
Weather-Map
Weather-Map is a desktop application that provides free weather data. Weather-Map wide range of
                  weather data - map with current weather, quantity of precipitation, wind speed, clouds cover, sea
                  Level Pressure contour maps, temperature, snow precipitation, data from weather stations, data from
                  radars, data for cities. Weather data is received from OpenWeatherMap api.
View
                  on Github
20,000 repositories on GitHub
GitHub library of codes and scripts operating with OpenWeatherMap API
View solutions


Content from https://openweathermap.org/stations:

Weather stations
Home
API
Stations
How to connect your weather station to OpenWeatherMap
We are glad to announce our new API version for managing your personal weather stations - Weather Stations API
        3.0 (beta). It went through some essential changes in comparison with the previous version.
The biggest improvement is that users have more flexibility of their stations, and can share/transfer 
        data related to them. The new RESTful style eases this process. In the previous version, a user account 
        was limited to a single station, but with the new version, users can add as many stations as they need.
The second innovation is an extended set of parameters which you can pass in the measurements. The data
        transfer protocol based on METAR and CWOP networks. You could learn more about it
here
.
We are launching the new API version in two stages. As for now you have the possibility to add and set up your
        meteorological stations using Weather Stations API 3.0 methods for stations management and measurements
        transmissions. In the nearest future we are planning to provide additional methods which will allow you to
        collect data from your stations for any period of time. Also we will add support for obtaining the aggregated
        information with various intervals (minute/hour/day). It'll be possible to receive aggregated history of
        measurements from your meteorological station for several years by a single query.
Three simple steps to connect your station to Weather Station API 3.0:
Create an account in
members area
and
receive a key to access API methods
Register your station in our system using the new API version and get a unique identifier for the station.
Transfer weather data using special API method. Note that now you may have several stations attached to
            your account, so it's important to pass the unique station identifier in every query.
Basic methods to retrieve data from station
These are two methods necessary to start working with OpenWeatherMap service: creation of the station and
          measurements transfer. Access to full list of API methods
requires you to
            pass your personal key in the query
.
When calling methods PUT and POST it's necessary to specify the header
Content-Type: application/json
[POST] /stations
This method is used to register a station in the OpenWeatherMap service. You need to pass a set of
            parameters: external identifier, station name and its geographical arrangement. In case of successful
            creation method returns an HTTP code
201
.
URL example
http://api.openweathermap.org/data/3.0/stations
Request parameters
{
  "external_id": "SF_TEST001",
  "name": "San Francisco Test Station",
  "latitude": 37.76,
  "longitude": -122.43,
  "altitude": 150
}
Headers
Content-Type: application/json
API Response
{
  "ID": "583436dd9643a9000196b8d6",
  "updated_at": "2016-11-22T12:15:25.96727176Z",
  "created_at": "2016-11-22T12:15:25.967271732Z",
  "user_id": "557066d0ff7a7e3897531d94",
  "external_id": "SF_TEST001",
  "name": "San Francisco Test Station",
  "latitude": 37.76,
  "longitude": -122.43,
  "altitude": 150,
  "source_type": 5
}
[POST] /measurements
This method is used to transfer measurements collected from your station. Full description of possible data
            structures is provided below. Measurements are transferred in an array which allows to specify several data
            sets at once and to perform a postponed sending. In case of successful measurements dispatch method returns
            an HTTP code
204
.
URL example
http://api.openweathermap.org/data/3.0/measurements
Request parameters
[
  {
    "station_id": "583436dd9643a9000196b8d6",
    "dt": 1479817340,
    "temperature": 18.7,
    "wind_speed": 1.2,
    "wind_gust": 3.4,
    "pressure": 1021,
    "humidity": 87,
    "rain_1h": 2,
    "clouds": [
      {
          "condition": "NSC"
      }
    ]
  }
]
Headers
Content-Type: application/json
API Response
[
  {
    "type": "m",
    "date": 1480508280,
    "station_id": "583d7bbbebb3ff000123f1ce",
    "temp": {
        "max": 22.7,
        "min": 21.7,
        "average": 22.03,
        "weight": 3
    },
    "humidity": {
        "average": 76.33,
        "weight": 3
    },
    "wind": {
        "deg": 160,
        "speed": 3.3
    },
    "pressure": {
        "min": 1031,
        "max": 1033,
        "average": 1031.67,
        "weight": 3
    },
    "precipitation": {}
  },
  {
    "type": "m",
    "date": 1480599660,
    "station_id": "583d7bbbebb3ff000123f1ce",
    "temp": {
        "max": 21.7,
        "min": 21.7,
        "average": 21.7,
        "weight": 1
    },
    "humidity": {
        "average": 77,
        "weight": 1
    },
    "wind": {},
    "pressure": {
        "min": 1031,
        "max": 1031,
        "average": 1031,
        "weight": 1
    },
    "precipitation": {}
  }
]
Parameter
Type & Units
Description
station_id
The internal ID of the station which is generated during creation
dt
Unix Timestamp
Time of measurement
temperature
Celsius
The air temperature
wind_speed
m/s
Wind speed
wind_gust
m/s
Maximum speed of wind gusts
wind_deg
Degrees from 0 to 360
Wind direction
pressure
Hectopascal
Atmospheric pressure
humidity
%
Relative air humidity
rain_1h
mm
Rainfall in the last hour
rain_6h
mm
Rainfall in the last 6 hours
rain_24h
mm
Rainfall for the last days
snow_1h
mm
Snow in the last hour
snow_6h
mm
Snow in the last 6 hours
snow_24h
mm
Snow for the last days
dew_point
Celsius
Dew point
humidex
Celsius
Index of temperature and humidity
heat_index
Celsius
Heat index
visibility_distance
km
Distance of direct visibility, METAR
visibility_prefix
N, E, S, W
Prefix at distinctions of visibility in the directions, METAR
clouds[]:distance
m
Height of the lower bound of overcast, METAR
clouds[]:condition
SKC, NSC, FEW, SCT, BKN, OVC
Cloud amount, METAR
clouds[]:cumulus
CB, TCU
Convective overcast, METAR
weather[]:precipitation
Additional description, METAR
weather[]:descriptor
Additional description, METAR
weather[]:intensity
Additional description, METAR
weather[]:proximity
Additional description, METAR
weather[]:obscuration
Additional description, METAR
weather[]:other
Additional description, METAR
[GET] /measurements
This method is used for receiving aggregated measurements from stations. In total, there are 3 
            supported unit types - minutes, hours, and days. Thus, there is a possibility to query the station’s 
            historical measurements for any time interval with the desired level of detail.
At the moment the aggregation uses the fixed list of parameters from the collection of measurements -
            temperature, humidity, pressure, speed and wind direction, precipitation. In the future this list will
            extend.
The following parameters are mandatory in the request - an interval of measurements, the internal
            identifier of the station, type of the unit and the maximum number of records which can be returned. They
            are transferred in a line of GET-request as parameters.
URL Example
http://api.openweathermap.org/data/3.0/measurements?station_id=...&type=...&limit=...
[
{
  "type": "m",
  "date": 1480508280,
  "station_id": "583d7bbbebb3ff000123f1ce",
  "temp": {
      "max": 22.7,
      "min": 21.7,
      "average": 22.03,
      "weight": 3
  },
  "humidity": {
      "average": 76.33,
      "weight": 3
  },
  "wind": {
      "deg": 160,
      "speed": 3.3
  },
  "pressure": {
      "min": 1031,
      "max": 1033,
      "average": 1031.67,
      "weight": 3
  },
  "precipitation": {}
},
{
  "type": "m",
  "date": 1480599660,
  "station_id": "583d7bbbebb3ff000123f1ce",
  "temp": {
      "max": 21.7,
      "min": 21.7,
      "average": 21.7,
      "weight": 1
  },
  "humidity": {
      "average": 77,
      "weight": 1
  },
  "wind": {},
  "pressure": {
      "min": 1031,
      "max": 1031,
      "average": 1031,
      "weight": 1
  },
  "precipitation": {}
}
]
Parameter
Description
Example
station_id
The internal ID of the station which you got during her creation
583d7bbbebb3ff000123f1ce
type
Type of the aggregated data - minute, hour or day. Specifies the letters
m
,
h
or
d
respectively
m
limit
The maximum number of records with the aggregated measurements which can return in the answer
100
from
The beginning of an interval on which data are requested. Is specified in Unix Timestamp format
1480300000
to
The end of an interval on which data are requested. Is specified in Unix Timestamp format
1480700000
Additional features of Weather Stations API 3.0
List all stations, show information about one station, change and remove stations attached to your account.
[GET] /stations
This method is used to obtain the list of all stations added to your account with a standard set of
            attributes: external and internal identifiers, creation and update timestamps, name, geographical
            arrangement, height above sea level and station rank.
http://api.openweathermap.org/data/3.0/stations
[
  {
    "id": "583436dd9643a9000196b8d6",
    "created_at": "2016-11-22T12:15:25.967Z",
    "updated_at": "2016-11-22T12:15:25.967Z",
    "external_id": "SF_TEST001",
    "name": "San Francisco Test Station",
    "longitude": -122.43,
    "latitude": 37.76,
    "altitude": 150,
    "rank": 0
  },
  {
    "id": "5834367b9643a9000196b8d5",
    "created_at": "2016-11-22T12:13:47.135Z",
    "updated_at": "2016-11-22T12:13:47.135Z",
    "external_id": "NY_TEST001",
    "name": "New York Test Station",
    "longitude":-73.99,
    "latitude": 40.72,
    "altitude": 30,
    "rank": 0
  }
]
[GET] /stations/{:id}
This method is used to get information about one station with a standard set of attributes: external and
            internal identifiers, creation and update timestamps, name, geographical arrangement, height above sea level
            and station rank.
URL Example
http://api.openweathermap.org/data/3.0/stations/583436dd9643a9000196b8d6
{
  "id": "583436dd9643a9000196b8d6",
  "created_at": "2016-11-22T12:15:25.967Z",
  "updated_at": "2016-11-22T12:15:25.967Z",
  "external_id": "SF_TEST001",
  "name": "San Francisco Test Station",
  "longitude": -122.43,
  "latitude": 37.76,
  "altitude": 150,
  "rank": 0
}
[PUT] /stations/{:id}
This method is used to change information about the station. Parameters available for modification:
            external identifier, name, geographical arrangement, height above sea level. In case of successful change
            method returns an HTTP code
200
.
URL Example
http://api.openweathermap.org/data/3.0/stations/583436dd9643a9000196b8d6
Request parameters
{
  "external_id": "SF_UPD001",
  "name": "San Francisco Updated Station",
  "latitude": 37.80,
  "longitude": -122.47,
  "altitude": 143
}
Headers
Content-Type: application/json
API Response
{
  "id": "583436dd9643a9000196b8d6",
  "created_at": "2016-11-22T12:15:25.967Z",
  "updated_at": "2016-11-22T12:44:20.170544353Z",
  "external_id": "SF_UPD001",
  "name": "San Francisco Updated Station",
  "longitude": -122.47,
  "latitude": 37.8,
  "altitude": 143,
  "rank": 0
}
[DELETE] /stations/{:id}
This method is used to remove a station from your account. In case of successful removal method returns an
            HTTP code
204
(Successful answer). Be careful: after this operation all measurements received
            from the removed station are deleted permanently, so they couldn't be restored.
URL Example
http://api.openweathermap.org/data/3.0/stations/583436dd9643a9000196b8d6
{
   "id": "583436dd9643a9000196b8d6",
   "created_at": "2016-11-22T12:15:25.967Z",
   "updated_at": "2016-11-22T12:15:25.967Z",
   "external_id": "SF_TEST001",
   "name": "San Francisco Test Station",
   "longitude": -122.43,
   "latitude": 37.76,
   "altitude": 150,
   "rank": 0
}
Possible errors:
In case of an error you will receive six-digit HTTP codes:
400
000
Error in input data
500
000
Internal error
404
000
Object not found
With the following structure:
{
  "code": 000000,
  "message": "string"
}
code
Six-digit error code. First three digits stands for an HTTP code, second - for a
                special error code.
message
Error description


Content from https://openweathermap.org/widgets-constructor:

Widgets constructor
Home
Widgets constructor
Copy in buffer
Get a code for posting a weather forecast widget on your site.
Your API key:
Your city name:
Search city
Select your city:
Select units:
°C
/
°F
Select type widgets:
Get a code
Get
                    a code
Get
                    a code
Get
                    a code
Get
                    a code
Get
                    a code
Get a code
Get a
                  code
Get a
                  code
Get a
                  code
Get
                    a code
Get
                    a code
Get
                    a code
Get
                    a code
Get
                    a code
Get a code
Get a code
Get a code
Get a code
Get a code
Get a code
Get a code


Content from https://openweathermap.org/news:

×
OpenWeather
Meteorological Service
Speak to
      the Chief
Meteorologist Dan Hart and
his team!
ALL
WEATHER
AGRO
PLATFORM
TECHNOLOGIES
EDUCATION
TEAM&COMPANY
EVENTS
WEBINAR
HISTORY
ENERGY
02 May 2025
ENERGY
,
HISTORY
,
WEATHER
From Scorching Heat to Icy Winters: How Miners Adapt to Extreme Weather
In our previous article, How Heavy Rain Can Affect Diamond Mining we looked at the effect of weather patterns on a specific mining sector - we now investigate the wide range of weather challenges that mine operations face around the world.
#historydata
#climatechange
#data
01 May 2025
HISTORY
,
TEAM&COMPANY
,
WEATHER
Celebrating the Turn of the Seasons: Weather and May Day Traditions Around the World
May Day traditions remind us of our enduring relationship with the weather. They are a colourful, joyful expression of hope, renewal, and gratitude for the warmth and light that allows nature, and human communities, to thrive. As we observe or p...
#historydata
#data
#product
30 Apr 2025
PLATFORM
,
TEAM&COMPANY
,
WEATHER
Should Extreme Weather Trigger a Remote Work Policy? Here’s Why It Matters!
The way we work is constantly evolving, shaped by technology and changing societal expectations. Increasingly, however, another powerful force is influencing workplace decisions: extreme weather.
#climatechange
#dashboard
#dataquality
#product
29 Apr 2025
PLATFORM
,
TEAM&COMPANY
,
WEATHER
Weather Intelligence for Last-Mile Delivery
Weather significantly impacts last-mile delivery costs, efficiency, safety, and customer satisfaction. As weather patterns shift, relying on chance isn't viable. By integrating reliable, hyperlocal weather data and forecasts, logistics companies...
#climatechange
#transport
#dashboard
#dataquality
28 Apr 2025
HISTORY
,
TECHNOLOGIES
,
WEATHER
How Weather Shapes Consumer Demand
Accurate demand forecasting is fundamental for business success. It guides crucial decisions about inventory levels, staffing, logistics, and marketing campaigns. While many factors influence consumer choices, one of the most powerful yet freque...
#api
#historydata
#climatechange
#bulk
25 Apr 2025
PLATFORM
,
TEAM&COMPANY
,
WEATHER
Weather’s Impact on Employee Productivity
The daily weather is more than just a topic for casual conversation; it can have subtle and sometimes significant effects on employee productivity and overall workplace dynamics. Understanding these influences allows businesses to better anticip...
#airpollution
#dashboard
#dataquality
#data
24 Apr 2025
PLATFORM
,
TEAM&COMPANY
,
WEATHER
Impact of Weather on Cycling
Weather is an inseparable part of cycling. From challenging winds and persistent rain to temperature fluctuations and visibility issues, conditions significantly impact safety, comfort, and enjoyment. By utilising accurate and detailed weather f...
#api
#dashboard
#dataquality
23 Apr 2025
PLATFORM
,
TEAM&COMPANY
,
WEATHER
Extreme cold can slow your metabolism. Why does your body burn more calories in winter?
Understanding the nuances of how our bodies react to cold, supported by accurate temperature information from reliable sources like OpenWeather, allows us to better navigate the changing seasons and manage our health effectively.
#api
#climatechange
#weatherapp
#product
22 Apr 2025
TEAM&COMPANY
,
TECHNOLOGIES
,
WEATHER
How Heavy Rain Can Affect Diamond Mining.
Diamond mining, a process often involving vast open pits, is inherently susceptible to environmental factors. Among the most significant of these is heavy rainfall, which can lead directly to flooding events that cause substantial delays and dis...
#climatechange
#onecallapi
#data
17 Apr 2025
EDUCATION
,
PLATFORM
,
WEATHER
Can your body predict the weather? The truth behind ‘weather-sensitive’ people.
Many people claim they can feel changes in the weather coming – perhaps an ache in their joints signals rain, or a headache brews before a storm. This phenomenon, sometimes called 'meteoropathy' or weather sensitivity, is a common experience, bu...
#airpollution
#weatherapp
#data


Content from https://openweathermap.org/find?q=:

Weather in your city
Search
Search
Search engine is very flexible. How it works:
To make it more precise put the city's name, comma, 2-letter country code (ISO3166). You will get all
          proper cities in chosen country.
The order is important - the first is city name then comma then country. Example - London, GB or New York,
          US.


Content from https://openweathermap.org/appid:

How to start using professional collections
Home
API
How to start using professional collections
Best way to start and continue calling OpenWeather APIs
OpenWeather offers a set of widely recognised and reliable APIs. Powered by advanced machine 
                  learning, our platform provides weather information essential for decision-making at any 
                  location worldwide. To start using our APIs, please sign up
here
.
Why our Free Weather API is so good yet free
How to call OpenWeather APIs with a freemium plan
The API key is all you need to call any of our weather APIs. Once you
sign
                     up
using your email, the API key (APPID) will be sent to you in a
                  confirmation email. Your API keys can always be found on your
account page
, where you can also generate
                  additional API keys if needed. Check our
documentation page
to find all technical
                  information for each product. Documentation is an essential guide with actual examples and
                  comprehensive description of API calls, responses and parameters.
How to call OpenWeather APIs with a paid plan
In case your weather data requirements go beyond our Free plan, you may consider
                  signing up for our
paid subscription plans
. The subscription plans differ in the
                  APIs products range, level of service provided, the overall amount of calls per minute and other
                  features.
API key is everything you need to call for weather data
Please, use your API key in every API call you make. Our platform only processes
                  the
                  API requests with an API key included. The API keys linked to your account are used to take count of
                  the calls you make to OpenWeather platform.
Example on how to make an API call using your API key
API call
http://api.openweathermap.org/data/2.5/forecast?id=524901&appid=
{API key}
Parameters
appid
required
Your unique API key (you can always find it on your account page under the
"API key" tab
)
Example of API call
api.openweathermap.org/data/2.5/forecast?id=524901&appid={API key}
API care recommendations
Like any other tool, the API requires some attention. To let it
                  serve
                  you properly, we suggest that you carefully read these instructions and care recommendations.
First, we recommend making API calls no more than once in 10 minutes for each
                  location, whether you call it by city name, geographical coordinates or by zip code. The update
                  frequency of the OpenWeather model is not higher than once in 10 minutes.
Second, the only endpoint for making
free
API calls is
api.openweathermap.org
. Please, don’t use the server’s IP address. The endpoint for
                  paid subscription plans is different and it can be found in the confirmation email we send you once
                  your subscription is activated
Third, to get a precise geocoding searching result would rather call API by
                  geographical coordinates. You can always call the OpenWeather APIs using the city name or zip/post
                  code. In case you need to get geographical coordinates by name of your location please use our
Geocoding API
.
We support over 200,000 cities worldwide and our data is available for any coordinates around the
                     globe. However, we don't recommend using large locations or countries as it will not be weather
                     data for a large location (aggregated data or averages), but weather data for
a central point of
                        the territory
.
Finally, please mind that all our tariff plans have caps on the quantity of calls
                  made
                  to API and it varies depending on the subscription type. In case you don’t obtain an API response due
                  to hitting the limit of calls, we would ask you to repeat your request in 10 minutes. On this
                  occasion, we also recommend to keep the API request unamended, since it would help our internal
                  caching service to process your request timely.
When you exceed the API call limit
We take a count of calls made with all API keys assigned to your account. 
                  To avoid service interruptions for your users, we won’t immediately suspend your API key 
                  if you exceed the call limit. An automatic notification will be sent to your email, suggesting 
                  to switch to a
paid subscription plan
which would meet your requirements. In case we don’t hear back from you, your API key will be
                  suspended. You will still be able to resume your subscription by contacting our
customer support team
.
Response from API when your account is suspended
{ "cod": 429,
"message": "Your account is temporary blocked due to exceeding of requests limitation of your subscription type. 
Please choose the proper subscription http://openweathermap.org/price"
}
If you do not find a reply to your questions on this page, please, look at our comprehensive
FAQ
or contact our
customer support team
.


Content from https://openweathermap.org/current:

Current weather data
Home
API
Current weather
Product concept
Access current weather data for any location on Earth!
               We collect and process weather data from different sources such as global and local weather models,
               satellites, radars and a vast network of weather stations.
               Data is available in JSON, XML, or HTML format.
Call current weather data
How to make an API call
API call
https://api.openweathermap.org/data/2.5/weather?lat={lat}&lon={lon}&appid=
{API key}
Parameters
lat
required
Latitude. If you need the geocoder to automatic convert city names and zip-codes to geo
                        coordinates and the other way around, please use our
Geocoding
                           API
lon
required
Longitude. If you need the geocoder to automatic convert city names and zip-codes to geo
                        coordinates and the other way around, please use our
Geocoding
                           API
appid
required
Your unique API key (you can always find it on your account page under the
"API key" tab
)
mode
optional
Response format. Possible values are
xml
and
html
. If you don't use
                        the
mode
parameter format is JSON by default.
Learn more
units
optional
Units of measurement.
standard
,
metric
and
imperial
units are available. If you do not use the
units
parameter,
standard
units will be applied by default.
Learn more
lang
optional
You can use this parameter to get the output in your language.
Learn more
Please use
Geocoder API
if you need automatic
                     convert city names and zip-codes to geo coordinates and the other way around.
Please note that
built-in geocoder
has been deprecated. Although it
                     is still available for use, bug fixing and updates are no longer available for this functionality.
Examples of API calls
https://api.openweathermap.org/data/2.5/weather?lat=44.34&lon=10.99&appid=
{API key}
{
  "coord": {
    "lon": 10.99,
    "lat": 44.34
  },
  "weather": [
    {
      "id": 501,
      "main": "Rain",
      "description": "moderate rain",
      "icon": "10d"
    }
  ],
  "base": "stations",
  "main": {
    "temp": 298.48,
    "feels_like": 298.74,
    "temp_min": 297.56,
    "temp_max": 300.05,
    "pressure": 1015,
    "humidity": 64,
    "sea_level": 1015,
    "grnd_level": 933
  },
  "visibility": 10000,
  "wind": {
    "speed": 0.62,
    "deg": 349,
    "gust": 1.18
  },
  "rain": {
    "1h": 3.16
  },
  "clouds": {
    "all": 100
  },
  "dt": 1661870592,
  "sys": {
    "type": 2,
    "id": 2075663,
    "country": "IT",
    "sunrise": 1661834187,
    "sunset": 1661882248
  },
  "timezone": 7200,
  "id": 3163858,
  "name": "Zocca",
  "cod": 200
}
API response
If you do not see some of the parameters in your API response it means that these weather phenomena are
               just not happened for the time of measurement for the city or location chosen. Only really measured or
               calculated data is displayed in API response.
JSON
JSON format API response example
{
   "coord": {
      "lon": 7.367,
      "lat": 45.133
   },
   "weather": [
      {
         "id": 501,
         "main": "Rain",
         "description": "moderate rain",
         "icon": "10d"
      }
   ],
   "base": "stations",
   "main": {
      "temp": 284.2,
      "feels_like": 282.93,
      "temp_min": 283.06,
      "temp_max": 286.82,
      "pressure": 1021,
      "humidity": 60,
      "sea_level": 1021,
      "grnd_level": 910
   },
   "visibility": 10000,
   "wind": {
      "speed": 4.09,
      "deg": 121,
      "gust": 3.47
   },
   "rain": {
      "1h": 2.73
   },
   "clouds": {
      "all": 83
   },
   "dt": 1726660758,
   "sys": {
      "type": 1,
      "id": 6736,
      "country": "IT",
      "sunrise": 1726636384,
      "sunset": 1726680975
   },
   "timezone": 7200,
   "id": 3165523,
   "name": "Province of Turin",
   "cod": 200
}
JSON format API response fields
coord
coord.lon
Longitude of the location
coord.lat
Latitude of the location
weather
(more info
Weather condition
                        codes
)
weather.id
Weather condition id
weather.main
Group of weather parameters (Rain, Snow, Clouds etc.)
weather.description
Weather condition within the group. Please find more
here.
You can get the output in your language.
Learn
                              more
weather.icon
Weather icon id
base
Internal parameter
main
main.temp
Temperature. Unit Default: Kelvin, Metric: Celsius, Imperial:
                           Fahrenheit
main.feels_like
Temperature. This temperature parameter accounts for the human
                           perception of weather. Unit Default: Kelvin, Metric: Celsius, Imperial: Fahrenheit
main.pressure
Atmospheric pressure on the sea level, hPa
main.humidity
Humidity, %
main.temp_min
Minimum temperature at the moment. This is minimal currently
                           observed temperature (within large megalopolises and urban areas). Please find more info
here.
Unit Default: Kelvin, Metric: Celsius, Imperial: Fahrenheit
main.temp_max
Maximum temperature at the moment. This is maximal currently
                           observed temperature (within large megalopolises and urban areas). Please find more info
here.
Unit Default: Kelvin, Metric: Celsius, Imperial: Fahrenheit
main.sea_level
Atmospheric pressure on the sea level, hPa
main.grnd_level
Atmospheric pressure on the ground level, hPa
visibility
Visibility, meter. The maximum value of the visibility is 10 km
wind
wind.speed
Wind speed. Unit Default: meter/sec, Metric: meter/sec, Imperial:
                           miles/hour
wind.deg
Wind direction, degrees (meteorological)
wind.gust
Wind gust. Unit Default: meter/sec, Metric: meter/sec, Imperial:
                           miles/hour
clouds
clouds.all
Cloudiness, %
rain
1h
(where available)
Precipitation, mm/h. Please note
                           that only mm/h as units of
                           measurement are available for this parameter
snow
1h
(where available)
Precipitation, mm/h.
                           Please note that only mm/h as units of measurement are available for this parameter
dt
Time of data calculation, unix, UTC
sys
sys.type
Internal parameter
sys.id
Internal parameter
sys.message
Internal parameter
sys.country
Country code (GB, JP etc.)
sys.sunrise
Sunrise time, unix, UTC
sys.sunset
Sunset time, unix, UTC
timezone
Shift in seconds from UTC
id
City ID. Please note that built-in geocoder
                        functionality has been deprecated. Learn more
here
name
City name. Please note that built-in geocoder
                        functionality has been deprecated. Learn more
here
cod
Internal parameter
XML
XML format API response example
<current>
    <city id="3163858" name="Zocca">
    <coord lon="10.99" lat="44.34"/>
    <country>IT</country>
    <timezone>7200</timezone>
    <sun rise="2022-08-30T04:36:27" set="2022-08-30T17:57:28"/>
    </city>
    <temperature value="298.48" min="297.56" max="300.05" unit="kelvin"/>
    <feels_like value="298.74" unit="kelvin"/>
    <humidity value="64" unit="%"/>
    <pressure value="1015" unit="hPa"/>
    <wind>
    <speed value="0.62" unit="m/s" name="Calm"/>
    <gusts value="1.18"/>
    <direction value="349" code="N" name="North"/>
    </wind>
    <clouds value="100" name="overcast clouds"/>
    <visibility value="10000"/>
    <precipitation value="3.37" mode="rain" unit="1h"/>
    <weather number="501" value="moderate rain" icon="10d"/>
    <lastupdate value="2022-08-30T14:45:57"/>
    </current>
XML format API response fields
city
city.id
City ID. Please note that built-in
                              geocoder functionality has been deprecated. Learn more
here
city.name
City name. Please note that built-in
                              geocoder functionality has been deprecated. Learn more
here
city.coord
city.coord.lon
Geo location, longitude
city.coord.lat
Geo location, latitude
city.country
Country code (GB, JP etc.). Please
                              note that built-in geocoder functionality has been deprecated. Learn more
here
timezone
Shift in seconds from UTC
city.sun
city.sun.rise
Sunrise time
city.sun.set
Sunset time
temperature
temperature.value
Temperature
temperature.min
Minimum temperature at the moment of calculation. This is
                           minimal currently observed temperature (within large megalopolises and urban areas), use this
                           parameter optionally. Please find more info
here
temperature.max
Maximum temperature at the moment of calculation. This is
                           maximal currently observed temperature (within large megalopolises and urban areas), use this
                           parameter optionally. Please find more info
here
temperature.unit
Unit of measurements. Possible value is Celsius, Kelvin,
                           Fahrenheit
feels_like
feels_like.value
Temperature. This temperature parameter accounts for the
                           human perception of weather
feels_like.unit
Unit of measurements. Possible value is Celsius, Kelvin,
                           Fahrenheit. Unit Default: Kelvin
humidity
humidity.value
Humidity value
humidity.unit
Humidity units, %
pressure
pressure.value
Pressure value
pressure.unit
Pressure units, hPa
wind
wind.speed
wind.speed.value
Wind speed
wind.speed.unit
Wind speed units, m/s
wind.speed.name
Type of the wind
wind.direction
wind.direction.value
Wind direction, degrees (meteorological)
wind.direction.code
Code of the wind direction. Possible value is WSW, N,
                                 S etc.
wind.direction.name
Full name of the wind direction
clouds
clouds.value
Cloudiness
clouds.name
Name of the cloudiness
visibility
visibility.value
Visibility, meter. The maximum value of the visibility is 10
                           km
precipitation
precipitation.value
Precipitation, mm. Please note that only mm as units of
                           measurement are available for this parameter.
precipitation.mode
Possible values are 'no", name of weather phenomena as
                           'rain', 'snow'
weather
weather.number
Weather condition id
weather.value
Weather condition name
weather.icon
Weather icon id
lastupdate
lastupdate.value
Last time when data was updated
We provide a broad variety of products such as
One
                        Call API 3.0,
Solar Irradiance &
                        Energy Prediction service,
Road
                        Risk API,
Air Pollution
                        API
and solutions
                  for advanced weather parameters like solar irradiance data, UVI, dew point, government weather alerts,
                  etc. Please review our
product list
page and
                  find more info in the product documentation and
pricing
pages.
List of weather condition codes
List of
weather condition codes
with icons
               (range of thunderstorm, drizzle, rain, snow, clouds, atmosphere etc.)
Min/max temperature in current weather API and forecast API
Please do not confuse min/max parameters in our weather APIs.
In
Current weather API
,
Hourly forecast API
and
5 day / 3 hour forecast API
-
temp_min
and
temp_max
are optional parameters mean min / max temperature in the city at the current moment
                  just for your reference. For large cities and megalopolises geographically expanded it might be
                  applicable. In most cases both
temp_min
and
temp_max
parameters have the same volume as
                  'temp'. Please use
temp_min
and
temp_max
parameters in current weather API optionally.
In
16 Day forecast
-
min
and
max
mean maximum
                  and minimum temperature in the day.
Example of current weather API response
"main":{
     "temp":306.15, //current temperature
     "pressure":1013,
     "humidity":44,
     "temp_min":306.15, //min current temperature in the city
     "temp_max":306.15 //max current temperature in the city
   }
For comparison look at example of daily forecast weather API response:
Example of daily forecast weather API response
"dt":1406080800,
  "temp":{
        "day":297.77,  //daily averaged temperature
        "min":293.52, //daily min temperature
        "max":297.77, //daily max temperature
        "night":293.52, //night temperature
        "eve":297.77, //evening temperature
        "morn":297.77}, //morning temperature
Bulk downloading
We provide number of bulk files with current weather and forecasts. The service allows you to regularly
               download current weather and forecast data in JSON format. There is no need to call an API to do this.
More information is on the
Bulk page
.
Examples of bulk files
http://bulk.openweathermap.org/sample/
Other features
Geocoding API
Requesting API calls by geographical coordinates is the most accurate way to specify any location. If
                  you need to convert city names and zip-codes to geo coordinates and the other way around
                  automatically, please use our
Geocoding API
.
Built-in geocoding
Please use
Geocoder API
if you need automatic convert city
                     names and zip-codes to geo coordinates and the other way around.
Please note that
API requests by city name
,
zip-codes
and
city id
have been deprecated. Although they are still available for use,
                        bug fixing and updates are no longer available for this functionality.
Built-in API request by city name
You can call by city name or city name, state code and country code. Please note that searching by
                     states available only for the USA locations.
API call
https://api.openweathermap.org/data/2.5/weather?q={city name}&appid=
{API key}
https://api.openweathermap.org/data/2.5/weather?q={city name},{country code}&appid=
{API key}
https://api.openweathermap.org/data/2.5/weather?q={city name},{state code},{country code}&appid=
{API key}
Parameters
q
required
City name, state code and country code divided by comma, Please refer to
ISO 3166
for the state codes
                           or country codes.
You can specify the parameter not only in English. In this case, the API response should
                              be returned in the same language as the language of requested location name if the
                              location is in our predefined list of more than 200,000 locations.
appid
required
Your unique API key (you can always find it on your account page under the
"API key" tab
)
mode
optional
Response format. Possible values are
xml
and
html
. If you don't
                           use the
mode
parameter format is JSON by default.
Learn
                              more
units
optional
Units of measurement.
standard
,
metric
and
imperial
units are available. If you do not use the
units
parameter,
standard
units will be applied by default.
Learn more
lang
optional
You can use this parameter to get the output in your language.
Learn
                              more
Examples of API calls:
https://api.openweathermap.org/data/2.5/weather?q=London&appid=
{API key}
{
     "coord": {
       "lon": -0.13,
       "lat": 51.51
     },
     "weather": [
       {
         "id": 300,
         "main": "Drizzle",
         "description": "light intensity drizzle",
         "icon": "09d"
       }
     ],
     "base": "stations",
     "main": {
       "temp": 280.32,
       "pressure": 1012,
       "humidity": 81,
       "temp_min": 279.15,
       "temp_max": 281.15
     },
     "visibility": 10000,
     "wind": {
       "speed": 4.1,
       "deg": 80
     },
     "clouds": {
       "all": 90
     },
     "dt": 1485789600,
     "sys": {
       "type": 1,
       "id": 5091,
       "message": 0.0103,
       "country": "GB",
       "sunrise": 1485762037,
       "sunset": 1485794875
     },
     "id": 2643743,
     "name": "London",
     "cod": 200
     }
https://api.openweathermap.org/data/2.5/weather?q=London,uk&appid=
{API key}
{
     "coord": {
       "lon": -0.13,
       "lat": 51.51
     },
     "weather": [
       {
         "id": 300,
         "main": "Drizzle",
         "description": "light intensity drizzle",
         "icon": "09d"
       }
     ],
     "base": "stations",
     "main": {
       "temp": 280.32,
       "pressure": 1012,
       "humidity": 81,
       "temp_min": 279.15,
       "temp_max": 281.15
     },
     "visibility": 10000,
     "wind": {
       "speed": 4.1,
       "deg": 80
     },
     "clouds": {
       "all": 90
     },
     "dt": 1485789600,
     "sys": {
       "type": 1,
       "id": 5091,
       "message": 0.0103,
       "country": "GB",
       "sunrise": 1485762037,
       "sunset": 1485794875
     },
     "id": 2643743,
     "name": "London",
     "cod": 200
     }
There is a possibility to receive a central district of the city/town with its own parameters
                     (geographic coordinates/id/name) in API response.
Example
Built-in API request by city ID
You can make an API call by city ID. List of city ID 'city.list.json.gz' can be downloaded
here
.
We recommend to call API by city ID to get unambiguous result for your city.
API call
https://api.openweathermap.org/data/2.5/weather?id={city id}&appid=
{API key}
Parameters
id
required
City ID. List of city ID 'city.list.json.gz' can be downloaded
here
.
appid
required
Your unique API key (you can always find it on your account page under the
"API key" tab
)
mode
optional
Response format. Possible values are
xml
and
html
. If you don't
                           use the
mode
parameter format is JSON by default.
Learn
                              more
units
optional
Units of measurement.
standard
,
metric
and
imperial
units are available. If you do not use the
units
parameter,
standard
units will be applied by default.
Learn more
lang
optional
You can use this parameter to get the output in your language.
Learn
                              more
Examples of API calls
https://api.openweathermap.org/data/2.5/weather?id=2172797&appid=
{API key}
{
     "coord": {
       "lon": 145.77,
       "lat": -16.92
     },
     "weather": [
       {
         "id": 802,
         "main": "Clouds",
         "description": "scattered clouds",
         "icon": "03n"
       }
     ],
     "base": "stations",
     "main": {
       "temp": 300.15,
       "pressure": 1007,
       "humidity": 74,
       "temp_min": 300.15,
       "temp_max": 300.15
     },
     "visibility": 10000,
     "wind": {
       "speed": 3.6,
       "deg": 160
     },
     "clouds": {
       "all": 40
     },
     "dt": 1485790200,
     "sys": {
       "type": 1,
       "id": 8166,
       "message": 0.2064,
       "country": "AU",
       "sunrise": 1485720272,
       "sunset": 1485766550
     },
     "id": 2172797,
     "name": "Cairns",
     "cod": 200
     }
Built-in API request by ZIP code
Please note if country is not specified then the search works for USA as a default.
API call
https://api.openweathermap.org/data/2.5/weather?zip={zip code},{country code}&appid=
{API key}
Parameters
zip
required
Zip code
appid
required
Your unique API key (you can always find it on your account page under the
"API key" tab
)
mode
optional
Response format. Possible values are
xml
and
html
. If you don't
                           use the
mode
parameter format is JSON by default.
Learn
                              more
units
optional
Units of measurement.
standard
,
metric
and
imperial
units are available. If you do not use the
units
parameter,
standard
units will be applied by default.
Learn more
lang
optional
You can use this parameter to get the output in your language.
Learn
                              more
Examples of API calls
https://api.openweathermap.org/data/2.5/weather?zip=94040,us&appid=
{API key}
{
     "coord": {"lon": -122.08,"lat": 37.39},
     "weather": [
       {
         "id": 800,
         "main": "Clear",
         "description": "clear sky",
         "icon": "01d"
       }
     ],
     "base": "stations",
     "main": {
       "temp": 282.55,
       "feels_like": 281.86,
       "temp_min": 280.37,
       "temp_max": 284.26,
       "pressure": 1023,
       "humidity": 100
     },
     "visibility": 10000,
     "wind": {
       "speed": 1.5,
       "deg": 350
     },
     "clouds": {
       "all": 1
     },
     "dt": 1560350645,
     "sys": {
       "type": 1,
       "id": 5122,
       "message": 0.0139,
       "country": "US",
       "sunrise": 1560343627,
       "sunset": 1560396563
     },
     "timezone": -25200,
     "id": 420006353,
     "name": "Mountain View",
     "cod": 200
     }
Format
Response format. JSON format is used by default. To get data in XML format just set up mode = xml.
Parameters
mode
optional
Response format. Possible values are
xml
and
html
. If you don't use the
mode
parameter format is JSON by default.
Example of API calls
JSON
https://api.openweathermap.org/data/2.5/weather?q=London&appid=
{API key}
{
   "coord":{
      "lon":-0.13,
      "lat":51.51
   },
   "weather":[
      {
         "id":300,
         "main":"Drizzle",
         "description":"light intensity drizzle",
         "icon":"09d"
      }
   ],
   "base":"stations",
   "main":{
      "temp":280.32,
      "pressure":1012,
      "humidity":81,
      "temp_min":279.15,
      "temp_max":281.15
   },
   "visibility":10000,
   "wind":{
      "speed":4.1,
      "deg":80
   },
   "clouds":{
      "all":90
   },
   "dt":1485789600,
   "sys":{
      "type":1,
      "id":5091,
      "message":0.0103,
      "country":"GB",
      "sunrise":1485762037,
      "sunset":1485794875
   },
   "id":2643743,
   "name":"London",
   "cod":200
  }
XML
https://api.openweathermap.org/data/2.5/weather?q=London&mode=xml
<weatherdata>
   <location>
      <name>London</name>
      <type />
      <country>GB</country>
      <timezone />
      <location altitude="0" latitude="51.5085" longitude="-0.1258" geobase="geonames" geobaseid="2643743" />
   </location>
   <credit />
   <meta>
      <lastupdate />
      <calctime>0.0117</calctime>
      <nextupdate />
   </meta>
   <sun rise="2017-01-30T07:40:34" set="2017-01-30T16:47:56" />
   <forecast>
      <time day="2017-01-30">
         <symbol number="500" name="light rain" var="10d" />
         <precipitation value="1.64" type="rain" />
         <windDirection deg="85" code="E" name="East" />
         <windSpeed mps="1.97" name="Light breeze" />
         <temperature day="7" min="4.34" max="7" night="4.91" eve="5.05" morn="7" />
         <pressure unit="hPa" value="1016.99" />
         <humidity value="100" unit="%" />
         <clouds value="few clouds" all="12" unit="%" />
      </time>
      <time day="2017-01-31">
         <symbol number="501" name="moderate rain" var="10d" />
         <precipitation value="9.42" type="rain" />
         <windDirection deg="140" code="SE" name="SouthEast" />
         <windSpeed mps="3.37" name="" />
         <temperature day="9.66" min="6.16" max="11.51" night="10.63" eve="10.85" morn="6.16" />
         <pressure unit="hPa" value="1018.15" />
         <humidity value="100" unit="%" />
         <clouds value="overcast clouds" all="92" unit="%" />
      </time>
      <time day="2017-02-01">
         <symbol number="501" name="moderate rain" var="10d" />
         <precipitation value="9.11" type="rain" />
         <windDirection deg="197" code="SSW" name="South-southwest" />
         <windSpeed mps="5.01" name="Gentle Breeze" />
         <temperature day="9.81" min="9.64" max="10.23" night="10.08" eve="9.81" morn="10.03" />
         <pressure unit="hPa" value="1011.7" />
         <humidity value="99" unit="%" />
         <clouds value="scattered clouds" all="44" unit="%" />
      </time>
      <time day="2017-02-02">
         <symbol number="501" name="moderate rain" var="10d" />
         <precipitation value="3.98" type="rain" />
         <windDirection deg="184" code="S" name="South" />
         <windSpeed mps="8.42" name="Fresh Breeze" />
         <temperature day="11.44" min="8.86" max="11.53" night="8.86" eve="10.99" morn="10.05" />
         <pressure unit="hPa" value="999.34" />
         <humidity value="96" unit="%" />
         <clouds value="overcast clouds" all="92" unit="%" />
      </time>
      <time day="2017-02-03">
         <symbol number="500" name="light rain" var="10d" />
         <precipitation value="1.65" type="rain" />
         <windDirection deg="213" code="SSW" name="South-southwest" />
         <windSpeed mps="8.51" name="Fresh Breeze" />
         <temperature day="10.66" min="8.63" max="10.66" night="8.63" eve="9.14" morn="10.18" />
         <pressure unit="hPa" value="1010.98" />
         <humidity value="0" unit="%" />
         <clouds value="scattered clouds" all="48" unit="%" />
      </time>
      <time day="2017-02-04">
         <symbol number="501" name="moderate rain" var="10d" />
         <precipitation value="7.25" type="rain" />
         <windDirection deg="172" code="S" name="South" />
         <windSpeed mps="10.39" name="Fresh Breeze" />
         <temperature day="8.68" min="7.07" max="10.4" night="8.48" eve="10.4" morn="7.07" />
         <pressure unit="hPa" value="1001.13" />
         <humidity value="0" unit="%" />
         <clouds value="overcast clouds" all="96" unit="%" />
      </time>
      <time day="2017-02-05">
         <symbol number="501" name="moderate rain" var="10d" />
         <precipitation value="4.24" type="rain" />
         <windDirection deg="274" code="W" name="West" />
         <windSpeed mps="6.21" name="Moderate breeze" />
         <temperature day="8.5" min="4.86" max="8.5" night="4.86" eve="6.25" morn="8.26" />
         <pressure unit="hPa" value="995.24" />
         <humidity value="0" unit="%" />
         <clouds value="broken clouds" all="64" unit="%" />
      </time>
   </forecast>
  </weatherd
Units of measurement
standard
,
metric
, and
imperial
units are available.
List of all API parameters with available units
.
Parameters
units
optional
standard
,
metric
,
imperial
. When you do not use the
units
parameter, format is
standard
by default.
Temperature is available in Fahrenheit, Celsius and Kelvin units.
For temperature in Fahrenheit use units=imperial
For temperature in Celsius use units=metric
Temperature in Kelvin is used by default, no need to use units parameter in API call
List of all API parameters with units
openweathermap.org/weather-data
Examples of API calls:
Standard
https://api.openweathermap.org/data/2.5/weather?lat=57&lon=-2.15&appid=
{API key}
{
  "coord": {
    "lon": -2.15,
    "lat": 57
  },
  "weather": [
    {
      "id": 804,
      "main": "Clouds",
      "description": "overcast clouds",
      "icon": "04d"
    }
  ],
  "base": "stations",
  "main": {
    "temp": 281.63,
    "feels_like": 278.05,
    "temp_min": 281.33,
    "temp_max": 282.41,
    "pressure": 1016,
    "humidity": 79,
    "sea_level": 1016,
    "grnd_level": 1016
  },
  "visibility": 10000,
  "wind": {
    "speed": 7.3,
    "deg": 189,
    "gust": 13.48
  },
  "clouds": {
    "all": 100
  },
  "dt": 1647347424,
  "sys": {
    "type": 2,
    "id": 2031790,
    "country": "GB",
    "sunrise": 1647325488,
    "sunset": 1647367827
  },
  "timezone": 0,
  "id": 2641549,
  "name": "Newtonhill",
  "cod": 200
}
metric
https://api.openweathermap.org/data/2.5/weather?lat=57&lon=-2.15&appid=
{API key}
&units=metric
{
  "coord": {
    "lon": -2.15,
    "lat": 57
  },
  "weather": [
    {
      "id": 804,
      "main": "Clouds",
      "description": "overcast clouds",
      "icon": "04d"
    }
  ],
  "base": "stations",
  "main": {
    "temp": 8.48,
    "feels_like": 4.9,
    "temp_min": 8.18,
    "temp_max": 9.26,
    "pressure": 1016,
    "humidity": 79,
    "sea_level": 1016,
    "grnd_level": 1016
  },
  "visibility": 10000,
  "wind": {
    "speed": 7.3,
    "deg": 189,
    "gust": 13.48
  },
  "clouds": {
    "all": 100
  },
  "dt": 1647347424,
  "sys": {
    "type": 2,
    "id": 2031790,
    "country": "GB",
    "sunrise": 1647325488,
    "sunset": 1647367827
  },
  "timezone": 0,
  "id": 2641549,
  "name": "Newtonhill",
  "cod": 200
}
imperial
https://api.openweathermap.org/data/2.5/weather?lat=57&lon=-2.15&appid=
{API key}
&units=imperial
{
  "coord": {
    "lon": -2.15,
    "lat": 57
  },
  "weather": [
    {
      "id": 804,
      "main": "Clouds",
      "description": "overcast clouds",
      "icon": "04d"
    }
  ],
  "base": "stations",
  "main": {
    "temp": 47.26,
    "feels_like": 40.82,
    "temp_min": 46.72,
    "temp_max": 48.67,
    "pressure": 1016,
    "humidity": 79,
    "sea_level": 1016,
    "grnd_level": 1016
  },
  "visibility": 10000,
  "wind": {
    "speed": 16.33,
    "deg": 189,
    "gust": 30.15
  },
  "clouds": {
    "all": 100
  },
  "dt": 1647347504,
  "sys": {
    "type": 2,
    "id": 2031790,
    "country": "GB",
    "sunrise": 1647325488,
    "sunset": 1647367827
  },
  "timezone": 0,
  "id": 2641549,
  "name": "Newtonhill",
  "cod": 200
}
Multilingual support
You can use the
lang
parameter to get the output in your language.
Translation is applied for the
city name
and
description
fields.
API call
https://api.openweathermap.org/data/2.5/weather?lat={lat}&lon={lon}&appid=
{API key}
⟨={lang}
Parameters
lang
optional
Language code
Examples of API calls
https://api.openweathermap.org/data/2.5/weather?id=524901⟨=fr&appid=
{API key}
{
  "coord": {
    "lon": 37.62,
    "lat": 55.75
  },
  "weather": [
    {
      "id": 501,
      "main": "Rain",
      "description": "pluie modérée",
      "icon": "10d"
    }
  ],
  "base": "stations",
  "main": {
    "temp": 295.48,
    "feels_like": 295.41,
    "temp_min": 295.15,
    "temp_max": 296.15,
    "pressure": 1018,
    "humidity": 60
  },
  "visibility": 10000,
  "wind": {
    "speed": 2,
    "deg": 260
  },
  "rain": {
    "1h": 1.23
  },
  "clouds": {
    "all": 100
  },
  "dt": 1599492273,
  "sys": {
    "type": 1,
    "id": 9029,
    "country": "RU",
    "sunrise": 1599446791,
    "sunset": 1599494929
  },
  "timezone": 10800,
  "id": 524901,
  "name": "Moscou",
  "cod": 200
  }
We support the following languages that you can use with the corresponded lang values:
sq
Albanian
af
Afrikaans
ar
Arabic
az
Azerbaijani
eu
Basque
be
Belarusian
bg
Bulgarian
ca
Catalan
zh_cn
Chinese Simplified
zh_tw
Chinese Traditional
hr
Croatian
cz
Czech
da
Danish
nl
Dutch
en
English
fi
Finnish
fr
French
gl
Galician
de
German
el
Greek
he
Hebrew
hi
Hindi
hu
Hungarian
is
Icelandic
id
Indonesian
it
Italian
ja
Japanese
kr
Korean
ku
Kurmanji (Kurdish)
la
Latvian
lt
Lithuanian
mk
Macedonian
no
Norwegian
fa
Persian (Farsi)
pl
Polish
pt
Portuguese
pt_br
Português Brasil
ro
Romanian
ru
Russian
sr
Serbian
sk
Slovak
sl
Slovenian
sp, es
Spanish
sv, se
Swedish
th
Thai
tr
Turkish
ua, uk
Ukrainian
vi
Vietnamese
zu
Zulu
Call back function for JavaScript code
To use JavaScript code you can transfer
callback
functionName to JSONP callback.
Example of API call
https://api.openweathermap.org/data/2.5/weather?q=London,uk&callback=test&appid=
{API key}
test(
      {
         "coord":{
            "lon":-0.13,
            "lat":51.51
         },
         "weather":[
            {
               "id":300,
               "main":"Drizzle",
               "description":"light intensity drizzle",
               "icon":"09d"
            }
         ],
         "base":"stations",
         "main":{
            "temp":280.32,
            "pressure":1012,
            "humidity":81,
            "temp_min":279.15,
            "temp_max":281.15
         },
         "visibility":10000,
         "wind":{
            "speed":4.1,
            "deg":80
         },
         "clouds":{
            "all":90
         },
         "dt":1485789600,
         "sys":{
            "type":1,
            "id":5091,
            "message":0.0103,
            "country":"GB",
            "sunrise":1485762037,
            "sunset":1485794875
         },
         "id":2643743,
         "name":"London",
         "cod":200
      }
   )


Content from https://openweathermap.org/forecast5:

5 day weather forecast
Home
API
5 day weather forecast
Product concept
5 day forecast is available at any location on the globe.
          It includes weather forecast data with 3-hour step. Forecast is available in JSON or XML format.
Call 5 day / 3 hour forecast data
How to make an API call
You can search weather forecast for 5 days with data every 3 hours by geographic coordinates. All weather
            data can be obtained in JSON and XML formats.
API call
api.openweathermap.org/data/2.5/forecast?lat={lat}&lon={lon}&appid=
{API key}
Parameters
lat
required
Latitude. If you need the geocoder to automatic convert city names and zip-codes to geo coordinates
                and the other way around, please use our
Geocoding API
lon
required
Longitude. If you need the geocoder to automatic convert city names and zip-codes to geo coordinates
                and the other way around, please use our
Geocoding API
appid
required
Your unique API key (you can always find it on your account page under the
"API key" tab
)
units
optional
Units of measurement.
standard
,
metric
and
imperial
units are
                available. If you do not use the
units
parameter,
standard
units will be
                applied by default.
Learn more
mode
optional
Response format. JSON format is used by default. To get data in XML format use
mode=xml
.
Learn more
cnt
optional
A number of timestamps, which will be returned in the API response.
Learn more
units
optional
Units of measurement.
standard
,
metric
and
imperial
units are
                available. If you do not use the
units
parameter,
standard
units will be
                applied by default.
Learn more
lang
optional
You can use the
lang
parameter to get the output in your language.
Learn
                  more
Please use
Geocoder API
if you need automatic convert city
              names and zip-codes to geo coordinates and the other way around.
Please note that
built-in geocoder
has been deprecated. Although it is
              still available for use, bug fixing and updates are no longer available for this functionality.
Examples of API calls
api.openweathermap.org/data/2.5/forecast?lat=44.34&lon=10.99&appid=
{API key}
{
  "cod": "200",
  "message": 0,
  "cnt": 40,
  "list": [
    {
      "dt": 1661871600,
      "main": {
        "temp": 296.76,
        "feels_like": 296.98,
        "temp_min": 296.76,
        "temp_max": 297.87,
        "pressure": 1015,
        "sea_level": 1015,
        "grnd_level": 933,
        "humidity": 69,
        "temp_kf": -1.11
      },
      "weather": [
        {
          "id": 500,
          "main": "Rain",
          "description": "light rain",
          "icon": "10d"
        }
      ],
      "clouds": {
        "all": 100
      },
      "wind": {
        "speed": 0.62,
        "deg": 349,
        "gust": 1.18
      },
      "visibility": 10000,
      "pop": 0.32,
      "rain": {
        "3h": 0.26
      },
      "sys": {
        "pod": "d"
      },
      "dt_txt": "2022-08-30 15:00:00"
    },
    {
      "dt": 1661882400,
      "main": {
        "temp": 295.45,
        "feels_like": 295.59,
        "temp_min": 292.84,
        "temp_max": 295.45,
        "pressure": 1015,
        "sea_level": 1015,
        "grnd_level": 931,
        "humidity": 71,
        "temp_kf": 2.61
      },
      "weather": [
        {
          "id": 500,
          "main": "Rain",
          "description": "light rain",
          "icon": "10n"
        }
      ],
      "clouds": {
        "all": 96
      },
      "wind": {
        "speed": 1.97,
        "deg": 157,
        "gust": 3.39
      },
      "visibility": 10000,
      "pop": 0.33,
      "rain": {
        "3h": 0.57
      },
      "sys": {
        "pod": "n"
      },
      "dt_txt": "2022-08-30 18:00:00"
    },
    {
      "dt": 1661893200,
      "main": {
        "temp": 292.46,
        "feels_like": 292.54,
        "temp_min": 290.31,
        "temp_max": 292.46,
        "pressure": 1015,
        "sea_level": 1015,
        "grnd_level": 931,
        "humidity": 80,
        "temp_kf": 2.15
      },
      "weather": [
        {
          "id": 500,
          "main": "Rain",
          "description": "light rain",
          "icon": "10n"
        }
      ],
      "clouds": {
        "all": 68
      },
      "wind": {
        "speed": 2.66,
        "deg": 210,
        "gust": 3.58
      },
      "visibility": 10000,
      "pop": 0.7,
      "rain": {
        "3h": 0.49
      },
      "sys": {
        "pod": "n"
      },
      "dt_txt": "2022-08-30 21:00:00"
    },
    ....
    {
      "dt": 1662292800,
      "main": {
        "temp": 294.93,
        "feels_like": 294.83,
        "temp_min": 294.93,
        "temp_max": 294.93,
        "pressure": 1018,
        "sea_level": 1018,
        "grnd_level": 935,
        "humidity": 64,
        "temp_kf": 0
      },
      "weather": [
        {
          "id": 804,
          "main": "Clouds",
          "description": "overcast clouds",
          "icon": "04d"
        }
      ],
      "clouds": {
        "all": 88
      },
      "wind": {
        "speed": 1.14,
        "deg": 17,
        "gust": 1.57
      },
      "visibility": 10000,
      "pop": 0,
      "sys": {
        "pod": "d"
      },
      "dt_txt": "2022-09-04 12:00:00"
    }
  ],
  "city": {
    "id": 3163858,
    "name": "Zocca",
    "coord": {
      "lat": 44.34,
      "lon": 10.99
    },
    "country": "IT",
    "population": 4593,
    "timezone": 7200,
    "sunrise": 1661834187,
    "sunset": 1661882248
  }
}
API response
If you do not see some of the parameters in your API response it means that these weather phenomena are just
          not happened for the time of measurement for the city or location chosen. Only really measured or calculated
          data is displayed in API response.
JSON
JSON format API response example
{
  "cod": "200",
  "message": 0,
  "cnt": 40,
  "list": [
    {
      "dt": 1661871600,
      "main": {
        "temp": 296.76,
        "feels_like": 296.98,
        "temp_min": 296.76,
        "temp_max": 297.87,
        "pressure": 1015,
        "sea_level": 1015,
        "grnd_level": 933,
        "humidity": 69,
        "temp_kf": -1.11
      },
      "weather": [
        {
          "id": 500,
          "main": "Rain",
          "description": "light rain",
          "icon": "10d"
        }
      ],
      "clouds": {
        "all": 100
      },
      "wind": {
        "speed": 0.62,
        "deg": 349,
        "gust": 1.18
      },
      "visibility": 10000,
      "pop": 0.32,
      "rain": {
        "3h": 0.26
      },
      "sys": {
        "pod": "d"
      },
      "dt_txt": "2022-08-30 15:00:00"
    },
    {
      "dt": 1661882400,
      "main": {
        "temp": 295.45,
        "feels_like": 295.59,
        "temp_min": 292.84,
        "temp_max": 295.45,
        "pressure": 1015,
        "sea_level": 1015,
        "grnd_level": 931,
        "humidity": 71,
        "temp_kf": 2.61
      },
      "weather": [
        {
          "id": 500,
          "main": "Rain",
          "description": "light rain",
          "icon": "10n"
        }
      ],
      "clouds": {
        "all": 96
      },
      "wind": {
        "speed": 1.97,
        "deg": 157,
        "gust": 3.39
      },
      "visibility": 10000,
      "pop": 0.33,
      "rain": {
        "3h": 0.57
      },
      "sys": {
        "pod": "n"
      },
      "dt_txt": "2022-08-30 18:00:00"
    },
    {
      "dt": 1661893200,
      "main": {
        "temp": 292.46,
        "feels_like": 292.54,
        "temp_min": 290.31,
        "temp_max": 292.46,
        "pressure": 1015,
        "sea_level": 1015,
        "grnd_level": 931,
        "humidity": 80,
        "temp_kf": 2.15
      },
      "weather": [
        {
          "id": 500,
          "main": "Rain",
          "description": "light rain",
          "icon": "10n"
        }
      ],
      "clouds": {
        "all": 68
      },
      "wind": {
        "speed": 2.66,
        "deg": 210,
        "gust": 3.58
      },
      "visibility": 10000,
      "pop": 0.7,
      "rain": {
        "3h": 0.49
      },
      "sys": {
        "pod": "n"
      },
      "dt_txt": "2022-08-30 21:00:00"
    },
    ....
    {
      "dt": 1662292800,
      "main": {
        "temp": 294.93,
        "feels_like": 294.83,
        "temp_min": 294.93,
        "temp_max": 294.93,
        "pressure": 1018,
        "sea_level": 1018,
        "grnd_level": 935,
        "humidity": 64,
        "temp_kf": 0
      },
      "weather": [
        {
          "id": 804,
          "main": "Clouds",
          "description": "overcast clouds",
          "icon": "04d"
        }
      ],
      "clouds": {
        "all": 88
      },
      "wind": {
        "speed": 1.14,
        "deg": 17,
        "gust": 1.57
      },
      "visibility": 10000,
      "pop": 0,
      "sys": {
        "pod": "d"
      },
      "dt_txt": "2022-09-04 12:00:00"
    }
  ],
  "city": {
    "id": 3163858,
    "name": "Zocca",
    "coord": {
      "lat": 44.34,
      "lon": 10.99
    },
    "country": "IT",
    "population": 4593,
    "timezone": 7200,
    "sunrise": 1661834187,
    "sunset": 1661882248
  }
}
JSON format API response fields
cod
Internal parameter
message
Internal parameter
cnt
A number of timestamps returned in the API response
list
list.dt
Time of data forecasted, unix, UTC
list.main
list.main.temp
Temperature. Unit Default: Kelvin, Metric: Celsius, Imperial:
                    Fahrenheit
list.main.feels_like
This temperature parameter accounts for the human perception
                    of weather. Unit Default: Kelvin, Metric: Celsius, Imperial: Fahrenheit
list.main.temp_min
Minimum temperature at the moment of calculation. This is
                    minimal forecasted temperature (within large megalopolises and urban areas), use this parameter
                    optionally. Please find more info
here
. Unit Default: Kelvin, Metric:
                    Celsius, Imperial: Fahrenheit
list.main.temp_max
Maximum temperature at the moment of calculation. This is
                    maximal forecasted temperature (within large megalopolises and urban areas), use this parameter
                    optionally. Please find more info
here
. Unit Default: Kelvin, Metric:
                    Celsius, Imperial: Fahrenheit
list.main.pressure
Atmospheric pressure on the sea level by default, hPa
list.main.sea_level
Atmospheric pressure on the sea level, hPa
list.main.grnd_level
Atmospheric pressure on the ground level, hPa
list.main.humidity
Humidity, %
list.main.temp_kf
Internal parameter
list.weather
list.weather.id
Weather condition id
list.weather.main
Group of weather parameters (Rain, Snow, Clouds etc.)
list.weather.description
Weather condition within the group. Please find more
here.
You can get the output in your language.
Learn
                      more
list.weather.icon
Weather icon id
list.clouds
list.clouds.all
Cloudiness, %
list.wind
list.wind.speed
Wind speed. Unit Default: meter/sec, Metric: meter/sec, Imperial:
                    miles/hour
list.wind.deg
Wind direction, degrees (meteorological)
list.wind.gust
Wind gust. Unit Default: meter/sec, Metric: meter/sec, Imperial:
                    miles/hour
list.visibility
Average visibility, metres. The maximum value of the visibility is
                10km
list.pop
Probability of precipitation. The values of the parameter vary between 0 and
                1, where 0 is equal to 0%, 1 is equal to 100%
list.rain
list.rain.3h
Rain volume for last 3 hours, mm. Please note that only mm as units
                    of measurement are available for this parameter
list.snow
list.snow.3h
Snow volume for last 3 hours. Please note that only mm as units of
                    measurement are available for this parameter
list.sys
list.sys.pod
Part of the day (n - night, d - day)
list.dt_txt
Time of data forecasted, ISO, UTC
city
city.id
City ID. Please note that built-in geocoder
                  functionality has been deprecated. Learn more
here
city.name
City name. Please note that built-in geocoder
                  functionality has been deprecated. Learn more
here
city.coord
city.coord.lat
Geo location, latitude
city.coord.lon
Geo location, longitude
city.country
Country code (GB, JP etc.). Please note that
                  built-in geocoder functionality has been deprecated. Learn more
here
city.population
City population
city.timezone
Shift in seconds from UTC
city.sunrise
Sunrise time, Unix, UTC
city.sunset
Sunset time, Unix, UTC
XML
XML format API response example
<weatherdata>
<location>
<name>Zocca</name>
<type/>
<country>IT</country>
<timezone>7200</timezone>
<location altitude="0" latitude="44.34" longitude="10.99" geobase="geonames" geobaseid="3163858"/>
</location>
<credit/>
<meta>
<lastupdate/>
<calctime>0</calctime>
<nextupdate/>
</meta>
<sun rise="2022-08-30T04:36:27" set="2022-08-30T17:57:28"/>
<forecast>
<time from="2022-08-30T12:00:00" to="2022-08-30T15:00:00">
<symbol number="500" name="light rain" var="10d"/>
<precipitation probability="0.32" unit="3h" value="0.26" type="rain"/>
<windDirection deg="349" code="N" name="North"/>
<windSpeed mps="0.62" unit="m/s" name="Calm"/>
<windGust gust="1.18" unit="m/s"/>
<temperature unit="kelvin" value="298.08" min="297.87" max="298.08"/>
<feels_like value="298.01" unit="kelvin"/>
<pressure unit="hPa" value="1015"/>
<humidity value="53" unit="%"/>
<clouds value="overcast clouds" all="100" unit="%"/>
<visibility value="10000"/>
</time>
<time from="2022-08-30T15:00:00" to="2022-08-30T18:00:00">
<symbol number="500" name="light rain" var="10n"/>
<precipitation probability="0.33" unit="3h" value="0.57" type="rain"/>
<windDirection deg="157" code="SSE" name="South-southeast"/>
<windSpeed mps="1.97" unit="m/s" name="Light breeze"/>
<windGust gust="3.39" unit="m/s"/>
<temperature unit="kelvin" value="296.33" min="292.84" max="296.33"/>
<feels_like value="296.27" unit="kelvin"/>
<pressure unit="hPa" value="1015"/>
<humidity value="60" unit="%"/>
<clouds value="overcast clouds" all="96" unit="%"/>
<visibility value="10000"/>
</time>
<time from="2022-08-30T18:00:00" to="2022-08-30T21:00:00">
<symbol number="500" name="light rain" var="10n"/>
<precipitation probability="0.7" unit="3h" value="0.49" type="rain"/>
<windDirection deg="210" code="SSW" name="South-southwest"/>
<windSpeed mps="2.66" unit="m/s" name="Light breeze"/>
<windGust gust="3.58" unit="m/s"/>
<temperature unit="kelvin" value="292.9" min="290.31" max="292.9"/>
<feels_like value="292.89" unit="kelvin"/>
<pressure unit="hPa" value="1015"/>
<humidity value="75" unit="%"/>
<clouds value="broken clouds" all="68" unit="%"/>
<visibility value="10000"/>
</time>
...
<time from="2022-09-04T09:00:00" to="2022-09-04T12:00:00">
<symbol number="804" name="overcast clouds" var="04d"/>
<precipitation probability="0"/>
<windDirection deg="17" code="NNE" name="North-northeast"/>
<windSpeed mps="1.14" unit="m/s" name="Calm"/>
<windGust gust="1.57" unit="m/s"/>
<temperature unit="kelvin" value="294.93" min="294.93" max="294.93"/>
<feels_like value="294.83" unit="kelvin"/>
<pressure unit="hPa" value="1018"/>
<humidity value="64" unit="%"/>
<clouds value="overcast clouds" all="88" unit="%"/>
<visibility value="10000"/>
</time>
</forecast>
</weatherdata>
XML format API response fields
location
location.name
City name. Please note that built-in
                    geocoder functionality has been deprecated. Learn more
here
location.type
Internal parameter
location.country
Country code (GB, JP etc.). Please
                    note that built-in geocoder functionality has been deprecated. Learn more
here
location.timezone
Shift in seconds from UTC
location.location
location.location.altitude
Geo location, altitude above the sea level
location.location.latitude
Geo location, latitude
location.location.longitude
Geo location, longitude
location.location.geobase
Internal parameter
location.location.geobaseid
Internal parameter
meta
meta.lastupdate
Prototype parameter
meta.calctime
Speed of data calculation
meta.nextupdate
Prototype parameter
sun
sun.rise
Sunrise time
sun.set
Sunset time
forecast
forecast.time
forecast.time.from
Beginning of the period of data forecasted
forecast.time.to
End of the period of data forecasted
forecast.symbol
forecast.symbol.number
Weather condition id
forecast.symbol.name
Weather condition
forecast.symbol.var
Weather icon id
forecast.precipitation
forecast.precipitation.probability
Probability of precipitation. The values of
                      the parameter vary between 0 and 1, where 0 is equal to 0%, 1 is equal to 100%
forecast.precipitation.unit
Period of measurements. Possible value is 1 hour, 3
                      hours
forecast.precipitation.value
Precipitation volume for the last 3 hours, mm.
                      Please note that only mm as units of measurement are available for this parameter
forecast.precipitation.type
Type of precipitation. Possible value is rain, snow
forecast.windDirection
forecast.windDirection.deg
Wind direction, degrees (meteorological)
forecast.windDirection.code
Code of the wind direction. Possible value is WSW,
                      N, S etc.
forecast.windDirection.name
Full name of the wind direction
forecast.windSpeed
forecast.windSpeed.mps
Wind speed, meters per second
forecast.windSpeed.unit
Wind speed units, m/s
forecast.windSpeed.name
Type of wind
forecast.windGust
forecast.windGust.gust
Wind gust, meters per second
forecast.windGust.unit
Wind gust units, m/s
forecast.temperature
forecast.temperature.unit
Unit of measurements. Possible value is Celsius,
                      Kelvin, Fahrenhei.
forecast.temperature.value
Temperature
forecast.temperature.min
Minimum temperature at the moment of calculation. This
                      is minimal forecasted temperature (within large megalopolises and urban areas), use this
                      parameter optionally. Please find more info
here
forecast.temperature.max
Maximum temperature at the moment of calculation. This
                      is maximal forecasted temperature (within large megalopolises and urban areas), use this
                      parameter optionally. Please find more info
here
forecast.feels_like
forecast.feels_like.unit
Unit of measurements. Possible value is Celsius,
                      Kelvin, Fahrenheit. Unit Default: Kelvin
forecast.feels_like.value
Temperature. This temperature parameter accounts for
                      the human perception of weather
forecast.pressure
forecast.pressure.unit
hPa
forecast.pressure.value
Pressure value
forecast.humidity
forecast.humidity.unit
%
forecast.humidity.value
Humidity value
forecast.clouds
forecast.pressure.value
Name of the cloudiness
forecast.pressure.all
Cloudiness
forecast.pressure.unit
%
forecast.visibility
forecast.visibility.value
Average visibility, metres. The maximum value of the
                      visibility is 10km
We provide a broad variety of products such as
One
                  Call API 3.0,
Solar Irradiance & Energy
                  Prediction service,
Road Risk
                  API,
Air Pollution API
and solutions for
              advanced weather parameters like solar irradiance data, UVI, dew point, government weather alerts,
              etc. Please review our
product list
page and
              find more info in the product documentation and
pricing
pages.
List of weather condition codes
List of
weather condition codes
with icons
            (range of thunderstorm, drizzle, rain, snow, clouds, atmosphere etc.)
Min/max temperature in current weather API and forecast API
Please do not confuse min/max parameters in our weather APIs.
In
5 day / 3 hour forecast API
,
Hourly
                forecast API
and
Current weather API
-
temp_min
and
temp_max
are optional parameters mean min / max temperature in the city at the current
              moment just for your reference. For large cities and megalopolises geographically expanded it might be
              applicable. In most cases both
temp_min
and
temp_max
parameters have the same volume as
              'temp'. Please use
temp_min
and
temp_max
parameters in current weather API optionally.
In
16 Day forecast
-
min
and
max
mean
              maximum and minimum temperature in the day.
Example of Current Weather API response
"main":{
  "temp":306.15, //current temperature
  "pressure":1013,
  "humidity":44,
  "temp_min":30.15, //min current temperature in the city
  "temp_max":306.15 //max current temperature in the city
},
For comparison take a look at example of Daily Forecast Weather API response:
Daily Forecast Weather API response
"dt":1406080800,
"temp":{
        "day":297.77,  //daily averaged temperature
        "min":293.52, //daily min temperature
        "max":297.77, //daily max temperature
        "night":293.52, //night temperature
        "eve":297.77, //evening temperature
        "morn":297.77}, //morning temperature
Bulk downloading
We provide number of bulk files with current weather and forecasts. More information is on the
Bulk page
.
Bulk downloading is available not for all accounts. To get more information please refer to the
Price page.
Examples of bulk files
http://bulk.openweathermap.org/sample/
Other features
Geocoding API
Requesting API calls by geographical coordinates is the most accurate way to specify any location. If
            you need to convert city names and zip-codes to geo coordinates and the other way around automatically,
            please use our
Geocoding API
.
Built-in geocoding
Please use
Geocoder API
if you need automatic convert city
              names and zip-codes to geo coordinates and the other way around.
Please note that
API requests by city name
,
zip-codes
and
city id
have been deprecated. Although they are still available for use, bug
                fixing and updates are no longer available for this functionality.
Built-in API request by city name
You can search weather forecast for 5 days with data every 3 hours by city name. All weather data can
              be obtained in JSON and XML formats.
API call
api.openweathermap.org/data/2.5/forecast?q={city name}&appid=
{API key}
api.openweathermap.org/data/2.5/forecast?q={city name},{country code}&appid=
{API key}
api.openweathermap.org/data/2.5/forecast?q={city name},{state code},{country code}&appid=
{API key}
Parameters
q
required
City name, state code and country code divided by comma, use ISO 3166 country codes.
You can specify the parameter not only in English. In this case, the API response should be
                    returned in the same language as the language of requested location name if the location is in
                    our predefined list of more than 200,000 locations.
appid
required
Your unique API key (you can always find it on your account page under the
"API key" tab
)
mode
optional
Response format. JSON format is used by default. To get data in XML format use
mode=xml
.
Learn more
cnt
optional
A number of timestamps, which will be returned in the API response.
Learn
                    more
units
optional
Units of measurement.
standard
,
metric
and
imperial
units
                  are available. If you do not use the
units
parameter,
standard
units
                  will be applied by default.
Learn more
lang
optional
You can use the
lang
parameter to get the output in your language.
Learn more
Examples of API calls
api.openweathermap.org/data/2.5/forecast?q=London,us&mode=xml&appid=
{API key}
<weatherdata>
<location>
<name>Shuzenji</name>
<type/>
<country>JP</country>
<timezone>32400</timezone>
<location altitude="0" latitude="35" longitude="139" geobase="geonames" geobaseid="1851632"/>
</location>
<credit/>
<meta>
<lastupdate/>
<calctime>0</calctime>
<nextupdate/>
</meta>
<sun rise="2022-03-14T20:55:33" set="2022-03-15T08:50:43"/>
<forecast>
<time from="2022-03-15T09:00:00" to="2022-03-15T12:00:00">
<symbol number="800" name="clear sky" var="01n"/>
<precipitation probability="0"/>
<windDirection deg="84" code="E" name="East"/>
<windSpeed mps="3.82" unit="m/s" name="Gentle Breeze"/>
<windGust gust="6.53" unit="m/s"/>
<temperature unit="kelvin" value="286.55" min="286.32" max="286.55"/>
<feels_like value="285.2" unit="kelvin"/>
<pressure unit="hPa" value="1008"/>
<humidity value="48" unit="%"/>
<clouds value="clear sky" all="0" unit="%"/>
<visibility value="10000"/>
</time>
    ....
<time from="2022-03-20T06:00:00" to="2022-03-20T09:00:00">
<symbol number="803" name="broken clouds" var="04n"/>
<precipitation probability="0"/>
<windDirection deg="140" code="SE" name="SouthEast"/>
<windSpeed mps="2.13" unit="m/s" name="Light breeze"/>
<windGust gust="3.3" unit="m/s"/>
<temperature unit="kelvin" value="281.23" min="281.23" max="281.23"/>
<feels_like value="279.99" unit="kelvin"/>
<pressure unit="hPa" value="1012"/>
<humidity value="78" unit="%"/>
<clouds value="broken clouds" all="74" unit="%"/>
<visibility value="10000"/>
</time>
</forecast>
</weatherdata>
Please note, that searching by states available only for the USA locations.
There is a possibility to receive a central district of the city/town with its own parameters
                (geographic coordinates/id/name) in API response. Please see the example below.
api.openweathermap.org/data/2.5/forecast?q=München,DE&appid=
{API key}
{
  "cod": "200",
  "message": 0,
  "cnt": 40,
  "list": [
    {
      "dt": 1647345600,
      "main": {
        "temp": 284.83,
        "feels_like": 283.59,
        "temp_min": 284.83,
        "temp_max": 285.69,
        "pressure": 1013,
        "sea_level": 1013,
        "grnd_level": 964,
        "humidity": 59,
        "temp_kf": -0.86
      },
      "weather": [
        {
          "id": 804,
          "main": "Clouds",
          "description": "overcast clouds",
          "icon": "04d"
        }
      ],
      "clouds": {
        "all": 100
      },
      "wind": {
        "speed": 0.7,
        "deg": 288,
        "gust": 2.1
      },
      "visibility": 10000,
      "pop": 0,
      "sys": {
        "pod": "d"
      },
      "dt_txt": "2022-03-15 12:00:00"
    },
    {
      "dt": 1647356400,
      "main": {
        "temp": 285.09,
        "feels_like": 283.85,
        "temp_min": 285.09,
        "temp_max": 285.6,
        "pressure": 1016,
        "sea_level": 1016,
        "grnd_level": 961,
        "humidity": 58,
        "temp_kf": -0.51
      },
      "weather": [
        {
          "id": 804,
          "main": "Clouds",
          "description": "overcast clouds",
          "icon": "04d"
        }
      ],
      "clouds": {
        "all": 100
      },
      "wind": {
        "speed": 2.24,
        "deg": 26,
        "gust": 2.56
      },
      "visibility": 10000,
      "pop": 0.26,
      "sys": {
        "pod": "d"
      },
      "dt_txt": "2022-03-15 15:00:00"
    },
    {
      "dt": 1647367200,
      "main": {
        "temp": 283.03,
        "feels_like": 281.89,
        "temp_min": 282.13,
        "temp_max": 283.03,
        "pressure": 1020,
        "sea_level": 1020,
        "grnd_level": 961,
        "humidity": 71,
        "temp_kf": 0.9
      },
      "weather": [
        {
          "id": 804,
          "main": "Clouds",
          "description": "overcast clouds",
          "icon": "04n"
        }
      ],
      "clouds": {
        "all": 100
      },
      "wind": {
        "speed": 2.41,
        "deg": 169,
        "gust": 4.81
      },
      "visibility": 10000,
      "pop": 0.31,
      "sys": {
        "pod": "n"
      },
      "dt_txt": "2022-03-15 18:00:00"
    },
      ....
     {
      "dt": 1647766800,
      "main": {
        "temp": 278.26,
        "feels_like": 274.33,
        "temp_min": 278.26,
        "temp_max": 278.26,
        "pressure": 1030,
        "sea_level": 1030,
        "grnd_level": 966,
        "humidity": 54,
        "temp_kf": 0
      },
      "weather": [
        {
          "id": 801,
          "main": "Clouds",
          "description": "few clouds",
          "icon": "02d"
        }
      ],
      "clouds": {
        "all": 18
      },
      "wind": {
        "speed": 5.66,
        "deg": 89,
        "gust": 8.01
      },
      "visibility": 10000,
      "pop": 0,
      "sys": {
        "pod": "d"
      },
      "dt_txt": "2022-03-20 09:00:00"
    }
  ],
  "city": {
    "id": 2867714,
    "name": "Munich",
    "coord": {
      "lat": 48.1374,
      "lon": 11.5755
    },
    "country": "DE",
    "population": 1260391,
    "timezone": 3600,
    "sunrise": 1647322046,
    "sunset": 1647364681
  }
}
Built-in API request by city ID
You can search weather forecast for 5 days with data every 3 hours by city ID. All weather data can
              be obtained in JSON and XML formats.
List of city ID "city.list.json.gz" can be downloaded
here
.
We recommend to call API by city ID to get unambiguous result for your city.
API call
api.openweathermap.org/data/2.5/forecast?id={city ID}&appid=
{API key}
Parameters
id
required
City ID. The list of city IDs 'city.list.json.gz' can be downloaded
here
.
appid
required
Your unique API key (you can always find it on your account page under the
"API key" tab
)
mode
optional
Response format. JSON format is used by default. To get data in XML format use
mode=xml
.
Learn more
cnt
optional
A number of timestamps, which will be returned in the API response.
Learn
                    more
units
optional
Units of measurement.
standard
,
metric
and
imperial
units
                  are available. If you do not use the
units
parameter,
standard
units
                  will be applied by default.
Learn more
lang
optional
You can use the
lang
parameter to get the output in your language.
Learn more
Examples of API calls
api.openweathermap.org/data/2.5/forecast?id=524901&appid=
{API key}
{
  "cod": "200",
  "message": 0,
  "cnt": 40,
  "list": [
    {
      "dt": 1647345600,
      "main": {
        "temp": 274.05,
        "feels_like": 270.56,
        "temp_min": 272.67,
        "temp_max": 274.05,
        "pressure": 1035,
        "sea_level": 1035,
        "grnd_level": 1016,
        "humidity": 56,
        "temp_kf": 1.38
      },
      "weather": [
        {
          "id": 800,
          "main": "Clear",
          "description": "clear sky",
          "icon": "01d"
        }
      ],
      "clouds": {
        "all": 8
      },
      "wind": {
        "speed": 3.2,
        "deg": 28,
        "gust": 4.62
      },
      "visibility": 10000,
      "pop": 0,
      "sys": {
        "pod": "d"
      },
      "dt_txt": "2022-03-15 12:00:00"
    },
    {
      "dt": 1647356400,
      "main": {
        "temp": 272.74,
        "feels_like": 270.19,
        "temp_min": 270.12,
        "temp_max": 272.74,
        "pressure": 1035,
        "sea_level": 1035,
        "grnd_level": 1016,
        "humidity": 64,
        "temp_kf": 2.62
      },
      "weather": [
        {
          "id": 801,
          "main": "Clouds",
          "description": "few clouds",
          "icon": "02d"
        }
      ],
      "clouds": {
        "all": 23
      },
      "wind": {
        "speed": 2.02,
        "deg": 46,
        "gust": 4.27
      },
      "visibility": 10000,
      "pop": 0,
      "sys": {
        "pod": "d"
      },
      "dt_txt": "2022-03-15 15:00:00"
    },
    {
      "dt": 1647367200,
      "main": {
        "temp": 269.89,
        "feels_like": 266.36,
        "temp_min": 267.81,
        "temp_max": 269.89,
        "pressure": 1036,
        "sea_level": 1036,
        "grnd_level": 1017,
        "humidity": 78,
        "temp_kf": 2.08
      },
      "weather": [
        {
          "id": 802,
          "main": "Clouds",
          "description": "scattered clouds",
          "icon": "03n"
        }
      ],
      "clouds": {
        "all": 33
      },
      "wind": {
        "speed": 2.42,
        "deg": 58,
        "gust": 7.57
      },
      "visibility": 10000,
      "pop": 0,
      "sys": {
        "pod": "n"
      },
      "dt_txt": "2022-03-15 18:00:00"
    },
   ....
        {
      "dt": 1647766800,
      "main": {
        "temp": 274.5,
        "feels_like": 272.12,
        "temp_min": 274.5,
        "temp_max": 274.5,
        "pressure": 1044,
        "sea_level": 1044,
        "grnd_level": 1025,
        "humidity": 72,
        "temp_kf": 0
      },
      "weather": [
        {
          "id": 800,
          "main": "Clear",
          "description": "clear sky",
          "icon": "01d"
        }
      ],
      "clouds": {
        "all": 10
      },
      "wind": {
        "speed": 2.13,
        "deg": 305,
        "gust": 3.26
      },
      "visibility": 10000,
      "pop": 0,
      "sys": {
        "pod": "d"
      },
      "dt_txt": "2022-03-20 09:00:00"
    }
  ],
  "city": {
    "id": 524901,
    "name": "Moscow",
    "coord": {
      "lat": 55.7522,
      "lon": 37.6156
    },
    "country": "RU",
    "population": 0,
    "timezone": 10800,
    "sunrise": 1647315936,
    "sunset": 1647358295
  }
}
Built-in API request by ZIP code
Please note if country is not specified then the search works for USA as a default.
API call
api.openweathermap.org/data/2.5/forecast?zip={zip code},{country code}&appid=
{API key}
Parameters
zip
required
Zip code
appid
required
Your unique API key (you can always find it on your account page under the
"API key" tab
)
mode
optional
Response format. JSON format is used by default. To get data in XML format use
mode=xml
.
Learn more
cnt
optional
A number of timestamps, which will be returned in the API response.
Learn
                    more
units
optional
Units of measurement.
standard
,
metric
and
imperial
units
                  are available. If you do not use the
units
parameter,
standard
units
                  will be applied by default.
Learn more
lang
optional
You can use the
lang
parameter to get the output in your language.
Learn more
Examples of API calls
api.openweathermap.org/data/2.5/forecast?zip=94040,us&appid=
{API key}
{
  "cod": "200",
  "message": 0,
  "cnt": 40,
  "list": [
    {
      "dt": 1647345600,
      "main": {
        "temp": 286.94,
        "feels_like": 286.2,
        "temp_min": 286.94,
        "temp_max": 287.43,
        "pressure": 1023,
        "sea_level": 1023,
        "grnd_level": 1020,
        "humidity": 70,
        "temp_kf": -0.49
      },
      "weather": [
        {
          "id": 500,
          "main": "Rain",
          "description": "light rain",
          "icon": "10n"
        }
      ],
      "clouds": {
        "all": 100
      },
      "wind": {
        "speed": 0.5,
        "deg": 203,
        "gust": 1.01
      },
      "visibility": 10000,
      "pop": 0.24,
      "rain": {
        "3h": 0.12
      },
      "sys": {
        "pod": "n"
      },
      "dt_txt": "2022-03-15 12:00:00"
    },
    {
      "dt": 1647356400,
      "main": {
        "temp": 286.99,
        "feels_like": 286.47,
        "temp_min": 286.99,
        "temp_max": 287.08,
        "pressure": 1023,
        "sea_level": 1023,
        "grnd_level": 1021,
        "humidity": 78,
        "temp_kf": -0.09
      },
      "weather": [
        {
          "id": 804,
          "main": "Clouds",
          "description": "overcast clouds",
          "icon": "04d"
        }
      ],
      "clouds": {
        "all": 100
      },
      "wind": {
        "speed": 0.67,
        "deg": 271,
        "gust": 1.74
      },
      "visibility": 10000,
      "pop": 0.23,
      "sys": {
        "pod": "d"
      },
      "dt_txt": "2022-03-15 15:00:00"
    },
    {
      "dt": 1647367200,
      "main": {
        "temp": 288.71,
        "feels_like": 288.28,
        "temp_min": 288.71,
        "temp_max": 289.59,
        "pressure": 1024,
        "sea_level": 1024,
        "grnd_level": 1022,
        "humidity": 75,
        "temp_kf": -0.88
      },
      "weather": [
        {
          "id": 804,
          "main": "Clouds",
          "description": "overcast clouds",
          "icon": "04d"
        }
      ],
      "clouds": {
        "all": 100
      },
      "wind": {
        "speed": 1.63,
        "deg": 312,
        "gust": 2.92
      },
      "visibility": 10000,
      "pop": 0.08,
      "sys": {
        "pod": "d"
      },
      "dt_txt": "2022-03-15 18:00:00"
    },
    ....
       {
      "dt": 1647766800,
      "main": {
        "temp": 280.26,
        "feels_like": 276.7,
        "temp_min": 280.26,
        "temp_max": 280.26,
        "pressure": 1013,
        "sea_level": 1013,
        "grnd_level": 1010,
        "humidity": 76,
        "temp_kf": 0
      },
      "weather": [
        {
          "id": 800,
          "main": "Clear",
          "description": "clear sky",
          "icon": "01n"
        }
      ],
      "clouds": {
        "all": 6
      },
      "wind": {
        "speed": 6.06,
        "deg": 302,
        "gust": 11.59
      },
      "visibility": 10000,
      "pop": 0.06,
      "sys": {
        "pod": "n"
      },
      "dt_txt": "2022-03-20 09:00:00"
    }
  ],
  "city": {
    "id": 0,
    "name": "Mountain View",
    "coord": {
      "lat": 37.3855,
      "lon": -122.088
    },
    "country": "US",
    "population": 0,
    "timezone": -25200,
    "sunrise": 1647353957,
    "sunset": 1647396916
  }
}
Format
Response format. JSON format is used by default. To get data in XML format use
mode=xml
.
Parameters
mode
optional
Response format. JSON format is used by default. To get data in XML format use
mode=xml
.
Examples of API calls
JSON
api.openweathermap.org/data/2.5/weather?q=London&appid=
{API key}
{
  "cod": "200",
  "message": 0,
  "cnt": 40,
  "list": [
    {
      "dt": 1647345600,
      "main": {
        "temp": 287.39,
        "feels_like": 286.38,
        "temp_min": 286.69,
        "temp_max": 287.39,
        "pressure": 1021,
        "sea_level": 1021,
        "grnd_level": 1018,
        "humidity": 58,
        "temp_kf": 0.7
      },
      "weather": [
        {
          "id": 803,
          "main": "Clouds",
          "description": "broken clouds",
          "icon": "04d"
        }
      ],
      "clouds": {
        "all": 71
      },
      "wind": {
        "speed": 3.08,
        "deg": 128,
        "gust": 4.3
      },
      "visibility": 10000,
      "pop": 0,
      "sys": {
        "pod": "d"
      },
      "dt_txt": "2022-03-15 12:00:00"
    },
    {
      "dt": 1647356400,
      "main": {
        "temp": 287.09,
        "feels_like": 286.13,
        "temp_min": 286.5,
        "temp_max": 287.09,
        "pressure": 1021,
        "sea_level": 1021,
        "grnd_level": 1016,
        "humidity": 61,
        "temp_kf": 0.59
      },
      "weather": [
        {
          "id": 803,
          "main": "Clouds",
          "description": "broken clouds",
          "icon": "04d"
        }
      ],
      "clouds": {
        "all": 81
      },
      "wind": {
        "speed": 3.28,
        "deg": 168,
        "gust": 3.96
      },
      "visibility": 10000,
      "pop": 0,
      "sys": {
        "pod": "d"
      },
      "dt_txt": "2022-03-15 15:00:00"
    },
    {
      "dt": 1647367200,
      "main": {
        "temp": 285.44,
        "feels_like": 284.6,
        "temp_min": 284.47,
        "temp_max": 285.44,
        "pressure": 1020,
        "sea_level": 1020,
        "grnd_level": 1016,
        "humidity": 72,
        "temp_kf": 0.97
      },
      "weather": [
        {
          "id": 804,
          "main": "Clouds",
          "description": "overcast clouds",
          "icon": "04d"
        }
      ],
      "clouds": {
        "all": 90
      },
      "wind": {
        "speed": 2.7,
        "deg": 183,
        "gust": 5.59
      },
      "visibility": 10000,
      "pop": 0,
      "sys": {
        "pod": "d"
      },
      "dt_txt": "2022-03-15 18:00:00"
    },
    .....
        {
      "dt": 1647766800,
      "main": {
        "temp": 282.42,
        "feels_like": 280,
        "temp_min": 282.42,
        "temp_max": 282.42,
        "pressure": 1036,
        "sea_level": 1036,
        "grnd_level": 1033,
        "humidity": 60,
        "temp_kf": 0
      },
      "weather": [
        {
          "id": 802,
          "main": "Clouds",
          "description": "scattered clouds",
          "icon": "03d"
        }
      ],
      "clouds": {
        "all": 39
      },
      "wind": {
        "speed": 4.58,
        "deg": 83,
        "gust": 8.45
      },
      "visibility": 10000,
      "pop": 0,
      "sys": {
        "pod": "d"
      },
      "dt_txt": "2022-03-20 09:00:00"
    }
  ],
  "city": {
    "id": 2643743,
    "name": "London",
    "coord": {
      "lat": 51.5085,
      "lon": -0.1257
    },
    "country": "GB",
    "population": 1000000,
    "timezone": 0,
    "sunrise": 1647324902,
    "sunset": 1647367441
  }
}
XML
api.openweathermap.org/data/2.5/weather?q=London&mode=xml
<weatherdata>
<location>
<name>London</name>
<type/>
<country>GB</country>
<timezone>0</timezone>
<location altitude="0" latitude="51.5085" longitude="-0.1257" geobase="geonames" geobaseid="2643743"/>
</location>
<credit/>
<meta>
<lastupdate/>
<calctime>0</calctime>
<nextupdate/>
</meta>
<sun rise="2022-03-15T06:15:02" set="2022-03-15T18:04:01"/>
<forecast>
<time from="2022-03-15T09:00:00" to="2022-03-15T12:00:00">
<symbol number="803" name="broken clouds" var="04d"/>
<precipitation probability="0"/>
<windDirection deg="128" code="SE" name="SouthEast"/>
<windSpeed mps="3.08" unit="m/s" name="Light breeze"/>
<windGust gust="4.3" unit="m/s"/>
<temperature unit="kelvin" value="287.52" min="286.69" max="287.52"/>
<feels_like value="286.47" unit="kelvin"/>
<pressure unit="hPa" value="1021"/>
<humidity value="56" unit="%"/>
<clouds value="broken clouds" all="71" unit="%"/>
<visibility value="10000"/>
</time>
<time from="2022-03-15T12:00:00" to="2022-03-15T15:00:00">
<symbol number="803" name="broken clouds" var="04d"/>
<precipitation probability="0"/>
<windDirection deg="168" code="SSE" name="South-southeast"/>
<windSpeed mps="3.28" unit="m/s" name="Light breeze"/>
<windGust gust="3.96" unit="m/s"/>
<temperature unit="kelvin" value="287.18" min="286.5" max="287.18"/>
<feels_like value="286.18" unit="kelvin"/>
<pressure unit="hPa" value="1021"/>
<humidity value="59" unit="%"/>
<clouds value="broken clouds" all="81" unit="%"/>
<visibility value="10000"/>
</time>
<time from="2022-03-15T15:00:00" to="2022-03-15T18:00:00">
<symbol number="804" name="overcast clouds" var="04d"/>
<precipitation probability="0"/>
<windDirection deg="183" code="S" name="South"/>
<windSpeed mps="2.7" unit="m/s" name="Light breeze"/>
<windGust gust="5.59" unit="m/s"/>
<temperature unit="kelvin" value="285.49" min="284.47" max="285.49"/>
<feels_like value="284.66" unit="kelvin"/>
<pressure unit="hPa" value="1020"/>
<humidity value="72" unit="%"/>
<clouds value="overcast clouds" all="90" unit="%"/>
<visibility value="10000"/>
</time>
....
<time from="2022-03-20T06:00:00" to="2022-03-20T09:00:00">
<symbol number="802" name="scattered clouds" var="03d"/>
<precipitation probability="0"/>
<windDirection deg="83" code="E" name="East"/>
<windSpeed mps="4.58" unit="m/s" name="Gentle Breeze"/>
<windGust gust="8.45" unit="m/s"/>
<temperature unit="kelvin" value="282.42" min="282.42" max="282.42"/>
<feels_like value="280" unit="kelvin"/>
<pressure unit="hPa" value="1036"/>
<humidity value="60" unit="%"/>
<clouds value="scattered clouds" all="39" unit="%"/>
<visibility value="10000"/>
</time>
</forecast>
</weatherdata>
Limitation of result
To limit number of timestamps in the API response please setup
cnt
.
Parameters
cnt
optional
A number of timestamps, which will be returned in the API response.
Examples of API calls
https://api.openweathermap.org/data/2.5/forecast?lat=57&lon=-2.15&cnt=3&appid=
{API key}
{
  "cod": "200",
  "message": 0,
  "cnt": 3,
  "list": [
    {
      "dt": 1647356400,
      "main": {
        "temp": 281.28,
        "feels_like": 277.76,
        "temp_min": 280.57,
        "temp_max": 281.28,
        "pressure": 1015,
        "sea_level": 1015,
        "grnd_level": 1014,
        "humidity": 79,
        "temp_kf": 0.71
      },
      "weather": [
        {
          "id": 500,
          "main": "Rain",
          "description": "light rain",
          "icon": "10d"
        }
      ],
      "clouds": {
        "all": 95
      },
      "wind": {
        "speed": 6.78,
        "deg": 184,
        "gust": 12.14
      },
      "visibility": 10000,
      "pop": 0.34,
      "rain": {
        "3h": 0.27
      },
      "sys": {
        "pod": "d"
      },
      "dt_txt": "2022-03-15 15:00:00"
    },
    {
      "dt": 1647367200,
      "main": {
        "temp": 281.03,
        "feels_like": 277.59,
        "temp_min": 280.73,
        "temp_max": 281.03,
        "pressure": 1015,
        "sea_level": 1015,
        "grnd_level": 1014,
        "humidity": 79,
        "temp_kf": 0.3
      },
      "weather": [
        {
          "id": 804,
          "main": "Clouds",
          "description": "overcast clouds",
          "icon": "04d"
        }
      ],
      "clouds": {
        "all": 98
      },
      "wind": {
        "speed": 6.31,
        "deg": 189,
        "gust": 11.74
      },
      "visibility": 10000,
      "pop": 0.2,
      "sys": {
        "pod": "d"
      },
      "dt_txt": "2022-03-15 18:00:00"
    },
    {
      "dt": 1647378000,
      "main": {
        "temp": 280.39,
        "feels_like": 276.74,
        "temp_min": 280.39,
        "temp_max": 280.39,
        "pressure": 1014,
        "sea_level": 1014,
        "grnd_level": 1014,
        "humidity": 82,
        "temp_kf": 0
      },
      "weather": [
        {
          "id": 804,
          "main": "Clouds",
          "description": "overcast clouds",
          "icon": "04n"
        }
      ],
      "clouds": {
        "all": 100
      },
      "wind": {
        "speed": 6.41,
        "deg": 199,
        "gust": 12.52
      },
      "visibility": 10000,
      "pop": 0,
      "sys": {
        "pod": "n"
      },
      "dt_txt": "2022-03-15 21:00:00"
    }
  ],
  "city": {
    "id": 2641549,
    "name": "Newtonhill",
    "coord": {
      "lat": 57,
      "lon": -2.15
    },
    "country": "GB",
    "population": 3284,
    "timezone": 0,
    "sunrise": 1647325488,
    "sunset": 1647367827
  }
}
Units of measurement
standard
,
metric
, and
imperial
units are available.
Parameters
units
optional
Units of measurement.
standard
,
metric
and
imperial
units
                are available. If you do not use the
units
parameter,
standard
units will
                be applied by default
Temperature is available in Fahrenheit, Celsius and Kelvin units.
For temperature in Fahrenheit use
units=imperial
For temperature in Celsius use
units=metric
Temperature in Kelvin is used by default, no need to use units parameter in API call
List of all API parameters with units
openweathermap.org/weather-data
Examples of API calls
Standard
https://api.openweathermap.org/data/2.5/forecast?lat=57&lon=-2.15&appid=
{API key}
{
  "cod": "200",
  "message": 0,
  "cnt": 3,
  "list": [
    {
      "dt": 1647356400,
      "main": {
        "temp": 281.28,
        "feels_like": 277.76,
        "temp_min": 280.57,
        "temp_max": 281.28,
        "pressure": 1015,
        "sea_level": 1015,
        "grnd_level": 1014,
        "humidity": 79,
        "temp_kf": 0.71
      },
      "weather": [
        {
          "id": 500,
          "main": "Rain",
          "description": "light rain",
          "icon": "10d"
        }
      ],
      "clouds": {
        "all": 95
      },
      "wind": {
        "speed": 6.78,
        "deg": 184,
        "gust": 12.14
      },
      "visibility": 10000,
      "pop": 0.34,
      "rain": {
        "3h": 0.27
      },
      "sys": {
        "pod": "d"
      },
      "dt_txt": "2022-03-15 15:00:00"
    },
    {
      "dt": 1647367200,
      "main": {
        "temp": 281.03,
        "feels_like": 277.59,
        "temp_min": 280.73,
        "temp_max": 281.03,
        "pressure": 1015,
        "sea_level": 1015,
        "grnd_level": 1014,
        "humidity": 79,
        "temp_kf": 0.3
      },
      "weather": [
        {
          "id": 804,
          "main": "Clouds",
          "description": "overcast clouds",
          "icon": "04d"
        }
      ],
      "clouds": {
        "all": 98
      },
      "wind": {
        "speed": 6.31,
        "deg": 189,
        "gust": 11.74
      },
      "visibility": 10000,
      "pop": 0.2,
      "sys": {
        "pod": "d"
      },
      "dt_txt": "2022-03-15 18:00:00"
    },
    {
      "dt": 1647378000,
      "main": {
        "temp": 280.39,
        "feels_like": 276.74,
        "temp_min": 280.39,
        "temp_max": 280.39,
        "pressure": 1014,
        "sea_level": 1014,
        "grnd_level": 1014,
        "humidity": 82,
        "temp_kf": 0
      },
      "weather": [
        {
          "id": 804,
          "main": "Clouds",
          "description": "overcast clouds",
          "icon": "04n"
        }
      ],
      "clouds": {
        "all": 100
      },
      "wind": {
        "speed": 6.41,
        "deg": 199,
        "gust": 12.52
      },
      "visibility": 10000,
      "pop": 0,
      "sys": {
        "pod": "n"
      },
      "dt_txt": "2022-03-15 21:00:00"
    }
  ],
  "city": {
    "id": 2641549,
    "name": "Newtonhill",
    "coord": {
      "lat": 57,
      "lon": -2.15
    },
    "country": "GB",
    "population": 3284,
    "timezone": 0,
    "sunrise": 1647325488,
    "sunset": 1647367827
  }
}
Metric
https://api.openweathermap.org/data/2.5/forecast?lat=57&lon=-2.15&appid=
{API key}
&units=metric
{
  "cod": "200",
  "message": 0,
  "cnt": 3,
  "list": [
    {
      "dt": 1647356400,
      "main": {
        "temp": 8.13,
        "feels_like": 4.61,
        "temp_min": 7.42,
        "temp_max": 8.13,
        "pressure": 1015,
        "sea_level": 1015,
        "grnd_level": 1014,
        "humidity": 79,
        "temp_kf": 0.71
      },
      "weather": [
        {
          "id": 500,
          "main": "Rain",
          "description": "light rain",
          "icon": "10d"
        }
      ],
      "clouds": {
        "all": 95
      },
      "wind": {
        "speed": 6.78,
        "deg": 184,
        "gust": 12.14
      },
      "visibility": 10000,
      "pop": 0.34,
      "rain": {
        "3h": 0.27
      },
      "sys": {
        "pod": "d"
      },
      "dt_txt": "2022-03-15 15:00:00"
    },
    {
      "dt": 1647367200,
      "main": {
        "temp": 7.88,
        "feels_like": 4.44,
        "temp_min": 7.58,
        "temp_max": 7.88,
        "pressure": 1015,
        "sea_level": 1015,
        "grnd_level": 1014,
        "humidity": 79,
        "temp_kf": 0.3
      },
      "weather": [
        {
          "id": 804,
          "main": "Clouds",
          "description": "overcast clouds",
          "icon": "04d"
        }
      ],
      "clouds": {
        "all": 98
      },
      "wind": {
        "speed": 6.31,
        "deg": 189,
        "gust": 11.74
      },
      "visibility": 10000,
      "pop": 0.2,
      "sys": {
        "pod": "d"
      },
      "dt_txt": "2022-03-15 18:00:00"
    },
    {
      "dt": 1647378000,
      "main": {
        "temp": 7.24,
        "feels_like": 3.59,
        "temp_min": 7.24,
        "temp_max": 7.24,
        "pressure": 1014,
        "sea_level": 1014,
        "grnd_level": 1014,
        "humidity": 82,
        "temp_kf": 0
      },
      "weather": [
        {
          "id": 804,
          "main": "Clouds",
          "description": "overcast clouds",
          "icon": "04n"
        }
      ],
      "clouds": {
        "all": 100
      },
      "wind": {
        "speed": 6.41,
        "deg": 199,
        "gust": 12.52
      },
      "visibility": 10000,
      "pop": 0,
      "sys": {
        "pod": "n"
      },
      "dt_txt": "2022-03-15 21:00:00"
    }
  ],
  "city": {
    "id": 2641549,
    "name": "Newtonhill",
    "coord": {
      "lat": 57,
      "lon": -2.15
    },
    "country": "GB",
    "population": 3284,
    "timezone": 0,
    "sunrise": 1647325488,
    "sunset": 1647367827
  }
}
Imperial
https://api.openweathermap.org/data/2.5/forecast?lat=57&lon=-2.15&appid=
{API key}
&units=imperial
{
  "cod": "200",
  "message": 0,
  "cnt": 3,
  "list": [
    {
      "dt": 1647356400,
      "main": {
        "temp": 46.63,
        "feels_like": 40.3,
        "temp_min": 45.36,
        "temp_max": 46.63,
        "pressure": 1015,
        "sea_level": 1015,
        "grnd_level": 1014,
        "humidity": 79,
        "temp_kf": 0.71
      },
      "weather": [
        {
          "id": 500,
          "main": "Rain",
          "description": "light rain",
          "icon": "10d"
        }
      ],
      "clouds": {
        "all": 95
      },
      "wind": {
        "speed": 15.17,
        "deg": 184,
        "gust": 27.16
      },
      "visibility": 10000,
      "pop": 0.34,
      "rain": {
        "3h": 0.27
      },
      "sys": {
        "pod": "d"
      },
      "dt_txt": "2022-03-15 15:00:00"
    },
    {
      "dt": 1647367200,
      "main": {
        "temp": 46.18,
        "feels_like": 39.99,
        "temp_min": 45.64,
        "temp_max": 46.18,
        "pressure": 1015,
        "sea_level": 1015,
        "grnd_level": 1014,
        "humidity": 79,
        "temp_kf": 0.3
      },
      "weather": [
        {
          "id": 804,
          "main": "Clouds",
          "description": "overcast clouds",
          "icon": "04d"
        }
      ],
      "clouds": {
        "all": 98
      },
      "wind": {
        "speed": 14.12,
        "deg": 189,
        "gust": 26.26
      },
      "visibility": 10000,
      "pop": 0.2,
      "sys": {
        "pod": "d"
      },
      "dt_txt": "2022-03-15 18:00:00"
    },
    {
      "dt": 1647378000,
      "main": {
        "temp": 45.03,
        "feels_like": 38.46,
        "temp_min": 45.03,
        "temp_max": 45.03,
        "pressure": 1014,
        "sea_level": 1014,
        "grnd_level": 1014,
        "humidity": 82,
        "temp_kf": 0
      },
      "weather": [
        {
          "id": 804,
          "main": "Clouds",
          "description": "overcast clouds",
          "icon": "04n"
        }
      ],
      "clouds": {
        "all": 100
      },
      "wind": {
        "speed": 14.34,
        "deg": 199,
        "gust": 28.01
      },
      "visibility": 10000,
      "pop": 0,
      "sys": {
        "pod": "n"
      },
      "dt_txt": "2022-03-15 21:00:00"
    }
  ],
  "city": {
    "id": 2641549,
    "name": "Newtonhill",
    "coord": {
      "lat": 57,
      "lon": -2.15
    },
    "country": "GB",
    "population": 3284,
    "timezone": 0,
    "sunrise": 1647325488,
    "sunset": 1647367827
  }
}
Multilingual support
You can use the
lang
parameter to get the output in your language.
Translation is applied to the
city name
and
description
fields.
API call
http://api.openweathermap.org/data/2.5/forecast?id=524901⟨={lang}
Parameters
lang
optional
You can use the
lang
parameter to get the output in your language.
Examples of API calls
http://api.openweathermap.org/data/2.5/forecast?id=524901⟨=zh_cn&appid=
{API key}
{
  "cod": "200",
  "message": 0,
  "cnt": 3,
  "list": [
    {
      "dt": 1647356400,
      "main": {
        "temp": 281.28,
        "feels_like": 277.76,
        "temp_min": 280.57,
        "temp_max": 281.28,
        "pressure": 1015,
        "sea_level": 1015,
        "grnd_level": 1014,
        "humidity": 79,
        "temp_kf": 0.71
      },
      "weather": [
        {
          "id": 500,
          "main": "Rain",
          "description": "小雨",
          "icon": "10d"
        }
      ],
      "clouds": {
        "all": 95
      },
      "wind": {
        "speed": 6.78,
        "deg": 184,
        "gust": 12.14
      },
      "visibility": 10000,
      "pop": 0.34,
      "rain": {
        "3h": 0.27
      },
      "sys": {
        "pod": "d"
      },
      "dt_txt": "2022-03-15 15:00:00"
    },
    {
      "dt": 1647367200,
      "main": {
        "temp": 281.03,
        "feels_like": 277.59,
        "temp_min": 280.73,
        "temp_max": 281.03,
        "pressure": 1015,
        "sea_level": 1015,
        "grnd_level": 1014,
        "humidity": 79,
        "temp_kf": 0.3
      },
      "weather": [
        {
          "id": 804,
          "main": "Clouds",
          "description": "阴，多云",
          "icon": "04d"
        }
      ],
      "clouds": {
        "all": 98
      },
      "wind": {
        "speed": 6.31,
        "deg": 189,
        "gust": 11.74
      },
      "visibility": 10000,
      "pop": 0.2,
      "sys": {
        "pod": "d"
      },
      "dt_txt": "2022-03-15 18:00:00"
    },
    {
      "dt": 1647378000,
      "main": {
        "temp": 280.39,
        "feels_like": 276.74,
        "temp_min": 280.39,
        "temp_max": 280.39,
        "pressure": 1014,
        "sea_level": 1014,
        "grnd_level": 1014,
        "humidity": 82,
        "temp_kf": 0
      },
      "weather": [
        {
          "id": 804,
          "main": "Clouds",
          "description": "阴，多云",
          "icon": "04n"
        }
      ],
      "clouds": {
        "all": 100
      },
      "wind": {
        "speed": 6.41,
        "deg": 199,
        "gust": 12.52
      },
      "visibility": 10000,
      "pop": 0,
      "sys": {
        "pod": "n"
      },
      "dt_txt": "2022-03-15 21:00:00"
    }
  ],
  "city": {
    "id": 2641549,
    "name": "Newtonhill",
    "coord": {
      "lat": 57,
      "lon": -2.15
    },
    "country": "GB",
    "population": 3284,
    "timezone": 0,
    "sunrise": 1647325488,
    "sunset": 1647367827
  }
}
We support the following languages that you can use with the corresponded lang values:
sq
Albanian
af
Afrikaans
ar
Arabic
az
Azerbaijani
eu
Basque
be
Belarusian
bg
Bulgarian
ca
Catalan
zh_cn
Chinese Simplified
zh_tw
Chinese Traditional
hr
Croatian
cz
Czech
da
Danish
nl
Dutch
en
English
fi
Finnish
fr
French
gl
Galician
de
German
el
Greek
he
Hebrew
hi
Hindi
hu
Hungarian
is
Icelandic
id
Indonesian
it
Italian
ja
Japanese
kr
Korean
ku
Kurmanji (Kurdish)
la
Latvian
lt
Lithuanian
mk
Macedonian
no
Norwegian
fa
Persian (Farsi)
pl
Polish
pt
Portuguese
pt_br
Português Brasil
ro
Romanian
ru
Russian
sr
Serbian
sk
Slovak
sl
Slovenian
sp, es
Spanish
sv, se
Swedish
th
Thai
tr
Turkish
ua, uk
Ukrainian
vi
Vietnamese
zu
Zulu
Call back function for JavaScript code
To use JavaScript code you can transfer
callback
functionName to JSONP callback.
Examples of API calls
api.openweathermap.org/data/2.5/forecast?q=London,uk&callback=test&appid=
{API key}
test({
  "cod": "200",
  "message": 0,
  "cnt": 3,
  "list": [
    {
      "dt": 1599760800,
      "main": {
        "temp": 66.09,
        "feels_like": 61.48,
        "temp_min": 64.67,
        "temp_max": 66.09,
        "pressure": 1021,
        "sea_level": 1020,
        "grnd_level": 1017,
        "humidity": 44,
        "temp_kf": 0.79
      },
      "weather": [
        {
          "id": 802,
          "main": "Clouds",
          "description": "多云",
          "icon": "03d"
        }
      ],
      "clouds": {
        "all": 37
      },
      "wind": {
        "speed": 5.53,
        "deg": 314,
        "gust": 8.3
      },
      "visibility": 10000,
      "pop": 0,
      "sys": {
        "pod": "d"
      },
      "dt_txt": "2020-09-10 18:00:00"
    },
    {
      "dt": 1599771600,
      "main": {
        "temp": 61.43,
        "feels_like": 57.49,
        "temp_min": 59.77,
        "temp_max": 61.43,
        "pressure": 1021,
        "sea_level": 1021,
        "grnd_level": 1018,
        "humidity": 54,
        "temp_kf": 0.92
      },
      "weather": [
        {
          "id": 801,
          "main": "Clouds",
          "description": "晴，少云",
          "icon": "02n"
        }
      ],
      "clouds": {
        "all": 22
      },
      "wind": {
        "speed": 4.76,
        "deg": 15,
        "gust": 5.3
      },
      "visibility": 10000,
      "pop": 0,
      "sys": {
        "pod": "n"
      },
      "dt_txt": "2020-09-10 21:00:00"
    },
    {
      "dt": 1599782400,
      "main": {
        "temp": 59.18,
        "feels_like": 56.8,
        "temp_min": 58.62,
        "temp_max": 59.18,
        "pressure": 1019,
        "sea_level": 1019,
        "grnd_level": 1016,
        "humidity": 57,
        "temp_kf": 0.31
      },
      "weather": [
        {
          "id": 802,
          "main": "Clouds",
          "description": "多云",
          "icon": "03n"
        }
      ],
      "clouds": {
        "all": 46
      },
      "wind": {
        "speed": 1.74,
        "deg": 106,
        "gust": 5.3
      },
      "visibility": 10000,
      "pop": 0,
      "sys": {
        "pod": "n"
      },
      "dt_txt": "2020-09-11 00:00:00"
    }
  ],
  "city": {
    "id": 2643743,
    "name": "London",
    "coord": {
      "lat": 51.5085,
      "lon": -0.1257
    },
    "country": "GB",
    "population": 1000000,
    "timezone": 3600,
    "sunrise": 1599715685,
    "sunset": 1599762420
  }
})


Content from https://openweathermap.org/forecast16:

Daily Forecast 16 Days
Home
API
Daily Forecast 16 Days
Product concept
Daily Forecast 16 Days is available at any location on the globe.
               The forecast includes daily weather data and the response data is available in JSON or XML format.
Call 16 day / daily forecast data
How to make an API call
You can seach 16 day weather forecast with daily average parameters by geographic coordinates. All
                  weather data can be obtained in JSON and XML formats.
API call
api.openweathermap.org/data/2.5/forecast/daily?lat={lat}&lon={lon}&cnt={cnt}&appid=
{API key}
Parameters
lat
required
Latitude. If you need the geocoder to automatic convert city names and zip-codes to geo
                        coordinates and the other way around, please use our
Geocoding
                           API
lon
required
Longitude. If you need the geocoder to automatic convert city names and zip-codes to geo
                        coordinates and the other way around, please use our
Geocoding
                           API
appid
required
Your unique API key (you can always find it on your account page under the
"API key" tab
)
cnt
optional
A number of days, which will be returned in the API response (from
1
to
16
).
Learn more
mode
optional
Data format. Possible values are:
json
,
xml
. If the
mode
parameter is empty the format is JSON by default.
Learn more
units
optional
Units of measurement.
standard
,
metric
and
imperial
units are available. If you do not use the
units
parameter,
standard
units will be applied by default.
Learn more
lang
optional
Language code.
Learn more
Please use
Geocoder API
if you need automatic
                     convert city names and zip-codes to geo coordinates and the other way around.
Please note that
built-in geocoder
has been deprecated. Although it
                     is still available for use, bug fixing and updates are no longer available for this functionality.
Example of API call
Call 7 days forecast by geographic coordinates
api.openweathermap.org/data/2.5/forecast/daily?lat=44.34&lon=10.99&cnt=7&appid=
{API key}
{
  "city": {
    "id": 3163858,
    "name": "Zocca",
    "coord": {
      "lon": 10.99,
      "lat": 44.34
    },
    "country": "IT",
    "population": 4593,
    "timezone": 7200
  },
  "cod": "200",
  "message": 0.0582563,
  "cnt": 7,
  "list": [
    {
      "dt": 1661857200,
      "sunrise": 1661834187,
      "sunset": 1661882248,
      "temp": {
        "day": 299.66,
        "min": 288.93,
        "max": 299.66,
        "night": 290.31,
        "eve": 297.16,
        "morn": 288.93
      },
      "feels_like": {
        "day": 299.66,
        "night": 290.3,
        "eve": 297.1,
        "morn": 288.73
      },
      "pressure": 1017,
      "humidity": 44,
      "weather": [
        {
          "id": 500,
          "main": "Rain",
          "description": "light rain",
          "icon": "10d"
        }
      ],
      "speed": 2.7,
      "deg": 209,
      "gust": 3.58,
      "clouds": 53,
      "pop": 0.7,
      "rain": 2.51
    },
    {
      "dt": 1661943600,
      "sunrise": 1661920656,
      "sunset": 1661968542,
      "temp": {
        "day": 295.76,
        "min": 287.73,
        "max": 295.76,
        "night": 289.37,
        "eve": 292.76,
        "morn": 287.73
      },
      "feels_like": {
        "day": 295.64,
        "night": 289.45,
        "eve": 292.97,
        "morn": 287.59
      },
      "pressure": 1014,
      "humidity": 60,
      "weather": [
        {
          "id": 500,
          "main": "Rain",
          "description": "light rain",
          "icon": "10d"
        }
      ],
      "speed": 2.29,
      "deg": 215,
      "gust": 3.27,
      "clouds": 66,
      "pop": 0.82,
      "rain": 5.32
    },
    {
      "dt": 1662030000,
      "sunrise": 1662007126,
      "sunset": 1662054835,
      "temp": {
        "day": 293.38,
        "min": 287.06,
        "max": 293.38,
        "night": 287.06,
        "eve": 289.01,
        "morn": 287.84
      },
      "feels_like": {
        "day": 293.31,
        "night": 287.01,
        "eve": 289.05,
        "morn": 287.85
      },
      "pressure": 1014,
      "humidity": 71,
      "weather": [
        {
          "id": 500,
          "main": "Rain",
          "description": "light rain",
          "icon": "10d"
        }
      ],
      "speed": 2.67,
      "deg": 60,
      "gust": 2.66,
      "clouds": 97,
      "pop": 0.84,
      "rain": 4.49
    },
    {
      "dt": 1662116400,
      "sunrise": 1662093595,
      "sunset": 1662141127,
      "temp": {
        "day": 294.39,
        "min": 286.8,
        "max": 294.39,
        "night": 288.05,
        "eve": 289.8,
        "morn": 287.56
      },
      "feels_like": {
        "day": 294.03,
        "night": 287.79,
        "eve": 289.51,
        "morn": 287.35
      },
      "pressure": 1015,
      "humidity": 56,
      "weather": [
        {
          "id": 500,
          "main": "Rain",
          "description": "light rain",
          "icon": "10d"
        }
      ],
      "speed": 2.15,
      "deg": 45,
      "gust": 1.72,
      "clouds": 92,
      "pop": 0.36,
      "rain": 0.11
    },
    {
      "dt": 1662202800,
      "sunrise": 1662180064,
      "sunset": 1662227419,
      "temp": {
        "day": 294.35,
        "min": 286.78,
        "max": 294.44,
        "night": 288.51,
        "eve": 290.55,
        "morn": 288.54
      },
      "feels_like": {
        "day": 294.14,
        "night": 288.63,
        "eve": 290.57,
        "morn": 288.41
      },
      "pressure": 1015,
      "humidity": 62,
      "weather": [
        {
          "id": 500,
          "main": "Rain",
          "description": "light rain",
          "icon": "10d"
        }
      ],
      "speed": 2.23,
      "deg": 288,
      "gust": 3.34,
      "clouds": 79,
      "pop": 1,
      "rain": 4.84
    },
    {
      "dt": 1662289200,
      "sunrise": 1662266533,
      "sunset": 1662313710,
      "temp": {
        "day": 294.93,
        "min": 287.9,
        "max": 294.93,
        "night": 289.29,
        "eve": 291.03,
        "morn": 288.04
      },
      "feels_like": {
        "day": 294.83,
        "night": 289.31,
        "eve": 291.04,
        "morn": 288.12
      },
      "pressure": 1018,
      "humidity": 64,
      "weather": [
        {
          "id": 500,
          "main": "Rain",
          "description": "light rain",
          "icon": "10d"
        }
      ],
      "speed": 1.31,
      "deg": 350,
      "gust": 1.8,
      "clouds": 88,
      "pop": 1,
      "rain": 3.44
    },
    {
      "dt": 1662375600,
      "sunrise": 1662353002,
      "sunset": 1662400001,
      "temp": {
        "day": 297.89,
        "min": 288.21,
        "max": 297.89,
        "night": 290.4,
        "eve": 292.15,
        "morn": 289.67
      },
      "feels_like": {
        "day": 297.78,
        "night": 290.3,
        "eve": 292.06,
        "morn": 289.68
      },
      "pressure": 1019,
      "humidity": 52,
      "weather": [
        {
          "id": 801,
          "main": "Clouds",
          "description": "few clouds",
          "icon": "02d"
        }
      ],
      "speed": 2.98,
      "deg": 34,
      "gust": 2.25,
      "clouds": 12,
      "pop": 0.08
    }
  ]
}
API response
If you do not see some of the parameters in your API response it means that these weather phenomena are
               just not happened for the time of measurement for the city or location chosen. Only really measured or
               calculated data is displayed in API response.
JSON
JSON format API response example
{
  "city": {
    "id": 3163858,
    "name": "Zocca",
    "coord": {
      "lon": 10.99,
      "lat": 44.34
    },
    "country": "IT",
    "population": 4593,
    "timezone": 7200
  },
  "cod": "200",
  "message": 0.0582563,
  "cnt": 7,
  "list": [
    {
      "dt": 1661857200,
      "sunrise": 1661834187,
      "sunset": 1661882248,
      "temp": {
        "day": 299.66,
        "min": 288.93,
        "max": 299.66,
        "night": 290.31,
        "eve": 297.16,
        "morn": 288.93
      },
      "feels_like": {
        "day": 299.66,
        "night": 290.3,
        "eve": 297.1,
        "morn": 288.73
      },
      "pressure": 1017,
      "humidity": 44,
      "weather": [
        {
          "id": 500,
          "main": "Rain",
          "description": "light rain",
          "icon": "10d"
        }
      ],
      "speed": 2.7,
      "deg": 209,
      "gust": 3.58,
      "clouds": 53,
      "pop": 0.7,
      "rain": 2.51
    },
    {
      "dt": 1661943600,
      "sunrise": 1661920656,
      "sunset": 1661968542,
      "temp": {
        "day": 295.76,
        "min": 287.73,
        "max": 295.76,
        "night": 289.37,
        "eve": 292.76,
        "morn": 287.73
      },
      "feels_like": {
        "day": 295.64,
        "night": 289.45,
        "eve": 292.97,
        "morn": 287.59
      },
      "pressure": 1014,
      "humidity": 60,
      "weather": [
        {
          "id": 500,
          "main": "Rain",
          "description": "light rain",
          "icon": "10d"
        }
      ],
      "speed": 2.29,
      "deg": 215,
      "gust": 3.27,
      "clouds": 66,
      "pop": 0.82,
      "rain": 5.32
    },
    {
      "dt": 1662030000,
      "sunrise": 1662007126,
      "sunset": 1662054835,
      "temp": {
        "day": 293.38,
        "min": 287.06,
        "max": 293.38,
        "night": 287.06,
        "eve": 289.01,
        "morn": 287.84
      },
      "feels_like": {
        "day": 293.31,
        "night": 287.01,
        "eve": 289.05,
        "morn": 287.85
      },
      "pressure": 1014,
      "humidity": 71,
      "weather": [
        {
          "id": 500,
          "main": "Rain",
          "description": "light rain",
          "icon": "10d"
        }
      ],
      "speed": 2.67,
      "deg": 60,
      "gust": 2.66,
      "clouds": 97,
      "pop": 0.84,
      "rain": 4.49
    },
    ....
JSON format API response fields
city
city.id
City ID. Please note that built-in
                                 geocoder functionality has been deprecated. Learn more
here
city.name
City name. Please note that built-in
                                 geocoder functionality has been deprecated. Learn more
here
city.coord
city.coord.lat
Geo location, latitude
city.coord.lon
Geo location, longitude
country
Country code (GB, JP etc.). Please note that
                           built-in geocoder functionality has been deprecated. Learn more
here
population
Internal parameter
timezone
Shift in seconds from UTC
cod
Internal parameter
message
Internal parameter
cnt
A number of days returned in the API response
list
list.dt
Time of data forecasted
list.temp
list.temp.day
Temperature at 12:00 local time. Unit Default: Kelvin,
                                    Metric: Celsius, Imperial: Fahrenheit
list.temp.min
Min daily temperature. Please find more info
here.
Unit Default: Kelvin, Metric: Celsius, Imperial: Fahrenheit
list.temp.max
Max daily temperature. Please find more info
here.
Unit Default: Kelvin, Metric: Celsius, Imperial: Fahrenheit
list.temp.night
Temperature at 00:00 local time. Unit Default: Kelvin,
                                    Metric: Celsius, Imperial: Fahrenheit
list.temp.eve
Temperature at 18:00 local time. Unit Default: Kelvin,
                                    Metric: Celsius, Imperial: Fahrenheit
list.temp.morn
Ttemperature at 06:00 local time. Unit Default: Kelvin,
                                    Metric: Celsius, Imperial: Fahrenheit
list.feels_like
list.feels_like.day
Temperature at 12:00 local time.This temperature
                                    parameter accounts for the human perception of weather. Unit Default: Kelvin,
                                    Metric: Celsius, Imperial: Fahrenheit
list.feels_like.night
Temperature at 00:00 local time.This temperature
                                    parameter accounts for the human perception of weather. Unit Default: Kelvin,
                                    Metric: Celsius, Imperial: Fahrenheit
list.feels_like.eve
Temperature at 18:00 local time.This temperature
                                    parameter accounts for the human perception of weather. Unit Default: Kelvin,
                                    Metric: Celsius, Imperial: Fahrenheit
list.feels_like.morn
Temperature at 06:00 local time. This temperature
                                    parameter accounts for the human perception of weather. Unit Default: Kelvin,
                                    Metric: Celsius, Imperial: Fahrenheit
list.pressure
Atmospheric pressure on the sea level, hPa
list.humidity
Humidity, %
list.weather
(more info
Weather
                                 condition codes
)
list.weather.id
Weather condition id
list.weather.main
Group of weather parameters (Rain, Snow, Clouds
                                    etc.)
list.weather.description
Weather condition within the group. Please
                                    find more
here.
You can get the output in your language.
Learn more
list.weather.icon
Weather icon id
list.speed
Maximum wind speed for the day. Unit Default: meter/sec, Metric:
                              meter/sec, Imperial: miles/hour.
list.deg
Wind direction relevant to the maximum wind speed, degrees
                              (meteorological)
list.gust
Wind gust. Unit Default: meter/sec, Metric: meter/sec, Imperial:
                              miles/hour.
list.clouds
Cloudiness, %
list.rain
Precipitation volume, mm. Please note that only mm as units of
                              measurement are available for this parameter
list.snow
Snow volume, mm. Please note that only mm as units of measurement
                              are available for this parameter
list.pop
Probability of precipitation. The values of the parameter vary
                              between 0 and 1, where 0 is equal to 0%, 1 is equal to 100%
XML
XML format API response example
<weatherdata>
    <location>
    <name>Zocca</name>
    <type/>
    <country>IT</country>
    <timezone>7200</timezone>
    <location altitude="0" latitude="44.34" longitude="10.99" geobase="geonames" geobaseid="3163858"/>
    </location>
    <credit/>
    <meta>
    <lastupdate/>
    <calctime>0</calctime>
    <nextupdate/>
    </meta>
    <sun rise="2022-08-30T04:36:27" set="2022-08-30T17:57:28"/>
    <forecast>
    <time day="2022-08-30">
    <sun rise="2022-08-30T04:36:27" set="2022-08-30T17:57:28"/>
    <symbol number="500" name="light rain" var="10d"/>
    <precipitation probability="0.7" value="2.51" type="rain"/>
    <windDirection deg="209" code="SSW" name="South-southwest"/>
    <windSpeed mps="2.7" unit="m/s" name="Light breeze"/>
    <windGust gust="3.58" unit="m/s"/>
    <temperature day="299.65" min="288.93" max="299.65" night="290.31" eve="297.15" morn="288.93" unit="kelvin"/>
    <feels_like day="299.65" night="290.3" eve="297.09" morn="288.73" unit="kelvin"/>
    <pressure unit="hPa" value="1017"/>
    <humidity value="44" unit="%"/>
    <clouds value="broken clouds" all="53" unit="%"/>
    </time>
    <time day="2022-08-31">
    <sun rise="2022-08-31T04:37:36" set="2022-08-31T17:55:42"/>
    <symbol number="500" name="light rain" var="10d"/>
    <precipitation probability="0.82" value="5.32" type="rain"/>
    <windDirection deg="215" code="SW" name="Southwest"/>
    <windSpeed mps="2.29" unit="m/s" name="Light breeze"/>
    <windGust gust="3.27" unit="m/s"/>
    <temperature day="295.76" min="287.73" max="295.76" night="289.37" eve="292.76" morn="287.73" unit="kelvin"/>
    <feels_like day="295.64" night="289.45" eve="292.97" morn="287.59" unit="kelvin"/>
    <pressure unit="hPa" value="1014"/>
    <humidity value="60" unit="%"/>
    <clouds value="broken clouds" all="66" unit="%"/>
    </time>
    <time day="2022-09-01">
    <sun rise="2022-09-01T04:38:46" set="2022-09-01T17:53:55"/>
    <symbol number="500" name="light rain" var="10d"/>
    <precipitation probability="0.84" value="4.49" type="rain"/>
    <windDirection deg="60" code="ENE" name="East-northeast"/>
    <windSpeed mps="2.67" unit="m/s" name="Light breeze"/>
    <windGust gust="2.66" unit="m/s"/>
    <temperature day="293.38" min="287.06" max="293.38" night="287.06" eve="289.01" morn="287.84" unit="kelvin"/>
    <feels_like day="293.31" night="287.01" eve="289.05" morn="287.85" unit="kelvin"/>
    <pressure unit="hPa" value="1014"/>
    <humidity value="71" unit="%"/>
    <clouds value="overcast clouds" all="97" unit="%"/>
    </time>
    ...
    </time>
    </forecast>
    </weatherdata>
XML format API response fields
location
location.name
City name. Please note that
                                 built-in geocoder functionality has been deprecated. Learn more
here
location.type
Prototype parameter
location.country
Country code (GB, JP etc.).
                                 Please note that built-in geocoder functionality has been deprecated. Learn more
here
location.timezone
Shift in seconds from UTC
location.location
location.location.altitude
Geo location, altitude above the sea level
location.location.latitude
Geo location, latitude
location.location.longitude
Geo location, longitude
location.location.geobase
Internal parameter
location.location.geobaseid
Internal parameter
meta
meta.lastupdate
Internal parameter
meta.calctime
Speed of data calculation
meta.nextupdate
Internal parameter
sun
sun.rise
Sunrise time
sun.set
Sunset time
forecast
forecast.time
forecast.time.day
Date of weather data forecasted
forecast.symbol
forecast.symbol.number
Weather condition id
forecast.symbol.name
Weather condition
forecast.symbol.var
Weather icon id
forecast.precipitation
forecast.precipitation.value
Precipitation volume for the last day,
                                    mm. Please note that only mm as units of measurement are available for this
                                    parameter
forecast.precipitation.type
Type of precipitation. Possible value is
                                    rain, snow
forecast.precipitation.probability
Probability of precipitation. The
                                    values of the parameter vary between 0 and 1, where 0 is equal to 0%, 1 is equal to
                                    100%
forecast.windDirection
forecast.windDirection.deg
Wind direction relevant to the maximum wind
                                    speed, degrees (meteorological)
forecast.windDirection.code
Code of the wind direction relevant to the
                                    maximum wind speed. Possible value is WSW, N, S etc.
forecast.windDirection.name
Full name of the wind direction relevant
                                    to the maximum wind speed
forecast.windSpeed
forecast.windSpeed.mps
Maximum wind speed for the day, meters per
                                    second
forecast.windSpeed.unit
Maximum wind speed units, m/s
forecast.windSpeed.name
Type of wind relevant to the maximum wind speed
forecast.windGust
forecast.windGust.gust
Wind gust, meters per second
forecast.windGust.unit
Wind gust units, m/s
forecast.temperature
forecast.temperature.day
Temperature at 12:00 local time for
                                    forecasted day. Unit Default: Kelvin, Metric: Celsius, Imperial: Fahrenheit
forecast.temperature.min
Min daily temperature. Please find more info
here.
Unit Default: Kelvin, Metric: Celsius, Imperial: Fahrenheit
forecast.temperature.max
Max daily temperature. Please find more info
here.
Unit Default: Kelvin, Metric: Celsius, Imperial: Fahrenheit
forecast.temperature.night
Temperature at 00:00 local time for
                                    forecasted day. Unit Default: Kelvin, Metric: Celsius, Imperial: Fahrenheit
forecast.temperature.eve
Temperature at 18:00 local time for
                                    forecasted day. Unit Default: Kelvin, Metric: Celsius, Imperial: Fahrenheit
forecast.temperature.morn
Temperature at 06:00 local time for
                                    forecasted day. Unit Default: Kelvin, Metric: Celsius, Imperial: Fahrenheit
forecast.temperature.unit
Unit of measurements. Possible values are
                                    Celsius, Kelvin, Fahrenheit
forecast.feels_like
forecast.feels_like.day
Temperature at 12:00 local time for forecasted
                                    day. This temperature parameter accounts for the human perception of weather. Unit
                                    Default: Kelvin, Metric: Celsius, Imperial: Fahrenhei.
forecast.feels_like.night
Temperature at 00:00 local time for
                                    forecasted day. This temperature parameter accounts for the human perception of
                                    weather. Unit Default: Kelvin, Metric: Celsius, Imperial: Fahrenheit
forecast.feels_like.eve
Temperature at 18:00 local time for forecasted
                                    day. This temperature parameter accounts for the human perception of weather. Unit
                                    Default: Kelvin, Metric: Celsius, Imperial: Fahrenheit
forecast.feels_like.morn
Temperature at 06:00 local time for
                                    forecasted day. This temperature parameter accounts for the human perception of
                                    weather. Unit Default: Kelvin, Metric: Celsius, Imperial: Fahrenheit
forecast.feels_like.unit
Unit of measurements. Possible values are
                                    Celsius, Kelvin, Fahrenheit. Unit Default: Kelvin
forecast.pressure
forecast.pressure.unit
hPa
forecast.pressure.value
Pressure value
forecast.humidity
forecast.humidity.unit
%
forecast.humidity.value
Humidity value
forecast.clouds
forecast.pressure.value
Name of the cloudiness
forecast.pressure.all
Cloudiness
forecast.pressure.unit
%
We provide a broad variety of products such as
One Call API 3.0,
Solar Irradiance & Energy Prediction service,
Road Risk API,
Air Pollution API
and solutions
                     for advanced weather parameters like solar irradiance data, UVI, dew point, government weather
                     alerts, etc. Please review our
product list
page and find more info in the product documentation and
pricing
pages.
List of condition codes
List of
weather condition codes
with icons
                  (range of thunderstorm, drizzle, rain, snow, clouds, atmosphere etc.)
Min/max temperature in current weather API and forecast API
Please do not confuse min/max parameters in our weather APIs.
In
16 Day forecast
-
min
and
max
mean maximum and minimum temperature in the
                     day.
In
Current weather API
,
Hourly forecast API
and
5
                        day / 3 hour forecast API
-
temp_min
and
temp_max
are optional parameters mean
                     min / max temperature in the city at the current moment to see deviation from current temp just for
                     your reference. For large cities and megalopolises geographically expanded it might be applicable.
                     In most cases both
temp_min
and
temp_max
parameters have the same volume as 'temp'.
                     Please use
temp_min
and
temp_max
parameters in current weather API optionally.
Example of current weather API response
"main":{
   "temp":306.15, //current temperature
   "pressure":1013,
   "humidity":44,
   "temp_min":306.15, //min current temperature in the city
   "temp_max":306.15 //max current temperature in the city
},
For comparison, take a look at the example of daily forecast weather API response:
Example of daily forecast weather API response
"dt":1406080800,
"temp":{
   "day":297.77,  //daily averaged temperature
   "min":293.52, //daily min temperature
   "max":297.77, //daily max temperature
   "night":293.52, //night temperature
   "eve":297.77, //evening temperature
   "morn":297.77 //morning temperature
}
Bulk downloading
We provide number of bulk files with current weather and forecasts. More information is on the
Bulk page
.
Bulk downloading is available not for all accounts. To get more information please refer to the
Price page.
Examples of bulk files
http://bulk.openweathermap.org/sample/
Other features
Geocoding API
Requesting API calls by geographical coordinates is the most accurate way to specify any location. If
                  you need to convert city names and zip-codes to geo coordinates and the other way around
                  automatically, please use our
Geocoding API
.
Built-in geocoding
Please use
Geocoder API
if you need automatic convert city
                     names and zip-codes to geo coordinates and the other way around.
Please note that
API requests by city name
,
zip-codes
and
city id
have been deprecated. Although they are still available for use,
                        bug fixing and updates are no longer available for this functionality.
Built-in API request by city name
You can search 16 day weather forecast with daily average parameters by city name. All weather data
                     can be obtained in JSON and XML formats.
API calls
api.openweathermap.org/data/2.5/forecast/daily?q={city name}&cnt={cnt}&appid=
{API key}
api.openweathermap.org/data/2.5/forecast/daily?q={city name},{country code}&cnt={cnt}&appid=
{API key}
api.openweathermap.org/data/2.5/forecast/daily?q={city name},{state code},{country code}&cnt={cnt}&appid=
{API key}
Parameters
q
required
City name, state code and country code divided by comma, use ISO 3166 country codes. You can
                           specify the parameter not only in English. In this case, the API response should be returned
                           in the same language as the language of requested location name if the location is in our
                           predefined list of more than 200,000 locations.
appid
required
Your unique API key (you can always find it on your account page under the
"API key" tab
)
cnt
optional
A number of days, which will be returned in the API response (from
1
to
16
).
Learn more
mode
optional
Data format. Possible values are:
json
,
xml
. If the
mode
parameter is empty the format is JSON by default.
Learn
                              more
units
optional
Units of measurement.
standard
,
metric
and
imperial
units are available. If you do not use the
units
parameter,
standard
units will be applied by default.
Learn more
lang
optional
Language code.
Learn more
Examples of API calls
Call 7 days forecast by city name in metric units
api.openweathermap.org/data/2.5/forecast/daily?q=London&units=metric&cnt=7&appid=
{API key}
{
  "city": {
    "id": 2643743,
    "name": "London",
    "coord": {
      "lon": -0.1257,
      "lat": 51.5085
    },
    "country": "GB",
    "population": 1000000,
    "timezone": 3600
  },
  "cod": "200",
  "message": 0.0610271,
  "cnt": 7,
  "list": [
    {
      "dt": 1625140800,
      "sunrise": 1625111254,
      "sunset": 1625170853,
      "temp": {
        "day": 19.55,
        "min": 11.96,
        "max": 19.77,
        "night": 16.09,
        "eve": 19.47,
        "morn": 13.33
      },
      "feels_like": {
        "day": 19.15,
        "night": 15.43,
        "eve": 18.93,
        "morn": 12.7
      },
      "pressure": 1018,
      "humidity": 61,
      "weather": [
        {
          "id": 803,
          "main": "Clouds",
          "description": "broken clouds",
          "icon": "04d"
        }
      ],
      "speed": 2.71,
      "deg": 335,
      "gust": 3.8,
      "clouds": 69,
      "pop": 0.15
    },
    {
      "dt": 1625227200,
      "sunrise": 1625197696,
      "sunset": 1625257232,
      "temp": {
        "day": 21.51,
        "min": 14.46,
        "max": 22.73,
        "night": 16.56,
        "eve": 20.83,
        "morn": 15.21
      },
      "feels_like": {
        "day": 21.36,
        "night": 16.54,
        "eve": 20.69,
        "morn": 14.72
      },
      "pressure": 1016,
      "humidity": 63,
      "weather": [
        {
          "id": 500,
          "main": "Rain",
          "description": "light rain",
          "icon": "10d"
        }
      ],
      "speed": 4.01,
      "deg": 216,
      "gust": 6.08,
      "clouds": 58,
      "pop": 0.77,
      "rain": 2.32
    },
    {
      "dt": 1625313600,
      "sunrise": 1625284141,
      "sunset": 1625343609,
      "temp": {
        "day": 17.31,
        "min": 15.75,
        "max": 21.21,
        "night": 16.17,
        "eve": 18.97,
        "morn": 15.81
      },
      "feels_like": {
        "day": 17.34,
        "night": 16.24,
        "eve": 19.09,
        "morn": 15.56
      },
      "pressure": 1014,
      "humidity": 86,
      "weather": [
        {
          "id": 500,
          "main": "Rain",
          "description": "light rain",
          "icon": "10d"
        }
      ],
      "speed": 3.84,
      "deg": 212,
      "gust": 7.93,
      "clouds": 100,
      "pop": 0.81,
      "rain": 3.83
    },
    {
      "dt": 1625400000,
      "sunrise": 1625370588,
      "sunset": 1625429982,
      "temp": {
        "day": 19.05,
        "min": 14.03,
        "max": 19.58,
        "night": 15.56,
        "eve": 18.49,
        "morn": 15.69
      },
      "feels_like": {
        "day": 19.13,
        "night": 15.52,
        "eve": 18.51,
        "morn": 15.61
      },
      "pressure": 1008,
      "humidity": 81,
      "weather": [
        {
          "id": 501,
          "main": "Rain",
          "description": "moderate rain",
          "icon": "10d"
        }
      ],
      "speed": 3.62,
      "deg": 193,
      "gust": 7.41,
      "clouds": 99,
      "pop": 0.96,
      "rain": 5.95
    },
    {
      "dt": 1625486400,
      "sunrise": 1625457037,
      "sunset": 1625516353,
      "temp": {
        "day": 19.8,
        "min": 13.43,
        "max": 19.8,
        "night": 17.49,
        "eve": 16.04,
        "morn": 14.3
      },
      "feels_like": {
        "day": 19.27,
        "night": 17.7,
        "eve": 16.21,
        "morn": 14.06
      },
      "pressure": 1008,
      "humidity": 55,
      "weather": [
        {
          "id": 500,
          "main": "Rain",
          "description": "light rain",
          "icon": "10d"
        }
      ],
      "speed": 7.51,
      "deg": 188,
      "gust": 16.28,
      "clouds": 98,
      "pop": 1,
      "rain": 4.79
    },
    {
      "dt": 1625572800,
      "sunrise": 1625543489,
      "sunset": 1625602720,
      "temp": {
        "day": 19.68,
        "min": 13.27,
        "max": 20.38,
        "night": 15.47,
        "eve": 18.33,
        "morn": 14.21
      },
      "feels_like": {
        "day": 19.3,
        "night": 15.03,
        "eve": 17.86,
        "morn": 13.83
      },
      "pressure": 1009,
      "humidity": 61,
      "weather": [
        {
          "id": 500,
          "main": "Rain",
          "description": "light rain",
          "icon": "10d"
        }
      ],
      "speed": 8.19,
      "deg": 211,
      "gust": 16.75,
      "clouds": 32,
      "pop": 1,
      "rain": 1.91
    },
    {
      "dt": 1625659200,
      "sunrise": 1625629943,
      "sunset": 1625689085,
      "temp": {
        "day": 19.64,
        "min": 14.35,
        "max": 20.32,
        "night": 15.98,
        "eve": 19.61,
        "morn": 15.25
      },
      "feels_like": {
        "day": 19.3,
        "night": 15.77,
        "eve": 19.27,
        "morn": 15
      },
      "pressure": 1016,
      "humidity": 63,
      "weather": [
        {
          "id": 500,
          "main": "Rain",
          "description": "light rain",
          "icon": "10d"
        }
      ],
      "speed": 5.04,
      "deg": 202,
      "gust": 12.18,
      "clouds": 86,
      "pop": 0.21,
      "rain": 0.13
    }
  ]
}
Please note, that searching by states available only for the USA locations.
There is a possibility to receive a central district of the city/town with its own parameters
                        (geographic coordinates/id/name) in API response. Please see the example below
Call 16 days forecast by geographic coordinates
api.openweathermap.org/data/2.5/forecast/daily?q=München,DE&appid=
{API key}
{
  "city": {
    "id": 2867714,
    "name": "Munich",
    "coord": {
      "lon": 11.5755,
      "lat": 48.1374
    },
    "country": "DE",
    "population": 1260391,
    "timezone": 7200
  },
  "cod": "200",
  "message": 0.0518182,
  "cnt": 7,
  "list": [
    {
      "dt": 1625137200,
      "sunrise": 1625109452,
      "sunset": 1625167037,
      "temp": {
        "day": 287.91,
        "min": 284.05,
        "max": 287.91,
        "night": 285.11,
        "eve": 286.19,
        "morn": 284.05
      },
      "feels_like": {
        "day": 287.53,
        "night": 284.84,
        "eve": 285.95,
        "morn": 283.65
      },
      "pressure": 1015,
      "humidity": 80,
      "weather": [
        {
          "id": 501,
          "main": "Rain",
          "description": "moderate rain",
          "icon": "10d"
        }
      ],
      "speed": 6.27,
      "deg": 258,
      "gust": 12.42,
      "clouds": 100,
      "pop": 1,
      "rain": 10.96
    },
    {
      "dt": 1625223600,
      "sunrise": 1625195889,
      "sunset": 1625253422,
      "temp": {
        "day": 291.94,
        "min": 283.54,
        "max": 293.73,
        "night": 285.73,
        "eve": 292.25,
        "morn": 284.92
      },
      "feels_like": {
        "day": 291.47,
        "night": 285.29,
        "eve": 291.91,
        "morn": 284.58
      },
      "pressure": 1019,
      "humidity": 61,
      "weather": [
        {
          "id": 500,
          "main": "Rain",
          "description": "light rain",
          "icon": "10d"
        }
      ],
      "speed": 3.73,
      "deg": 320,
      "gust": 5.28,
      "clouds": 70,
      "pop": 0.38,
      "rain": 0.15
    },
    {
      "dt": 1625310000,
      "sunrise": 1625282329,
      "sunset": 1625339804,
      "temp": {
        "day": 295.56,
        "min": 284.31,
        "max": 295.88,
        "night": 288.83,
        "eve": 291.49,
        "morn": 288.28
      },
      "feels_like": {
        "day": 295.24,
        "night": 288.86,
        "eve": 291.39,
        "morn": 287.86
      },
      "pressure": 1016,
      "humidity": 53,
      "weather": [
        {
          "id": 500,
          "main": "Rain",
          "description": "light rain",
          "icon": "10d"
        }
      ],
      "speed": 2.55,
      "deg": 51,
      "gust": 2.39,
      "clouds": 96,
      "pop": 0.36,
      "rain": 0.61
    },
    {
      "dt": 1625396400,
      "sunrise": 1625368770,
      "sunset": 1625426183,
      "temp": {
        "day": 291.78,
        "min": 287.26,
        "max": 293.98,
        "night": 288.35,
        "eve": 291.19,
        "morn": 287.32
      },
      "feels_like": {
        "day": 291.79,
        "night": 288.41,
        "eve": 291.37,
        "morn": 287.38
      },
      "pressure": 1012,
      "humidity": 80,
      "weather": [
        {
          "id": 501,
          "main": "Rain",
          "description": "moderate rain",
          "icon": "10d"
        }
      ],
      "speed": 2.23,
      "deg": 78,
      "gust": 4,
      "clouds": 98,
      "pop": 0.99,
      "rain": 8.53
    },
    {
      "dt": 1625482800,
      "sunrise": 1625455214,
      "sunset": 1625512559,
      "temp": {
        "day": 292.64,
        "min": 286.76,
        "max": 294.28,
        "night": 287.83,
        "eve": 292.05,
        "morn": 286.76
      },
      "feels_like": {
        "day": 292.45,
        "night": 287.76,
        "eve": 292.03,
        "morn": 286.71
      },
      "pressure": 1016,
      "humidity": 69,
      "weather": [
        {
          "id": 500,
          "main": "Rain",
          "description": "light rain",
          "icon": "10d"
        }
      ],
      "speed": 4.59,
      "deg": 271,
      "gust": 10.71,
      "clouds": 100,
      "pop": 1,
      "rain": 5.28
    },
    {
      "dt": 1625569200,
      "sunrise": 1625541659,
      "sunset": 1625598933,
      "temp": {
        "day": 300.23,
        "min": 286.07,
        "max": 300.43,
        "night": 291.23,
        "eve": 296.12,
        "morn": 290.35
      },
      "feels_like": {
        "day": 300.58,
        "night": 291.34,
        "eve": 296.51,
        "morn": 290.16
      },
      "pressure": 1016,
      "humidity": 49,
      "weather": [
        {
          "id": 800,
          "main": "Clear",
          "description": "sky is clear",
          "icon": "01d"
        }
      ],
      "speed": 3.36,
      "deg": 85,
      "gust": 7.31,
      "clouds": 0,
      "pop": 0
    },
    {
      "dt": 1625655600,
      "sunrise": 1625628107,
      "sunset": 1625685304,
      "temp": {
        "day": 301.22,
        "min": 288.54,
        "max": 301.62,
        "night": 293.1,
        "eve": 297.38,
        "morn": 292.67
      },
      "feels_like": {
        "day": 301.96,
        "night": 293.14,
        "eve": 297.76,
        "morn": 292.74
      },
      "pressure": 1017,
      "humidity": 53,
      "weather": [
        {
          "id": 800,
          "main": "Clear",
          "description": "sky is clear",
          "icon": "01d"
        }
      ],
      "speed": 3.82,
      "deg": 76,
      "gust": 7.32,
      "clouds": 0,
      "pop": 0
    }
  ]
}
Built-in API request by city ID
You can seach 16 day weather forecast with daily average parameters by city ID. All weather data
                     can be obtained in JSON and XML format.
List of city ID 'city.list.json.gz' can be downloaded
here.
We recommend to call API by city ID to get unambiguous result for your city.
API call
api.openweathermap.org/data/2.5/forecast/daily?id={city ID}&cnt={cnt}&appid=
{API key}
Parameters
id
required
city ID
appid
required
Your unique API key (you can always find it on your account page under the
"API key" tab
)
cnt
optional
A number of days, which will be returned in the API response (from
1
to
16
).
Learn more
mode
optional
Data format. Possible values are:
json
,
xml
. If the
mode
parameter is empty the format is JSON by default.
Learn
                              more
units
optional
Units of measurement.
standard
,
metric
and
imperial
units are available. If you do not use the
units
parameter,
standard
units will be applied by default.
Learn more
lang
optional
Language code.
Learn more
Example of API call
api.openweathermap.org/data/2.5/forecast/daily?id=524901&appid=
{API key}
{
   "cod":"200",
   "message":0,
   "city":{
      "geoname_id":524901,
      "name":"Moscow",
      "lat":55.7522,
      "lon":37.6156,
      "country":"RU",
      "iso2":"RU",
      "type":"city",
      "population":0
   },
   "cnt":7,
   "list":[
      {
         "dt":1485766800,
         "temp":{
            "day":262.65,
            "min":261.41,
            "max":262.65,
            "night":261.41,
            "eve":262.65,
            "morn":262.65
         },
         "pressure":1024.53,
         "humidity":76,
         "weather":[
            {
               "id":800,
               "main":"Clear",
               "description":"sky is clear",
               "icon":"01d"
            }
         ],
         "speed":4.57,
         "deg":225,
         "gust": 8.3,
         "clouds":0,
         "snow":0.01
      },
      {
         "dt":1485853200,
         "temp":{
            "day":262.31,
            "min":260.98,
            "max":265.44,
            "night":265.44,
            "eve":264.18,
            "morn":261.46
         },
         "pressure":1018.1,
         "humidity":91,
         "weather":[
            {
               "id":600,
               "main":"Snow",
               "description":"light snow",
               "icon":"13d"
            }
         ],
         "speed":4.1,
         "deg":249,
         "gust": 6.3,
         "clouds":88,
         "snow":1.44
      },
      {
         "dt":1485939600,
         "temp":{
            "day":270.27,
            "min":266.9,
            "max":270.59,
            "night":268.06,
            "eve":269.66,
            "morn":266.9
         },
         "pressure":1010.85,
         "humidity":92,
         "weather":[
            {
               "id":600,
               "main":"Snow",
               "description":"light snow",
               "icon":"13d"
            }
         ],
         "speed":4.53,
         "deg":298,
         "gust": 5.3,
         "clouds":64,
         "snow":0.92
      },
      {
         "dt":1486026000,
         "temp":{
            "day":263.46,
            "min":255.19,
            "max":264.02,
            "night":255.59,
            "eve":259.68,
            "morn":263.38
         },
         "pressure":1019.32,
         "humidity":84,
         "weather":[
            {
               "id":800,
               "main":"Clear",
               "description":"sky is clear",
               "icon":"01d"
            }
         ],
         "speed":3.06,
         "deg":344,
         "gust": 5.3,
         "clouds":0
      },
      {
         "dt":1486112400,
         "temp":{
            "day":265.69,
            "min":256.55,
            "max":266,
            "night":256.55,
            "eve":260.09,
            "morn":266
         },
         "pressure":1012.2,
         "humidity":0,
         "weather":[
            {
               "id":600,
               "main":"Snow",
               "description":"light snow",
               "icon":"13d"
            }
         ],
         "speed":7.35,
         "deg":24,
         "gust": 5.3,
         "clouds":45,
         "snow":0.21
      },
      {
         "dt":1486198800,
         "temp":{
            "day":259.95,
            "min":254.73,
            "max":259.95,
            "night":257.13,
            "eve":254.73,
            "morn":257.02
         },
         "pressure":1029.5,
         "humidity":0,
         "weather":[
            {
               "id":800,
               "main":"Clear",
               "description":"sky is clear",
               "icon":"01d"
            }
         ],
         "speed":2.6,
         "deg":331,
         "gust": 5.3,
         "clouds":29
      },
      {
         "dt":1486285200,
         "temp":{
            "day":263.13,
            "min":259.11,
            "max":263.13,
            "night":262.01,
            "eve":261.32,
            "morn":259.11
         },
         "pressure":1023.21,
         "humidity":0,
         "weather":[
            {
               "id":600,
               "main":"Snow",
               "description":"light snow",
               "icon":"13d"
            }
         ],
         "speed":5.33,
         "deg":234,
         "gust": 8.9,
         "clouds":46,
         "snow":0.04
      }
   ]
}
Built-in API request by ZIP code
Please note if country is not specified then the search works for USA as a default.
API call
api.openweathermap.org/data/2.5/forecast/daily?zip={zip code},{country code}&appid=
{API key}
Parameters
zip
required
Zip code
appid
required
Your unique API key (you can always find it on your account page under the
"API key" tab
)
cnt
optional
A number of days, which will be returned in the API response (from
1
to
16
).
Learn more
mode
optional
Data format. Possible values are:
json
,
xml
. If the
mode
parameter is empty the format is JSON by default.
Learn
                              more
units
optional
Units of measurement.
standard
,
metric
and
imperial
units are available. If you do not use the
units
parameter,
standard
units will be applied by default.
Learn more
lang
optional
Language code.
Learn more
Example of API call
api.openweathermap.org/data/2.5/forecast/daily?zip=94040,us&appid=
{API key}
{
   "city":{
      "id":0,
      "name":"Mountain View",
      "coord":{
         "lon":-122.088,
         "lat":37.3855
      },
      "country":"US",
      "population":0
   },
   "cod":"200",
   "message":2.1505307,
   "cnt":7,
   "list":[
      {
         "dt":1519070400,
         "temp":{
            "day":283.99,
            "min":271.86,
            "max":283.99,
            "night":271.86,
            "eve":278.3,
            "morn":280.44
         },
         "pressure":989.94,
         "humidity":52,
         "weather":[
            {
               "id":500,
               "main":"Rain",
               "description":"light rain",
               "icon":"10d"
            }
         ],
         "speed":3.36,
         "deg":325,
         "gust": 5.3,
         "clouds":20,
         "rain":0.31
      },
      {
         "dt":1519156800,
         "temp":{
            "day":282.68,
            "min":268.17,
            "max":282.68,
            "night":271.62,
            "eve":277.16,
            "morn":268.17
         },
         "pressure":996.36,
         "humidity":50,
         "weather":[
            {
               "id":800,
               "main":"Clear",
               "description":"sky is clear",
               "icon":"01d"
            }
         ],
         "speed":1.25,
         "deg":245,
         "gust": 1.3,
         "clouds":0
      },
      {
         "dt":1519243200,
         "temp":{
            "day":280.88,
            "min":271.62,
            "max":280.98,
            "night":274.19,
            "eve":277.8,
            "morn":271.62
         },
         "pressure":996.59,
         "humidity":84,
         "weather":[
            {
               "id":500,
               "main":"Rain",
               "description":"light rain",
               "icon":"10d"
            }
         ],
         "speed":1.46,
         "deg":232,
         "gust": 2.3,
         "clouds":92,
         "rain":1.3
      },
      {
         "dt":1519329600,
         "temp":{
            "day":283.8,
            "min":282.02,
            "max":285.94,
            "night":284.02,
            "eve":285.94,
            "morn":282.02
         },
         "pressure":1014.12,
         "humidity":0,
         "weather":[
            {
               "id":501,
               "main":"Rain",
               "description":"moderate rain",
               "icon":"10d"
            }
         ],
         "speed":6.4,
         "deg":173,
         "gust": 7.3,
         "clouds":57,
         "rain":11.41
      },
      {
         "dt":1519416000,
         "temp":{
            "day":284.36,
            "min":281.5,
            "max":285.85,
            "night":281.5,
            "eve":285.85,
            "morn":283.32
         },
         "pressure":1014.73,
         "humidity":0,
         "weather":[
            {
               "id":501,
               "main":"Rain",
               "description":"moderate rain",
               "icon":"10d"
            }
         ],
         "speed":4.23,
         "deg":114,
         "gust": 5.3,
         "clouds":89,
         "rain":9.29
      },
      {
         "dt":1519502400,
         "temp":{
            "day":285.58,
            "min":279.27,
            "max":288.96,
            "night":282.02,
            "eve":288.96,
            "morn":279.27
         },
         "pressure":1015.81,
         "humidity":0,
         "weather":[
            {
               "id":500,
               "main":"Rain",
               "description":"light rain",
               "icon":"10d"
            }
         ],
         "speed":1.27,
         "deg":57,
         "gust": 3.3,
         "clouds":9
      },
      {
         "dt":1519588800,
         "temp":{
            "day":287.05,
            "min":279.96,
            "max":290.51,
            "night":282.65,
            "eve":290.51,
            "morn":279.96
         },
         "pressure":1012.12,
         "humidity":0,
         "weather":[
            {
               "id":800,
               "main":"Clear",
               "description":"sky is clear",
               "icon":"01d"
            }
         ],
         "speed":1.75,
         "deg":54,
         "gust": 4.1,
         "clouds":1
      }
   ]
}
Format
Data format. JSON format is used by default. To get data in XML format use
mode=xml
.
Parameters
mode
optional
Data format. Possible values are:
json
,
xml
. If the
mode
parameter is empty the format is JSON by default.
Examples of API calls
JSON
api.openweathermap.org/data/2.5/weather?q=London&appid=
{API key}
{
   "coord":{
      "lon":-0.13,
      "lat":51.51
   },
   "weather":[
      {
         "id":300,
         "main":"Drizzle",
         "description":"light intensity drizzle",
         "icon":"09d"
      }
   ],
   "base":"stations",
   "main":{
      "temp":280.32,
      "pressure":1012,
      "humidity":81,
      "temp_min":279.15,
      "temp_max":281.15
   },
   "visibility":10000,
   "wind":{
      "speed":4.1,
      "deg":80,
      "gust":10
   },
   "clouds":{
      "all":90
   },
   "dt":1485789600,
   "sys":{
      "type":1,
      "id":5091,
      "message":0.0103,
      "country":"GB",
      "sunrise":1485762037,
      "sunset":1485794875
   },
   "id":2643743,
   "name":"London",
   "cod":200
}
XML
api.openweathermap.org/data/2.5/weather?q=London&mode=xml
<weatherdata>
<location>
<name>London</name>
<type />
<country>GB</country>
<timezone />
<location altitude="0" latitude="51.5085" longitude="-0.1258" geobase="geonames" geobaseid="2643743" />
</location>
<credit />
<meta>
<lastupdate />
<calctime>0.0117</calctime>
<nextupdate />
</meta>
<sun rise="2017-01-30T07:40:34" set="2017-01-30T16:47:56" />
<forecast>
<time day="2017-01-30">
 <symbol number="500" name="light rain" var="10d" />
 <precipitation value="1.64" type="rain" />
 <windDirection deg="85" code="E" name="East" />
 <windSpeed mps="1.97" name="Light breeze" />
 <windGust gust="3.31" unit="m/s"/>
 <temperature day="7" min="4.34" max="7" night="4.91" eve="5.05" morn="7" />
 <pressure unit="hPa" value="1016.99" />
 <humidity value="100" unit="%" />
 <clouds value="few clouds" all="12" unit="%" />
</time>
<time day="2017-01-31">
 <symbol number="501" name="moderate rain" var="10d" />
 <precipitation value="9.42" type="rain" />
 <windDirection deg="140" code="SE" name="SouthEast" />
 <windSpeed mps="3.37" name="" />
 <windGust gust="6.31" unit="m/s"/>
 <temperature day="9.66" min="6.16" max="11.51" night="10.63" eve="10.85" morn="6.16" />
 <pressure unit="hPa" value="1018.15" />
 <humidity value="100" unit="%" />
 <clouds value="overcast clouds" all="92" unit="%" />
</time>
<time day="2017-02-01">
 <symbol number="501" name="moderate rain" var="10d" />
 <precipitation value="9.11" type="rain" />
 <windDirection deg="197" code="SSW" name="South-southwest" />
 <windSpeed mps="5.01" name="Gentle Breeze" />
 <windGust gust="6.31" unit="m/s"/>
 <temperature day="9.81" min="9.64" max="10.23" night="10.08" eve="9.81" morn="10.03" />
 <pressure unit="hPa" value="1011.7" />
 <humidity value="99" unit="%" />
 <clouds value="scattered clouds" all="44" unit="%" />
 </time>
 <time day="2017-02-02">
 <symbol number="501" name="moderate rain" var="10d" />
 <precipitation value="3.98" type="rain" />
 <windDirection deg="184" code="S" name="South" />
 <windSpeed mps="8.42" name="Fresh Breeze" />
 <windGust gust="10.31" unit="m/s"/>
 <temperature day="11.44" min="8.86" max="11.53" night="8.86" eve="10.99" morn="10.05" />
 <pressure unit="hPa" value="999.34" />
 <humidity value="96" unit="%" />
 <clouds value="overcast clouds" all="92" unit="%" />
</time>
<time day="2017-02-03">
 <symbol number="500" name="light rain" var="10d" />
 <precipitation value="1.65" type="rain" />
 <windDirection deg="213" code="SSW" name="South-southwest" />
 <windSpeed mps="8.51" name="Fresh Breeze" />
 <windGust gust="11.31" unit="m/s"/>
 <temperature day="10.66" min="8.63" max="10.66" night="8.63" eve="9.14" morn="10.18" />
 <pressure unit="hPa" value="1010.98" />
 <humidity value="0" unit="%" />
 <clouds value="scattered clouds" all="48" unit="%" />
</time>
<time day="2017-02-04">
 <symbol number="501" name="moderate rain" var="10d" />
 <precipitation value="7.25" type="rain" />
 <windDirection deg="172" code="S" name="South" />
 <windSpeed mps="10.39" name="Fresh Breeze" />
 <temperature day="8.68" min="7.07" max="10.4" night="8.48" eve="10.4" morn="7.07" />
 <pressure unit="hPa" value="1001.13" />
 <humidity value="0" unit="%" />
 <clouds value="overcast clouds" all="96" unit="%" />
</time>
<time day="2017-02-05">
 <symbol number="501" name="moderate rain" var="10d" />
 <precipitation value="4.24" type="rain" />
 <windDirection deg="274" code="W" name="West" />
 <windSpeed mps="6.21" name="Moderate breeze" />
 <windGust gust="9.31" unit="m/s"/>
 <temperature day="8.5" min="4.86" max="8.5" night="4.86" eve="6.25" morn="8.26" />
 <pressure unit="hPa" value="995.24" />
 <humidity value="0" unit="%" />
 <clouds value="broken clouds" all="64" unit="%" />
</time>
</forecast>
</weatherd
Limitation of result
To limit the number of returned days please use
cnt
parameter.
Parameters
cnt
A number of days, which will be returned in the API response
Example of API call
http://api.openweathermap.org/data/2.5/forecast/daily?q=London&cnt=3&appid=
{API key}
{
  "city": {
    "id": 2643743,
    "name": "London",
    "coord": {
      "lon": -0.1257,
      "lat": 51.5085
    },
    "country": "GB",
    "population": 1000000,
    "timezone": 3600
  },
  "cod": "200",
  "message": 0.05491,
  "cnt": 3,
  "list": [
    {
      "dt": 1599735600,
      "sunrise": 1599715685,
      "sunset": 1599762420,
      "temp": {
        "day": 292.05,
        "min": 286.3,
        "max": 292.77,
        "night": 289.72,
        "eve": 291.46,
        "morn": 286.3
      },
      "feels_like": {
        "day": 289.68,
        "night": 288,
        "eve": 288.78,
        "morn": 284.19
      },
      "pressure": 1023,
      "humidity": 40,
      "weather": [
        {
          "id": 800,
          "main": "Clear",
          "description": "sky is clear",
          "icon": "01d"
        }
      ],
      "speed": 1.78,
      "deg": 332,
      "gust": 7.74,
      "clouds": 0,
      "pop": 0
    },
    {
      "dt": 1599822000,
      "sunrise": 1599802180,
      "sunset": 1599848682,
      "temp": {
        "day": 292.26,
        "min": 286.58,
        "max": 293.36,
        "night": 288.83,
        "eve": 290.65,
        "morn": 286.58
      },
      "feels_like": {
        "day": 289.07,
        "night": 286.12,
        "eve": 287.85,
        "morn": 284.39
      },
      "pressure": 1016,
      "humidity": 48,
      "weather": [
        {
          "id": 802,
          "main": "Clouds",
          "description": "scattered clouds",
          "icon": "03d"
        }
      ],
      "speed": 3.84,
      "deg": 242,
      "gust": 7.74,
      "clouds": 50,
      "pop": 0
    },
    {
      "dt": 1599908400,
      "sunrise": 1599888675,
      "sunset": 1599934943,
      "temp": {
        "day": 292.86,
        "min": 285.62,
        "max": 293.08,
        "night": 290.3,
        "eve": 292.15,
        "morn": 285.62
      },
      "feels_like": {
        "day": 290.24,
        "night": 289.13,
        "eve": 290.42,
        "morn": 282.9
      },
      "pressure": 1018,
      "humidity": 57,
      "weather": [
        {
          "id": 803,
          "main": "Clouds",
          "description": "broken clouds",
          "icon": "04d"
        }
      ],
      "speed": 4.19,
      "deg": 258,
      "gust": 7.74,
      "clouds": 74,
      "pop": 0
    }
  ]
}
Units of measurement
standard
,
metric
, and
imperial
units are available.
List of all API parameters with available units
.
Parameters
units
optional
Units of measurement.
standard
,
metric
and
imperial
units are available. If you do not use the
units
parameter,
standard
units will be applied by default.
Temperature is available in Fahrenheit, Celsius and Kelvin units.
Maximum wind speed is available in miles/hour and meter/sec.
For temperature in Fahrenheit and maximum wind speed in miles/hour, use
units=imperial
For temperature in Celsius and maximum wind speed in meter/sec, use
units=metric
Temperature in Kelvin and maximum wind speed in meter/sec is used by default, so there is no
                        need to use the units parameter in the API call if you want this
Examples of API calls:
Standard
https://api.openweathermap.org/data/2.5/forecast/daily?lat=57&lon=-2.15&appid=
{API key}
{
  "city": {
    "id": 2641549,
    "name": "Newtonhill",
    "coord": {
      "lon": -2.15,
      "lat": 57
    },
    "country": "GB",
    "population": 3284,
    "timezone": 0
  },
  "cod": "200",
  "message": 18.6725653,
  "cnt": 3,
  "list": [
    {
      "dt": 1647345600,
      "sunrise": 1647325488,
      "sunset": 1647367827,
      "temp": {
        "day": 281.19,
        "min": 277.08,
        "max": 282.35,
        "night": 280.36,
        "eve": 281.38,
        "morn": 277.18
      },
      "feels_like": {
        "day": 277.4,
        "night": 276.74,
        "eve": 278.04,
        "morn": 273.02
      },
      "pressure": 1015,
      "humidity": 79,
      "weather": [
        {
          "id": 500,
          "main": "Rain",
          "description": "light rain",
          "icon": "10d"
        }
      ],
      "speed": 7.61,
      "deg": 194,
      "gust": 13.48,
      "clouds": 96,
      "pop": 0.42,
      "rain": 0.29
    },
    {
      "dt": 1647432000,
      "sunrise": 1647411724,
      "sunset": 1647454355,
      "temp": {
        "day": 277.19,
        "min": 276.21,
        "max": 280.35,
        "night": 276.21,
        "eve": 277.45,
        "morn": 280.17
      },
      "feels_like": {
        "day": 273.32,
        "night": 273.57,
        "eve": 274.5,
        "morn": 277.64
      },
      "pressure": 1017,
      "humidity": 97,
      "weather": [
        {
          "id": 501,
          "main": "Rain",
          "description": "moderate rain",
          "icon": "10d"
        }
      ],
      "speed": 5.98,
      "deg": 197,
      "gust": 12.39,
      "clouds": 100,
      "pop": 1,
      "rain": 11.28
    },
    {
      "dt": 1647518400,
      "sunrise": 1647497960,
      "sunset": 1647540883,
      "temp": {
        "day": 280.48,
        "min": 275.63,
        "max": 281.96,
        "night": 277.17,
        "eve": 280.4,
        "morn": 275.63
      },
      "feels_like": {
        "day": 275.95,
        "night": 274.37,
        "eve": 276.42,
        "morn": 271.27
      },
      "pressure": 1020,
      "humidity": 77,
      "weather": [
        {
          "id": 803,
          "main": "Clouds",
          "description": "broken clouds",
          "icon": "04d"
        }
      ],
      "speed": 11.13,
      "deg": 234,
      "gust": 18.4,
      "clouds": 52,
      "pop": 0
    }
  ]
}
metric
https://api.openweathermap.org/data/2.5/forecast/daily?lat=57&lon=-2.15&appid=
{API key}
&units=metric
{
  "city": {
    "id": 2641549,
    "name": "Newtonhill",
    "coord": {
      "lon": -2.15,
      "lat": 57
    },
    "country": "GB",
    "population": 3284,
    "timezone": 0
  },
  "cod": "200",
  "message": 18.7713997,
  "cnt": 3,
  "list": [
    {
      "dt": 1647345600,
      "sunrise": 1647325488,
      "sunset": 1647367827,
      "temp": {
        "day": 7.89,
        "min": 3.93,
        "max": 8.83,
        "night": 7.21,
        "eve": 8.08,
        "morn": 4.03
      },
      "feels_like": {
        "day": 4.06,
        "night": 3.59,
        "eve": 4.7,
        "morn": -0.13
      },
      "pressure": 1015,
      "humidity": 78,
      "weather": [
        {
          "id": 500,
          "main": "Rain",
          "description": "light rain",
          "icon": "10d"
        }
      ],
      "speed": 7.61,
      "deg": 194,
      "gust": 13.48,
      "clouds": 96,
      "pop": 0.42,
      "rain": 0.29
    },
    {
      "dt": 1647432000,
      "sunrise": 1647411724,
      "sunset": 1647454355,
      "temp": {
        "day": 4.04,
        "min": 3.06,
        "max": 7.2,
        "night": 3.06,
        "eve": 4.3,
        "morn": 7.02
      },
      "feels_like": {
        "day": 0.17,
        "night": 0.42,
        "eve": 1.35,
        "morn": 4.49
      },
      "pressure": 1017,
      "humidity": 97,
      "weather": [
        {
          "id": 501,
          "main": "Rain",
          "description": "moderate rain",
          "icon": "10d"
        }
      ],
      "speed": 5.98,
      "deg": 197,
      "gust": 12.39,
      "clouds": 100,
      "pop": 1,
      "rain": 11.28
    },
    {
      "dt": 1647518400,
      "sunrise": 1647497960,
      "sunset": 1647540883,
      "temp": {
        "day": 7.33,
        "min": 2.48,
        "max": 8.81,
        "night": 4.02,
        "eve": 7.25,
        "morn": 2.48
      },
      "feels_like": {
        "day": 2.8,
        "night": 1.22,
        "eve": 3.27,
        "morn": -1.88
      },
      "pressure": 1020,
      "humidity": 77,
      "weather": [
        {
          "id": 803,
          "main": "Clouds",
          "description": "broken clouds",
          "icon": "04d"
        }
      ],
      "speed": 11.13,
      "deg": 234,
      "gust": 18.4,
      "clouds": 52,
      "pop": 0
    }
  ]
}
imperial
https://api.openweathermap.org/data/2.5/forecast/daily?lat=57&lon=-2.15&appid=
{API key}
&units=imperial
{
  "city": {
    "id": 2641549,
    "name": "Newtonhill",
    "coord": {
      "lon": -2.15,
      "lat": 57
    },
    "country": "GB",
    "population": 3284,
    "timezone": 0
  },
  "cod": "200",
  "message": 17.7929425,
  "cnt": 3,
  "list": [
    {
      "dt": 1647345600,
      "sunrise": 1647325488,
      "sunset": 1647367827,
      "temp": {
        "day": 46.2,
        "min": 39.07,
        "max": 47.89,
        "night": 44.98,
        "eve": 46.54,
        "morn": 39.25
      },
      "feels_like": {
        "day": 39.31,
        "night": 38.46,
        "eve": 40.46,
        "morn": 31.77
      },
      "pressure": 1015,
      "humidity": 78,
      "weather": [
        {
          "id": 500,
          "main": "Rain",
          "description": "light rain",
          "icon": "10d"
        }
      ],
      "speed": 17.02,
      "deg": 194,
      "gust": 30.15,
      "clouds": 96,
      "pop": 0.42,
      "rain": 0.29
    },
    {
      "dt": 1647432000,
      "sunrise": 1647411724,
      "sunset": 1647454355,
      "temp": {
        "day": 39.27,
        "min": 37.51,
        "max": 44.96,
        "night": 37.51,
        "eve": 39.74,
        "morn": 44.64
      },
      "feels_like": {
        "day": 32.31,
        "night": 32.76,
        "eve": 34.43,
        "morn": 40.08
      },
      "pressure": 1017,
      "humidity": 97,
      "weather": [
        {
          "id": 501,
          "main": "Rain",
          "description": "moderate rain",
          "icon": "10d"
        }
      ],
      "speed": 13.38,
      "deg": 197,
      "gust": 27.72,
      "clouds": 100,
      "pop": 1,
      "rain": 11.28
    },
    {
      "dt": 1647518400,
      "sunrise": 1647497960,
      "sunset": 1647540883,
      "temp": {
        "day": 45.19,
        "min": 36.46,
        "max": 47.86,
        "night": 39.24,
        "eve": 45.05,
        "morn": 36.46
      },
      "feels_like": {
        "day": 37.04,
        "night": 34.2,
        "eve": 37.89,
        "morn": 28.62
      },
      "pressure": 1020,
      "humidity": 77,
      "weather": [
        {
          "id": 803,
          "main": "Clouds",
          "description": "broken clouds",
          "icon": "04d"
        }
      ],
      "speed": 24.9,
      "deg": 234,
      "gust": 41.16,
      "clouds": 52,
      "pop": 0
    }
  ]
}
Multilingual support
You can use
lang
parameter to get the output in your language.
Translation is applied for the
city name
and
description
fields.
API call
https://api.openweathermap.org/data/2.5/forecast/daily?id=524901⟨={lang}
Parameters
lang
optional
Language code
Example of API call
https://api.openweathermap.org/data/2.5/forecast/daily?id=524901⟨=zh_cn&appid=
{API key}
{
   "cod":"200",
   "message":0,
   "city":{
      "geoname_id":524901,
      "name":"Moscow",
      "lat":55.7522,
      "lon":37.6156,
      "country":"RU",
      "iso2":"RU",
      "type":"city",
      "population":0
   },
   "cnt":7,
   "list":[
      {
         "dt":1485766800,
         "temp":{
            "day":262.65,
            "min":261.41,
            "max":262.65,
            "night":261.41,
            "eve":262.65,
            "morn":262.65
         },
         "pressure":1024.53,
         "humidity":76,
         "weather":[
            {
               "id":800,
               "main":"Clear",
               "description":"sky is clear",
               "icon":"01d"
            }
         ],
         "speed":4.57,
         "deg":225,
         "gust": 7.74,
         "clouds":0,
         "snow":0.01
      },
      {
         "dt":1485853200,
         "temp":{
            "day":262.31,
            "min":260.98,
            "max":265.44,
            "night":265.44,
            "eve":264.18,
            "morn":261.46
         },
         "pressure":1018.1,
         "humidity":91,
         "weather":[
            {
               "id":600,
               "main":"Snow",
               "description":"light snow",
               "icon":"13d"
            }
         ],
         "speed":4.1,
         "deg":249,
         "gust": 7.74,
         "clouds":88,
         "snow":1.44
      },
      {
         "dt":1485939600,
         "temp":{
            "day":270.27,
            "min":266.9,
            "max":270.59,
            "night":268.06,
            "eve":269.66,
            "morn":266.9
         },
         "pressure":1010.85,
         "humidity":92,
         "weather":[
            {
               "id":600,
               "main":"Snow",
               "description":"light snow",
               "icon":"13d"
            }
         ],
         "speed":4.53,
         "deg":298,
         "gust": 7.74,
         "clouds":64,
         "snow":0.92
      },
      {
         "dt":1486026000,
         "temp":{
            "day":263.46,
            "min":255.19,
            "max":264.02,
            "night":255.59,
            "eve":259.68,
            "morn":263.38
         },
         "pressure":1019.32,
         "humidity":84,
         "weather":[
            {
               "id":800,
               "main":"Clear",
               "description":"sky is clear",
               "icon":"01d"
            }
         ],
         "speed":3.06,
         "deg":344,
         "gust": 7.74,
         "clouds":0
      },
      {
         "dt":1486112400,
         "temp":{
            "day":265.69,
            "min":256.55,
            "max":266,
            "night":256.55,
            "eve":260.09,
            "morn":266
         },
         "pressure":1012.2,
         "humidity":0,
         "weather":[
            {
               "id":600,
               "main":"Snow",
               "description":"light snow",
               "icon":"13d"
            }
         ],
         "speed":7.35,
         "deg":24,
         "gust": 7.74,
         "clouds":45,
         "snow":0.21
      },
      {
         "dt":1486198800,
         "temp":{
            "day":259.95,
            "min":254.73,
            "max":259.95,
            "night":257.13,
            "eve":254.73,
            "morn":257.02
         },
         "pressure":1029.5,
         "humidity":0,
         "weather":[
            {
               "id":800,
               "main":"Clear",
               "description":"sky is clear",
               "icon":"01d"
            }
         ],
         "speed":2.6,
         "deg":331,
         "gust": 7.74,
         "clouds":29
      },
      {
         "dt":1486285200,
         "temp":{
            "day":263.13,
            "min":259.11,
            "max":263.13,
            "night":262.01,
            "eve":261.32,
            "morn":259.11
         },
         "pressure":1023.21,
         "humidity":0,
         "weather":[
            {
               "id":600,
               "main":"Snow",
               "description":"light snow",
               "icon":"13d"
            }
         ],
         "speed":5.33,
         "deg":234,
         "gust": 7.74,
         "clouds":46,
         "snow":0.04
      }
   ]
}
We support the following languages that you can use with the corresponded lang values:
sq
Albanian
af
Afrikaans
ar
Arabic
az
Azerbaijani
eu
Basque
be
Belarusian
bg
Bulgarian
ca
Catalan
zh_cn
Chinese Simplified
zh_tw
Chinese Traditional
hr
Croatian
cz
Czech
da
Danish
nl
Dutch
en
English
fi
Finnish
fr
French
gl
Galician
de
German
el
Greek
he
Hebrew
hi
Hindi
hu
Hungarian
is
Icelandic
id
Indonesian
it
Italian
ja
Japanese
kr
Korean
ku
Kurmanji (Kurdish)
la
Latvian
lt
Lithuanian
mk
Macedonian
no
Norwegian
fa
Persian (Farsi)
pl
Polish
pt
Portuguese
pt_br
Português Brasil
ro
Romanian
ru
Russian
sr
Serbian
sk
Slovak
sl
Slovenian
sp, es
Spanish
sv, se
Swedish
th
Thai
tr
Turkish
ua, uk
Ukrainian
vi
Vietnamese
zu
Zulu
Call back function for JavaScript code
To use JavaScript code you can transfer
callback
functionName to JSONP callback.
Example of API call
api.openweathermap.org/data/2.5/weather?q=London,uk&callback=test&appid=
{API key}
test(
{
 "coord":{
    "lon":-0.13,
    "lat":51.51
 },
 "weather":[
    {
       "id":300,
       "main":"Drizzle",
       "description":"light intensity drizzle",
       "icon":"09d"
    }
 ],
 "base":"stations",
 "main":{
    "temp":280.32,
    "pressure":1012,
    "humidity":81,
    "temp_min":279.15,
    "temp_max":281.15
 },
 "visibility":10000,
 "wind":{
    "speed":4.1,
    "deg":80,
    "gust":6.1
 },
 "clouds":{
    "all":90
 },
 "dt":1485789600,
 "sys":{
    "type":1,
    "id":5091,
    "message":0.0103,
    "country":"GB",
    "sunrise":1485762037,
    "sunset":1485794875
 },
 "id":2643743,
 "name":"London",
 "cod":200
}
)


Content from https://openweathermap.org/history:

History API
Home
API
History API
Product concept
We provide hourly historical weather data for any location on the globe via History API.
          Availability of hourly historical data depends on a type of your
subscription
.
You can also download this data in JSON or CSV format - please read
History Bulk
and
History Forecast
            Bulk
.
Call hourly historical data
How to make an API call
API call
https://history.openweathermap.org/data/2.5/history/city?lat={lat}&lon={lon}&type=hour&start={start}&end={end}&appid=
{API key}
https://history.openweathermap.org/data/2.5/history/city?lat={lat}&lon={lon}&type=hour&start={start}&cnt={cnt}&appid=
{API key}
Parameters
lat
required
Latitude. If you need the geocoder to automatic convert city names and zip-codes to geo coordinates
                and the other way around, please use our
Geocoding API
lon
required
Longitude. If you need the geocoder to automatic convert city names and zip-codes to geo coordinates
                and the other way around, please use our
Geocoding API
type
required
Type of the call, keep this parameter in the API call as
hour
appid
required
Your unique API key (you can always find it on your account page under the
"API key" tab
)
start
optional
Start date (unix time, UTC time zone), e.g. start=1369728000
end
optional
End date (unix time, UTC time zone), e.g. end=1369789200
cnt
optional
A number of timestamps in response (one per hour, can be used instead of the parameter
end
)
Please use
Geocoder API
if you need automatic convert city
              names and zip-codes to geo coordinates and the other way around.
Please note that
built-in geocoder
has been deprecated. Although it is
              still available for use, bug fixing and updates are no longer available for this functionality.
Example of API call
https://history.openweathermap.org/data/2.5/history/city?lat=41.85&lon=-87.65&appid=
{API key}
{
   "message":"",
   "cod":"200",
   "city_id":4887398,
   "calctime":0.0863,
   "cnt":4,
   "list":[
   {
      "main":{
         "temp":268.987,
         "temp_min":268.987,
         "temp_max":268.987,
         "pressure":1001.11,
         "sea_level":1024.68,
         "grnd_level":1001.11,
         "humidity":100
      },
      "wind":{
         "speed":5.06,
         "deg":291.002
      },
      "clouds":{
         "all":48
      },
      "weather":[
         {
            "id":802,
            "main":"Clouds",
            "description":"scattered clouds",
            "icon":"03d"
         }
      ],
      "dt":1485703465
   },
   {
      "main":{
         "temp":268.097,
         "temp_min":268.097,
         "temp_max":268.097,
         "pressure":1003.57,
         "sea_level":1027.08,
         "grnd_level":1003.57,
         "humidity":100
      },
      "wind":{
         "speed":8.56,
         "deg":314.007
      },
      "clouds":{
         "all":44
      },
      "weather":[
         {
            "id":802,
            "main":"Clouds",
            "description":"scattered clouds",
            "icon":"03d"
         }
      ],
      "dt":1485730032
   },
   {
      "main":{
         "temp":266.787,
         "temp_min":266.787,
         "temp_max":266.787,
         "pressure":1005.73,
         "sea_level":1029.63,
         "grnd_level":1005.73,
         "humidity":100
      },
      "wind":{
         "speed":6.79,
         "deg":316.012
      },
      "clouds":{
         "all":0
      },
      "weather":[
         {
            "id":800,
            "main":"Clear",
            "description":"Sky is Clear",
            "icon":"01n"
         }
      ],
      "dt":1485755383
   },
   {
      "main":{
         "temp":263.64,
         "pressure":1015,
         "humidity":57,
         "temp_min":262.15,
         "temp_max":265.15
      },
      "wind":{
         "speed":2.6,
         "deg":280
      },
      "clouds":{
         "all":1
      },
      "weather":[
         {
            "id":800,
            "main":"Clear",
            "description":"sky is clear",
            "icon":"01n"
         }
      ],
      "dt":1485780512
   }
   ]
}
If you do not see some of the parameters in your API response it means that these weather phenomena are just not
        happened for the time of measurement for the city or location chosen. Only really measured or calculated data is
        displayed
        in API response.
List of all API parameters with units
openweathermap.org/weather-data
.
JSON
Example of API response
{
   "message": "Count: 24",
   "cod": "200",
   "city_id": 4298960,
   "calctime": 0.00297316,
   "cnt": 24,
   "list": [
   {
   "dt": 1578384000,
   "main": {
     "temp": 275.45,
     "feels_like": 271.7,
     "pressure": 1014,
     "humidity": 74,
     "temp_min": 274.26,
     "temp_max": 276.48
   },
   "wind": {
     "speed": 2.16,
     "deg": 87
   },
   "clouds": {
     "all": 90
   },
   "weather": [
     {
       "id": 501,
       "main": "Rain",
       "description": "moderate rain",
       "icon": "10n"
     }
   ],
   "rain": {
     "1h": 0.9
   }
},
....
Fields in API Response
message
Internal parameter
cod
Internal parameter
city_id
City ID. Please note that built-in geocoder functionality
                has been deprecated. Learn more
here
calctime
Internal parameter
list
dt
Time of data calculation, unix, UTC
main
main.temp
Temperature. Unit Default: Kelvin, Metric: Celsius, Imperial: Fahrenheit.
Learn more
main.feels_like
This temperature parameter accounts for the human perception of
                      weather. Unit Default: Kelvin, Metric: Celsius, Imperial: Fahrenheit.
Learn
                        more
main.pressure
Atmospheric pressure on the sea level, hPa
main.humidity
Humidity, %
main.temp_min
Minimum temperature within a large city or a megalopolis (optional
                      parameter). Please find more
here
. Unit Default: Kelvin, Metric: Celsius,
                      Imperial: Fahrenheit.
Learn more
main.temp_max
Maximum temperature within a large city or a megalopolis (optional
                      parameter). Please find more
here
. Unit Default: Kelvin, Metric: Celsius,
                      Imperial: Fahrenheit.
Learn more
main.sea_level
Atmospheric pressure on the sea level, hPa
main.grnd_level
Atmospheric pressure on the ground level, hPa
wind
wind.speed
Wind speed. Unit Default: meter/sec, Metric: meter/sec, Imperial:
                      miles/hour.
Learn more
wind.deg
Wind direction, degrees (meteorological)
clouds
clouds.all
Cloudiness, %
rain
rain.1h
Rain volume for the last 1 hour, mm. Please note that only mm as units of
                      measurement are available for this parameter
rain.3h
Rain volume for the last 3 hours, mm. Please note that only mm as units of
                      measurement are available for this parameter
snow
snow.1h
Snow volume for the last 1 hour, mm. Please note that only mm as units of
                      measurement are available for this parameter
snow.3h
Snow volume for the last 3 hours, mm. Please note that only mm as units of
                      measurement are available for this parameter
weather
(more info
Weather condition
                    codes
)
weather.id
Weather condition id
weather.main
Group of weather parameters (Rain, Snow, Clouds etc.)
weather.description
Weather condition within the group. Please find more
here
weather.icon
Weather icon id
We provide a broad variety of products such as
One
                Call API 3.0,
Solar Irradiance & Energy
                Prediction service,
Road Risk
                API,
Air Pollution API
and solutions for advanced weather parameters like solar irradiance data, UVI, dew point, government weather
            alerts, etc. Please review our
product list
page and
            find more info in the product documentation and
pricing
pages.
List of weather condition codes
List of
weather condition codes
with icons (range of
          thunderstorm, drizzle, rain, snow, clouds, atmosphere etc.)
Min/max temperature in historical weather API and forecast API
Please, do not confuse min/max parameters in hourly historical weather API and forecast API. In hourly
          historical weather API
temp_min
and
temp_max
are optional parameters mean min / max temperature
          in the city at
          the moment of calculation to show deviation from the average temperature just for your reference. For large
          cities and megalopolises geographically expanded it might be applicable. In most cases both
temp_min
and
temp_max
parameters have the same volume as 'temp'. Please, use
temp_min
and
temp_max
parameters optionally.
Example of historical weather for cities API response
"main":{
   "temp":306.15, // temperature at the moment of calculation
   "pressure":1013,
   "humidity":44,
   "temp_min":306.15, //min  temperature in the city at the moment of calculation
   "temp_max":306.15 //max  temperature in the city at the moment of calculation
},
For comparison look at example of daily forecast weather API response
Example of daily forecast weather API response
"dt":1406080800,
"temp":{
  "day":297.77,  //daily averaged temperature
  "min":293.52, //daily min temperature
  "max":297.77, //daily max temperature
  "night":293.52, //night temperature
  "eve":297.77, //evening temperature
  "morn":297.77, //morning temperature
}
History Bulk
We have recently announced the History Bulk functionality that allows to extract historical data for any
          location for
46+ years
in the past.
For accessing this feature please click the next
link
. The detailed documentation can be found
here.
Other features
Geocoding API
Requesting API calls by geographical coordinates is the most accurate way to specify any location. If you
            need to convert city names and zip-codes to geo coordinates and the other way around automatically, please
            use our
Geocoding API
.
Built-in geocoding
Please use
Geocoder API
if you need automatic convert city names
              and zip-codes to geo coordinates and the other way around.
Please note that
API requests by city name
and
city id
have
                been deprecated. Although they are still available for use, bug fixing and updates are no longer
                available for this functionality.
Built-in API request by city name
Call historical data by city name.
API call
https://history.openweathermap.org/data/2.5/history/city?q={city name},{country code}&type=hour&start={start}&end={end}&appid=
{API key}
https://history.openweathermap.org/data/2.5/history/city?q={city name},{country code}&type=hour&start={start}&cnt={cnt}&appid=
{API key}
Parameters
q
required
City name, state code and country code divided by comma, please refer to
ISO 3166
for
                    the
                    state codes or country codes.
You can specify the parameter not only in English. In this case, the API
                    response
                    should
                    be returned in the same language as the language of requested location name if
                    the
                    location is in our predefined list of more than 200,000 locations.
type
required
type of the call, keep this parameter in the API call as
hour
appid
required
Your unique API key (you can always find it on your account page under the
"API key" tab
)
start
optional
Start date (unix time, UTC time zone), e.g. start=1369728000
end
optional
End date (unix time, UTC time zone), e.g. end=1369789200
cnt
optional
A number of timestamps in response (one per hour, can be used instead of
end
)
Example of API call
https://history.openweathermap.org/data/2.5/history/city?q=London,UK&appid=
{API key}
{
   "message":"",
   "cod":"200",
   "city_id":2643743,
   "calctime":0.0875,
   "cnt":3,
   "list":[
   {
      "main":{
         "temp":279.946,
         "temp_min":279.946,
         "temp_max":279.946,
         "pressure":1016.76,
         "sea_level":1024.45,
         "grnd_level":1016.76,
         "humidity":100
      },
      "wind":{
         "speed":4.59,
         "deg":163.001
      },
      "clouds":{
         "all":92
      },
      "weather":[
         {
            "id":500,
            "main":"Rain",
            "description":"light rain",
            "icon":"10n"
         }
      ],
      "rain":{
         "3h":2.69
      },
      "dt":1485717216
   },
   {
      "main":{
         "temp":282.597,
         "temp_min":282.597,
         "temp_max":282.597,
         "pressure":1012.12,
         "sea_level":1019.71,
         "grnd_level":1012.12,
         "humidity":98
      },
      "wind":{
         "speed":4.04,
         "deg":226
      },
      "clouds":{
         "all":92
      },
      "weather":[
         {
            "id":500,
            "main":"Rain",
            "description":"light rain",
            "icon":"10n"
         }
      ],
      "rain":{
         "3h":0.405
      },
      "dt":1485745061
   },
   {
      "main":{
         "temp":279.38,
         "pressure":1011,
         "humidity":93,
         "temp_min":278.15,
         "temp_max":280.15
      },
      "wind":{
         "speed":2.6,
         "deg":30
      },
      "clouds":{
         "all":90
      },
      "weather":[
         {
            "id":701,
            "main":"Mist",
            "description":"mist",
            "icon":"50d"
         },
         {
            "id":741,
            "main":"Fog",
            "description":"fog",
            "icon":"50d"
         }
      ],
      "dt":1485768552
   }
   ]
}
There is a possibility to receive a central district of the city/town with its own parameters (geographic
              coordinates/id/name) in API response. Please see the example below.
https://history.openweathermap.org/data/2.5/history/city?q=Munchen,DE&appid=
{API key}
{
   "message":"",
   "cod":"200",
   "city_id":2643743,
   "calctime":0.0875,
   "cnt":3,
   "list":[
   {
      "main":{
         "temp":279.946,
         "temp_min":279.946,
         "temp_max":279.946,
         "pressure":1016.76,
         "sea_level":1024.45,
         "grnd_level":1016.76,
         "humidity":100
      },
      "wind":{
         "speed":4.59,
         "deg":163.001
      },
      "clouds":{
         "all":92
      },
      "weather":[
         {
            "id":500,
            "main":"Rain",
            "description":"light rain",
            "icon":"10n"
         }
      ],
      "rain":{
         "3h":2.69
      },
      "dt":1485717216
   },
   {
      "main":{
         "temp":282.597,
         "temp_min":282.597,
         "temp_max":282.597,
         "pressure":1012.12,
         "sea_level":1019.71,
         "grnd_level":1012.12,
         "humidity":98
      },
      "wind":{
         "speed":4.04,
         "deg":226
      },
      "clouds":{
         "all":92
      },
      "weather":[
         {
            "id":500,
            "main":"Rain",
            "description":"light rain",
            "icon":"10n"
         }
      ],
      "rain":{
         "3h":0.405
      },
      "dt":1485745061
   },
   {
      "main":{
         "temp":279.38,
         "pressure":1011,
         "humidity":93,
         "temp_min":278.15,
         "temp_max":280.15
      },
      "wind":{
         "speed":2.6,
         "deg":30
      },
      "clouds":{
         "all":90
      },
      "weather":[
         {
            "id":701,
            "main":"Mist",
            "description":"mist",
            "icon":"50d"
         },
         {
            "id":741,
            "main":"Fog",
            "description":"fog",
            "icon":"50d"
         }
      ],
      "dt":1485768552
   }
   ]
}
Built-in API request by city ID
Call historical data by city ID.
The list of city IDs can be downloaded
here
.
API calls
https://history.openweathermap.org/data/2.5/history/city?id={id}&type=hour&start={start}&end={end}&appid=
{API key}
https://history.openweathermap.org/data/2.5/history/city?id={id}&type=hour&start={start}&cnt={cnt}&appid=
{API key}
Parameters
id
required
City ID. The list of city IDs 'city.list.json.gz' can be downloaded
here
.
type
required
Type of the call, keep this parameter in the API call as
hour
appid
required
Your unique API key (you can always find it on your account page under the
"API key" tab
)
start
optional
Start date (unix time, UTC time zone), e.g. start=1369728000
end
optional
End date (unix time, UTC time zone), e.g. end=1369789200
cnt
optional
Amount of returned data (one per hour, can be used instead of
end
)
Example of API call
https://history.openweathermap.org/data/2.5/history/city?id=2885679&type=hour&appid=
{API key}
{
   "message":"",
   "cod":"200",
   "city_id":2885679,
   "calctime":0.0823,
   "cnt":3,
   "list":[
   {
      "main":{
         "temp":266.052,
         "temp_min":266.052,
         "temp_max":266.052,
         "pressure":957.86,
         "sea_level":1039.34,
         "grnd_level":957.86,
         "humidity":90
      },
      "wind":{
         "speed":1.16,
         "deg":139.502
      },
      "clouds":{
         "all":0
      },
      "weather":[
         {
            "id":800,
            "main":"Clear",
            "description":"Sky is Clear",
            "icon":"01n"
         }
      ],
      "dt":1485722804
   },
   {
      "main":{
         "temp":263.847,
         "temp_min":263.847,
         "temp_max":263.847,
         "pressure":955.78,
         "sea_level":1037.43,
         "grnd_level":955.78,
         "humidity":91
      },
      "wind":{
         "speed":1.49,
         "deg":159
      },
      "clouds":{
         "all":0
      },
      "weather":[
         {
            "id":800,
            "main":"Clear",
            "description":"Sky is Clear",
            "icon":"01n"
         }
      ],
      "dt":1485749608
   },
   {
      "main":{
         "temp":274.9,
         "pressure":1019,
         "temp_min":274.15,
         "temp_max":275.15,
         "humidity":88
      },
      "wind":{
         "speed":1,
         "deg":0
      },
      "clouds":{
         "all":76
      },
      "weather":[
         {
            "id":500,
            "main":"Rain",
            "description":"light rain",
            "icon":"10d"
         }
      ],
      "dt":1485773778
   }
   ]
}
Only for Professional and Expert plans: The maximum historical data depth in one API response is one
                week.
If you specify a historical data depth more than one week in the request, you will receive a historical
                data only for first week from start date in one API response.
If you want to get the historical data depth more than one week, then please use several queries.
Units of measurement
standard
,
metric
, and
imperial
units are available.
List of all API parameters with available units
.
Parameters
units
optional
standard
,
metric
,
imperial
. When you do not use the
units
parameter, format is
standard
by default.
Examples of API calls:
Standard (by default): temperature in Kelvin, wind speed in meter/sec
https://history.openweathermap.org/data/2.5/history/city?lat=41.85&lon=-87&type=hour&start=1643720400&end=1643806800&appid=
{API key}
{
  "message": "Count: 25",
  "cod": "200",
  "city_id": 1,
  "calctime": 0.005116476,
  "cnt": 25,
  "list": [
    {
      "dt": 1643720400,
      "main": {
        "temp": 274.07,
        "feels_like": 268.79,
        "pressure": 1014,
        "humidity": 71,
        "temp_min": 273,
        "temp_max": 275.49
      },
      "wind": {
        "speed": 6.17,
        "deg": 170,
        "gust": 10.29
      },
      "clouds": {
        "all": 1
      },
      "weather": [
        {
          "id": 800,
          "main": "Clear",
          "description": "clear sky",
          "icon": "01d"
        }
      ]
    },
    {
      "dt": 1643724000,
      "main": {
        "temp": 275.18,
        "feels_like": 270.2,
        "pressure": 1013,
        "humidity": 70,
        "temp_min": 273.96,
        "temp_max": 276.48
      },
      "wind": {
        "speed": 6.17,
        "deg": 180,
        "gust": 9.77
      },
      "clouds": {
        "all": 1
      },
      "weather": [
        {
          "id": 800,
          "main": "Clear",
          "description": "clear sky",
          "icon": "01d"
        }
      ]
    },
    {
      "dt": 1643727600,
      "main": {
        "temp": 277.38,
        "feels_like": 272.79,
        "pressure": 1013,
        "humidity": 65,
        "temp_min": 276.27,
        "temp_max": 278.19
      },
      "wind": {
        "speed": 6.69,
        "deg": 200,
        "gust": 10.29
      },
      "clouds": {
        "all": 40
      },
      "weather": [
        {
          "id": 802,
          "main": "Clouds",
          "description": "scattered clouds",
          "icon": "03d"
        }
      ]
    },
    {
      "dt": 1643731200,
      "main": {
        "temp": 278.59,
        "feels_like": 274.74,
        "pressure": 1014,
        "humidity": 62,
        "temp_min": 277.49,
        "temp_max": 280.14
      },
      "wind": {
        "speed": 5.66,
        "deg": 200,
        "gust": 9.26
      },
      "clouds": {
        "all": 40
      },
      "weather": [
        {
          "id": 802,
          "main": "Clouds",
          "description": "scattered clouds",
          "icon": "03d"
        }
      ]
    },
    {
      "dt": 1643734800,
      "main": {
        "temp": 279.18,
        "feels_like": 275.1,
        "pressure": 1014,
        "humidity": 61,
        "temp_min": 278.38,
        "temp_max": 280.49
      },
      "wind": {
        "speed": 6.69,
        "deg": 190,
        "gust": 9.77
      },
      "clouds": {
        "all": 40
      },
      "weather": [
        {
          "id": 802,
          "main": "Clouds",
          "description": "scattered clouds",
          "icon": "03d"
        }
      ]
    },
    {
      "dt": 1643738400,
      "main": {
        "temp": 279.58,
        "feels_like": 275.61,
        "pressure": 1013,
        "humidity": 65,
        "temp_min": 278.27,
        "temp_max": 281.44
      },
      "wind": {
        "speed": 6.69,
        "deg": 210,
        "gust": 9.77
      },
      "clouds": {
        "all": 90
      },
      "weather": [
        {
          "id": 804,
          "main": "Clouds",
          "description": "overcast clouds",
          "icon": "04d"
        }
      ]
    },
    {
      "dt": 1643742000,
      "main": {
        "temp": 280.2,
        "feels_like": 276.58,
        "pressure": 1013,
        "humidity": 61,
        "temp_min": 279.27,
        "temp_max": 281.51
      },
      "wind": {
        "speed": 6.17,
        "deg": 200,
        "gust": 8.75
      },
      "clouds": {
        "all": 90
      },
      "weather": [
        {
          "id": 804,
          "main": "Clouds",
          "description": "overcast clouds",
          "icon": "04d"
        }
      ]
    },
    {
      "dt": 1643745600,
      "main": {
        "temp": 280.21,
        "feels_like": 277,
        "pressure": 1013,
        "humidity": 61,
        "temp_min": 279.13,
        "temp_max": 281.51
      },
      "wind": {
        "speed": 5.14,
        "deg": 210,
        "gust": 8.75
      },
      "clouds": {
        "all": 90
      },
      "weather": [
        {
          "id": 804,
          "main": "Clouds",
          "description": "overcast clouds",
          "icon": "04d"
        }
      ]
    },
    {
      "dt": 1643749200,
      "main": {
        "temp": 279.6,
        "feels_like": 277.02,
        "pressure": 1013,
        "humidity": 70,
        "temp_min": 278.69,
        "temp_max": 280.73
      },
      "wind": {
        "speed": 3.6,
        "deg": 210
      },
      "clouds": {
        "all": 90
      },
      "weather": [
        {
          "id": 804,
          "main": "Clouds",
          "description": "overcast clouds",
          "icon": "04d"
        }
      ]
    },
    {
      "dt": 1643752800,
      "main": {
        "temp": 278.95,
        "feels_like": 276.94,
        "pressure": 1014,
        "humidity": 80,
        "temp_min": 277.82,
        "temp_max": 280.75
      },
      "wind": {
        "speed": 2.57,
        "deg": 210
      },
      "clouds": {
        "all": 90
      },
      "weather": [
        {
          "id": 501,
          "main": "Rain",
          "description": "moderate rain",
          "icon": "10d"
        }
      ],
      "rain": {
        "1h": 0.56
      }
    },
    {
      "dt": 1643756400,
      "main": {
        "temp": 278.15,
        "feels_like": 275.59,
        "pressure": 1015,
        "humidity": 91,
        "temp_min": 276.99,
        "temp_max": 279.64
      },
      "wind": {
        "speed": 3.09,
        "deg": 210
      },
      "clouds": {
        "all": 90
      },
      "weather": [
        {
          "id": 301,
          "main": "Drizzle",
          "description": "drizzle",
          "icon": "09d"
        },
        {
          "id": 500,
          "main": "Rain",
          "description": "light rain",
          "icon": "10d"
        }
      ],
      "rain": {
        "1h": 0.44
      }
    },
    {
      "dt": 1643760000,
      "main": {
        "temp": 277.64,
        "feels_like": 276.46,
        "pressure": 1016,
        "humidity": 94,
        "temp_min": 276.43,
        "temp_max": 279.6
      },
      "wind": {
        "speed": 1.54,
        "deg": 240
      },
      "clouds": {
        "all": 90
      },
      "weather": [
        {
          "id": 301,
          "main": "Drizzle",
          "description": "drizzle",
          "icon": "09n"
        },
        {
          "id": 500,
          "main": "Rain",
          "description": "light rain",
          "icon": "10n"
        }
      ],
      "rain": {
        "1h": 0.65
      }
    },
    {
      "dt": 1643763600,
      "main": {
        "temp": 277.18,
        "feels_like": 275.94,
        "pressure": 1017,
        "humidity": 97,
        "temp_min": 275.91,
        "temp_max": 279.09
      },
      "wind": {
        "speed": 1.54,
        "deg": 250
      },
      "clouds": {
        "all": 90
      },
      "weather": [
        {
          "id": 501,
          "main": "Rain",
          "description": "moderate rain",
          "icon": "10n"
        }
      ],
      "rain": {
        "1h": 2.51
      }
    },
    {
      "dt": 1643767200,
      "main": {
        "temp": 276.8,
        "feels_like": 273.97,
        "pressure": 1017,
        "humidity": 98,
        "temp_min": 275.35,
        "temp_max": 277.95
      },
      "wind": {
        "speed": 3.09,
        "deg": 250
      },
      "clouds": {
        "all": 90
      },
      "weather": [
        {
          "id": 301,
          "main": "Drizzle",
          "description": "drizzle",
          "icon": "09n"
        },
        {
          "id": 500,
          "main": "Rain",
          "description": "light rain",
          "icon": "10n"
        }
      ],
      "rain": {
        "1h": 0.98
      }
    },
    {
      "dt": 1643770800,
      "main": {
        "temp": 276.08,
        "feels_like": 274.68,
        "pressure": 1018,
        "humidity": 99,
        "temp_min": 274.8,
        "temp_max": 277.97
      },
      "wind": {
        "speed": 1.54,
        "deg": 280
      },
      "clouds": {
        "all": 90
      },
      "weather": [
        {
          "id": 501,
          "main": "Rain",
          "description": "moderate rain",
          "icon": "10n"
        }
      ],
      "rain": {
        "1h": 1.15
      }
    },
    {
      "dt": 1643774400,
      "main": {
        "temp": 275.8,
        "feels_like": 275.8,
        "pressure": 1018,
        "humidity": 95,
        "temp_min": 274.24,
        "temp_max": 276.84
      },
      "wind": {
        "speed": 0,
        "deg": 0
      },
      "clouds": {
        "all": 90
      },
      "weather": [
        {
          "id": 500,
          "main": "Rain",
          "description": "light rain",
          "icon": "10n"
        }
      ],
      "rain": {
        "1h": 0.56
      }
    },
    {
      "dt": 1643778000,
      "main": {
        "temp": 275.22,
        "feels_like": 275.22,
        "pressure": 1018,
        "humidity": 95,
        "temp_min": 273.69,
        "temp_max": 276.73
      },
      "wind": {
        "speed": 0,
        "deg": 0
      },
      "clouds": {
        "all": 90
      },
      "weather": [
        {
          "id": 500,
          "main": "Rain",
          "description": "light rain",
          "icon": "10n"
        }
      ],
      "rain": {
        "1h": 0.73
      }
    },
    {
      "dt": 1643781600,
      "main": {
        "temp": 274.15,
        "feels_like": 270.77,
        "pressure": 1018,
        "humidity": 97,
        "temp_min": 272.54,
        "temp_max": 275.75
      },
      "wind": {
        "speed": 3.09,
        "deg": 340
      },
      "clouds": {
        "all": 90
      },
      "weather": [
        {
          "id": 601,
          "main": "Snow",
          "description": "snow",
          "icon": "13n"
        }
      ],
      "snow": {
        "1h": 0.95
      }
    },
    {
      "dt": 1643785200,
      "main": {
        "temp": 273.45,
        "feels_like": 269.93,
        "pressure": 1019,
        "humidity": 98,
        "temp_min": 272.48,
        "temp_max": 275.49
      },
      "wind": {
        "speed": 3.09,
        "deg": 350
      },
      "clouds": {
        "all": 90
      },
      "weather": [
        {
          "id": 601,
          "main": "Snow",
          "description": "snow",
          "icon": "13n"
        }
      ],
      "snow": {
        "1h": 1.15
      }
    },
    {
      "dt": 1643788800,
      "main": {
        "temp": 273.28,
        "feels_like": 270.21,
        "pressure": 1020,
        "humidity": 98,
        "temp_min": 271.92,
        "temp_max": 274.46
      },
      "wind": {
        "speed": 2.57,
        "deg": 350
      },
      "clouds": {
        "all": 90
      },
      "weather": [
        {
          "id": 601,
          "main": "Snow",
          "description": "snow",
          "icon": "13n"
        }
      ],
      "snow": {
        "1h": 2.42
      }
    },
    {
      "dt": 1643792400,
      "main": {
        "temp": 272.92,
        "feels_like": 267.87,
        "pressure": 1020,
        "humidity": 96,
        "temp_min": 270.91,
        "temp_max": 274.46
      },
      "wind": {
        "speed": 5.14,
        "deg": 360,
        "gust": 7.72
      },
      "clouds": {
        "all": 100
      },
      "weather": [
        {
          "id": 601,
          "main": "Snow",
          "description": "snow",
          "icon": "13n"
        }
      ],
      "snow": {
        "1h": 1.15
      }
    },
    {
      "dt": 1643796000,
      "main": {
        "temp": 272.31,
        "feels_like": 267.41,
        "pressure": 1020,
        "humidity": 98,
        "temp_min": 270.81,
        "temp_max": 273.91
      },
      "wind": {
        "speed": 4.63,
        "deg": 10
      },
      "clouds": {
        "all": 90
      },
      "weather": [
        {
          "id": 601,
          "main": "Snow",
          "description": "snow",
          "icon": "13n"
        }
      ],
      "snow": {
        "1h": 1.41
      }
    },
    {
      "dt": 1643799600,
      "main": {
        "temp": 272.07,
        "feels_like": 267.45,
        "pressure": 1020,
        "humidity": 98,
        "temp_min": 270.13,
        "temp_max": 273.91
      },
      "wind": {
        "speed": 4.12,
        "deg": 20
      },
      "clouds": {
        "all": 90
      },
      "weather": [
        {
          "id": 601,
          "main": "Snow",
          "description": "snow",
          "icon": "13n"
        }
      ],
      "snow": {
        "1h": 0.92
      }
    },
    {
      "dt": 1643803200,
      "main": {
        "temp": 271.57,
        "feels_like": 266.17,
        "pressure": 1021,
        "humidity": 96,
        "temp_min": 269.7,
        "temp_max": 273.35
      },
      "wind": {
        "speed": 5.14,
        "deg": 360,
        "gust": 7.2
      },
      "clouds": {
        "all": 90
      },
      "weather": [
        {
          "id": 601,
          "main": "Snow",
          "description": "snow",
          "icon": "13n"
        }
      ],
      "snow": {
        "1h": 1.19
      }
    },
    {
      "dt": 1643806800,
      "main": {
        "temp": 271.36,
        "feels_like": 266.23,
        "pressure": 1021,
        "humidity": 96,
        "temp_min": 269.79,
        "temp_max": 272.49
      },
      "wind": {
        "speed": 4.63,
        "deg": 360
      },
      "clouds": {
        "all": 90
      },
      "weather": [
        {
          "id": 601,
          "main": "Snow",
          "description": "snow",
          "icon": "13d"
        }
      ],
      "snow": {
        "1h": 0.92
      }
    }
  ]
}
Metric: temperature in Celsius, wind speed in meter/sec
https://history.openweathermap.org/data/2.5/history/city?lat=41.85&lon=-87&type=hour&start=1643720400&end=1643806800&units=metric&appid=
{API key}
{
  "message": "Count: 25",
  "cod": "200",
  "city_id": 1,
  "calctime": 0.004968346,
  "cnt": 25,
  "list": [
    {
      "dt": 1643720400,
      "main": {
        "temp": 0.92,
        "feels_like": -4.36,
        "pressure": 1014,
        "humidity": 71,
        "temp_min": -0.15,
        "temp_max": 2.34
      },
      "wind": {
        "speed": 6.17,
        "deg": 170,
        "gust": 10.29
      },
      "clouds": {
        "all": 1
      },
      "weather": [
        {
          "id": 800,
          "main": "Clear",
          "description": "clear sky",
          "icon": "01d"
        }
      ]
    },
    {
      "dt": 1643724000,
      "main": {
        "temp": 2.03,
        "feels_like": -2.95,
        "pressure": 1013,
        "humidity": 70,
        "temp_min": 0.81,
        "temp_max": 3.33
      },
      "wind": {
        "speed": 6.17,
        "deg": 180,
        "gust": 9.77
      },
      "clouds": {
        "all": 1
      },
      "weather": [
        {
          "id": 800,
          "main": "Clear",
          "description": "clear sky",
          "icon": "01d"
        }
      ]
    },
    {
      "dt": 1643727600,
      "main": {
        "temp": 4.23,
        "feels_like": -0.36,
        "pressure": 1013,
        "humidity": 65,
        "temp_min": 3.12,
        "temp_max": 5.04
      },
      "wind": {
        "speed": 6.69,
        "deg": 200,
        "gust": 10.29
      },
      "clouds": {
        "all": 40
      },
      "weather": [
        {
          "id": 802,
          "main": "Clouds",
          "description": "scattered clouds",
          "icon": "03d"
        }
      ]
    },
    {
      "dt": 1643731200,
      "main": {
        "temp": 5.44,
        "feels_like": 1.59,
        "pressure": 1014,
        "humidity": 62,
        "temp_min": 4.34,
        "temp_max": 6.99
      },
      "wind": {
        "speed": 5.66,
        "deg": 200,
        "gust": 9.26
      },
      "clouds": {
        "all": 40
      },
      "weather": [
        {
          "id": 802,
          "main": "Clouds",
          "description": "scattered clouds",
          "icon": "03d"
        }
      ]
    },
    {
      "dt": 1643734800,
      "main": {
        "temp": 6.03,
        "feels_like": 1.95,
        "pressure": 1014,
        "humidity": 61,
        "temp_min": 5.23,
        "temp_max": 7.34
      },
      "wind": {
        "speed": 6.69,
        "deg": 190,
        "gust": 9.77
      },
      "clouds": {
        "all": 40
      },
      "weather": [
        {
          "id": 802,
          "main": "Clouds",
          "description": "scattered clouds",
          "icon": "03d"
        }
      ]
    },
    {
      "dt": 1643738400,
      "main": {
        "temp": 6.43,
        "feels_like": 2.46,
        "pressure": 1013,
        "humidity": 65,
        "temp_min": 5.12,
        "temp_max": 8.29
      },
      "wind": {
        "speed": 6.69,
        "deg": 210,
        "gust": 9.77
      },
      "clouds": {
        "all": 90
      },
      "weather": [
        {
          "id": 804,
          "main": "Clouds",
          "description": "overcast clouds",
          "icon": "04d"
        }
      ]
    },
    {
      "dt": 1643742000,
      "main": {
        "temp": 7.05,
        "feels_like": 3.43,
        "pressure": 1013,
        "humidity": 61,
        "temp_min": 6.12,
        "temp_max": 8.36
      },
      "wind": {
        "speed": 6.17,
        "deg": 200,
        "gust": 8.75
      },
      "clouds": {
        "all": 90
      },
      "weather": [
        {
          "id": 804,
          "main": "Clouds",
          "description": "overcast clouds",
          "icon": "04d"
        }
      ]
    },
    {
      "dt": 1643745600,
      "main": {
        "temp": 7.06,
        "feels_like": 3.85,
        "pressure": 1013,
        "humidity": 61,
        "temp_min": 5.98,
        "temp_max": 8.36
      },
      "wind": {
        "speed": 5.14,
        "deg": 210,
        "gust": 8.75
      },
      "clouds": {
        "all": 90
      },
      "weather": [
        {
          "id": 804,
          "main": "Clouds",
          "description": "overcast clouds",
          "icon": "04d"
        }
      ]
    },
    {
      "dt": 1643749200,
      "main": {
        "temp": 6.45,
        "feels_like": 3.87,
        "pressure": 1013,
        "humidity": 70,
        "temp_min": 5.54,
        "temp_max": 7.58
      },
      "wind": {
        "speed": 3.6,
        "deg": 210
      },
      "clouds": {
        "all": 90
      },
      "weather": [
        {
          "id": 804,
          "main": "Clouds",
          "description": "overcast clouds",
          "icon": "04d"
        }
      ]
    },
    {
      "dt": 1643752800,
      "main": {
        "temp": 5.8,
        "feels_like": 3.79,
        "pressure": 1014,
        "humidity": 80,
        "temp_min": 4.67,
        "temp_max": 7.6
      },
      "wind": {
        "speed": 2.57,
        "deg": 210
      },
      "clouds": {
        "all": 90
      },
      "weather": [
        {
          "id": 501,
          "main": "Rain",
          "description": "moderate rain",
          "icon": "10d"
        }
      ],
      "rain": {
        "1h": 0.56
      }
    },
    {
      "dt": 1643756400,
      "main": {
        "temp": 5,
        "feels_like": 2.44,
        "pressure": 1015,
        "humidity": 91,
        "temp_min": 3.84,
        "temp_max": 6.49
      },
      "wind": {
        "speed": 3.09,
        "deg": 210
      },
      "clouds": {
        "all": 90
      },
      "weather": [
        {
          "id": 301,
          "main": "Drizzle",
          "description": "drizzle",
          "icon": "09d"
        },
        {
          "id": 500,
          "main": "Rain",
          "description": "light rain",
          "icon": "10d"
        }
      ],
      "rain": {
        "1h": 0.44
      }
    },
    {
      "dt": 1643760000,
      "main": {
        "temp": 4.49,
        "feels_like": 3.31,
        "pressure": 1016,
        "humidity": 94,
        "temp_min": 3.28,
        "temp_max": 6.45
      },
      "wind": {
        "speed": 1.54,
        "deg": 240
      },
      "clouds": {
        "all": 90
      },
      "weather": [
        {
          "id": 301,
          "main": "Drizzle",
          "description": "drizzle",
          "icon": "09n"
        },
        {
          "id": 500,
          "main": "Rain",
          "description": "light rain",
          "icon": "10n"
        }
      ],
      "rain": {
        "1h": 0.65
      }
    },
    {
      "dt": 1643763600,
      "main": {
        "temp": 4.03,
        "feels_like": 2.79,
        "pressure": 1017,
        "humidity": 97,
        "temp_min": 2.76,
        "temp_max": 5.94
      },
      "wind": {
        "speed": 1.54,
        "deg": 250
      },
      "clouds": {
        "all": 90
      },
      "weather": [
        {
          "id": 501,
          "main": "Rain",
          "description": "moderate rain",
          "icon": "10n"
        }
      ],
      "rain": {
        "1h": 2.51
      }
    },
    {
      "dt": 1643767200,
      "main": {
        "temp": 3.65,
        "feels_like": 0.82,
        "pressure": 1017,
        "humidity": 98,
        "temp_min": 2.2,
        "temp_max": 4.8
      },
      "wind": {
        "speed": 3.09,
        "deg": 250
      },
      "clouds": {
        "all": 90
      },
      "weather": [
        {
          "id": 301,
          "main": "Drizzle",
          "description": "drizzle",
          "icon": "09n"
        },
        {
          "id": 500,
          "main": "Rain",
          "description": "light rain",
          "icon": "10n"
        }
      ],
      "rain": {
        "1h": 0.98
      }
    },
    {
      "dt": 1643770800,
      "main": {
        "temp": 2.93,
        "feels_like": 1.53,
        "pressure": 1018,
        "humidity": 99,
        "temp_min": 1.65,
        "temp_max": 4.82
      },
      "wind": {
        "speed": 1.54,
        "deg": 280
      },
      "clouds": {
        "all": 90
      },
      "weather": [
        {
          "id": 501,
          "main": "Rain",
          "description": "moderate rain",
          "icon": "10n"
        }
      ],
      "rain": {
        "1h": 1.15
      }
    },
    {
      "dt": 1643774400,
      "main": {
        "temp": 2.65,
        "feels_like": 2.65,
        "pressure": 1018,
        "humidity": 95,
        "temp_min": 1.09,
        "temp_max": 3.69
      },
      "wind": {
        "speed": 0,
        "deg": 0
      },
      "clouds": {
        "all": 90
      },
      "weather": [
        {
          "id": 500,
          "main": "Rain",
          "description": "light rain",
          "icon": "10n"
        }
      ],
      "rain": {
        "1h": 0.56
      }
    },
    {
      "dt": 1643778000,
      "main": {
        "temp": 2.07,
        "feels_like": 2.07,
        "pressure": 1018,
        "humidity": 95,
        "temp_min": 0.54,
        "temp_max": 3.58
      },
      "wind": {
        "speed": 0,
        "deg": 0
      },
      "clouds": {
        "all": 90
      },
      "weather": [
        {
          "id": 500,
          "main": "Rain",
          "description": "light rain",
          "icon": "10n"
        }
      ],
      "rain": {
        "1h": 0.73
      }
    },
    {
      "dt": 1643781600,
      "main": {
        "temp": 1,
        "feels_like": -2.38,
        "pressure": 1018,
        "humidity": 97,
        "temp_min": -0.61,
        "temp_max": 2.6
      },
      "wind": {
        "speed": 3.09,
        "deg": 340
      },
      "clouds": {
        "all": 90
      },
      "weather": [
        {
          "id": 601,
          "main": "Snow",
          "description": "snow",
          "icon": "13n"
        }
      ],
      "snow": {
        "1h": 0.95
      }
    },
    {
      "dt": 1643785200,
      "main": {
        "temp": 0.3,
        "feels_like": -3.22,
        "pressure": 1019,
        "humidity": 98,
        "temp_min": -0.67,
        "temp_max": 2.34
      },
      "wind": {
        "speed": 3.09,
        "deg": 350
      },
      "clouds": {
        "all": 90
      },
      "weather": [
        {
          "id": 601,
          "main": "Snow",
          "description": "snow",
          "icon": "13n"
        }
      ],
      "snow": {
        "1h": 1.15
      }
    },
    {
      "dt": 1643788800,
      "main": {
        "temp": 0.13,
        "feels_like": -2.94,
        "pressure": 1020,
        "humidity": 98,
        "temp_min": -1.23,
        "temp_max": 1.31
      },
      "wind": {
        "speed": 2.57,
        "deg": 350
      },
      "clouds": {
        "all": 90
      },
      "weather": [
        {
          "id": 601,
          "main": "Snow",
          "description": "snow",
          "icon": "13n"
        }
      ],
      "snow": {
        "1h": 2.42
      }
    },
    {
      "dt": 1643792400,
      "main": {
        "temp": -0.23,
        "feels_like": -5.28,
        "pressure": 1020,
        "humidity": 96,
        "temp_min": -2.24,
        "temp_max": 1.31
      },
      "wind": {
        "speed": 5.14,
        "deg": 360,
        "gust": 7.72
      },
      "clouds": {
        "all": 100
      },
      "weather": [
        {
          "id": 601,
          "main": "Snow",
          "description": "snow",
          "icon": "13n"
        }
      ],
      "snow": {
        "1h": 1.15
      }
    },
    {
      "dt": 1643796000,
      "main": {
        "temp": -0.84,
        "feels_like": -5.74,
        "pressure": 1020,
        "humidity": 98,
        "temp_min": -2.34,
        "temp_max": 0.76
      },
      "wind": {
        "speed": 4.63,
        "deg": 10
      },
      "clouds": {
        "all": 90
      },
      "weather": [
        {
          "id": 601,
          "main": "Snow",
          "description": "snow",
          "icon": "13n"
        }
      ],
      "snow": {
        "1h": 1.41
      }
    },
    {
      "dt": 1643799600,
      "main": {
        "temp": -1.08,
        "feels_like": -5.7,
        "pressure": 1020,
        "humidity": 98,
        "temp_min": -3.02,
        "temp_max": 0.76
      },
      "wind": {
        "speed": 4.12,
        "deg": 20
      },
      "clouds": {
        "all": 90
      },
      "weather": [
        {
          "id": 601,
          "main": "Snow",
          "description": "snow",
          "icon": "13n"
        }
      ],
      "snow": {
        "1h": 0.92
      }
    },
    {
      "dt": 1643803200,
      "main": {
        "temp": -1.58,
        "feels_like": -6.98,
        "pressure": 1021,
        "humidity": 96,
        "temp_min": -3.45,
        "temp_max": 0.2
      },
      "wind": {
        "speed": 5.14,
        "deg": 360,
        "gust": 7.2
      },
      "clouds": {
        "all": 90
      },
      "weather": [
        {
          "id": 601,
          "main": "Snow",
          "description": "snow",
          "icon": "13n"
        }
      ],
      "snow": {
        "1h": 1.19
      }
    },
    {
      "dt": 1643806800,
      "main": {
        "temp": -1.79,
        "feels_like": -6.92,
        "pressure": 1021,
        "humidity": 96,
        "temp_min": -3.36,
        "temp_max": -0.66
      },
      "wind": {
        "speed": 4.63,
        "deg": 360
      },
      "clouds": {
        "all": 90
      },
      "weather": [
        {
          "id": 601,
          "main": "Snow",
          "description": "snow",
          "icon": "13d"
        }
      ],
      "snow": {
        "1h": 0.92
      }
    }
  ]
}
Imperial: temperature in Fahrenheit, wind speed in miles/hour
https://history.openweathermap.org/data/2.5/history/city?lat=41.85&lon=-87&type=hour&start=1643720400&end=1643806800&units=imperial&appid=
{API key}
{
  "message": "Count: 25",
  "cod": "200",
  "city_id": 1,
  "calctime": 0.004813836,
  "cnt": 25,
  "list": [
    {
      "dt": 1643720400,
      "main": {
        "temp": 33.66,
        "feels_like": 24.15,
        "pressure": 1014,
        "humidity": 71,
        "temp_min": 31.73,
        "temp_max": 36.21
      },
      "wind": {
        "speed": 13.8,
        "deg": 170,
        "gust": 23.02
      },
      "clouds": {
        "all": 1
      },
      "weather": [
        {
          "id": 800,
          "main": "Clear",
          "description": "clear sky",
          "icon": "01d"
        }
      ]
    },
    {
      "dt": 1643724000,
      "main": {
        "temp": 35.65,
        "feels_like": 26.69,
        "pressure": 1013,
        "humidity": 70,
        "temp_min": 33.46,
        "temp_max": 37.99
      },
      "wind": {
        "speed": 13.8,
        "deg": 180,
        "gust": 21.85
      },
      "clouds": {
        "all": 1
      },
      "weather": [
        {
          "id": 800,
          "main": "Clear",
          "description": "clear sky",
          "icon": "01d"
        }
      ]
    },
    {
      "dt": 1643727600,
      "main": {
        "temp": 39.61,
        "feels_like": 31.35,
        "pressure": 1013,
        "humidity": 65,
        "temp_min": 37.62,
        "temp_max": 41.07
      },
      "wind": {
        "speed": 14.97,
        "deg": 200,
        "gust": 23.02
      },
      "clouds": {
        "all": 40
      },
      "weather": [
        {
          "id": 802,
          "main": "Clouds",
          "description": "scattered clouds",
          "icon": "03d"
        }
      ]
    },
    {
      "dt": 1643731200,
      "main": {
        "temp": 41.79,
        "feels_like": 34.86,
        "pressure": 1014,
        "humidity": 62,
        "temp_min": 39.81,
        "temp_max": 44.58
      },
      "wind": {
        "speed": 12.66,
        "deg": 200,
        "gust": 20.71
      },
      "clouds": {
        "all": 40
      },
      "weather": [
        {
          "id": 802,
          "main": "Clouds",
          "description": "scattered clouds",
          "icon": "03d"
        }
      ]
    },
    {
      "dt": 1643734800,
      "main": {
        "temp": 42.85,
        "feels_like": 35.51,
        "pressure": 1014,
        "humidity": 61,
        "temp_min": 41.41,
        "temp_max": 45.21
      },
      "wind": {
        "speed": 14.97,
        "deg": 190,
        "gust": 21.85
      },
      "clouds": {
        "all": 40
      },
      "weather": [
        {
          "id": 802,
          "main": "Clouds",
          "description": "scattered clouds",
          "icon": "03d"
        }
      ]
    },
    {
      "dt": 1643738400,
      "main": {
        "temp": 43.57,
        "feels_like": 36.43,
        "pressure": 1013,
        "humidity": 65,
        "temp_min": 41.22,
        "temp_max": 46.92
      },
      "wind": {
        "speed": 14.97,
        "deg": 210,
        "gust": 21.85
      },
      "clouds": {
        "all": 90
      },
      "weather": [
        {
          "id": 804,
          "main": "Clouds",
          "description": "overcast clouds",
          "icon": "04d"
        }
      ]
    },
    {
      "dt": 1643742000,
      "main": {
        "temp": 44.69,
        "feels_like": 38.17,
        "pressure": 1013,
        "humidity": 61,
        "temp_min": 43.02,
        "temp_max": 47.05
      },
      "wind": {
        "speed": 13.8,
        "deg": 200,
        "gust": 19.57
      },
      "clouds": {
        "all": 90
      },
      "weather": [
        {
          "id": 804,
          "main": "Clouds",
          "description": "overcast clouds",
          "icon": "04d"
        }
      ]
    },
    {
      "dt": 1643745600,
      "main": {
        "temp": 44.71,
        "feels_like": 38.93,
        "pressure": 1013,
        "humidity": 61,
        "temp_min": 42.76,
        "temp_max": 47.05
      },
      "wind": {
        "speed": 11.5,
        "deg": 210,
        "gust": 19.57
      },
      "clouds": {
        "all": 90
      },
      "weather": [
        {
          "id": 804,
          "main": "Clouds",
          "description": "overcast clouds",
          "icon": "04d"
        }
      ]
    },
    {
      "dt": 1643749200,
      "main": {
        "temp": 43.61,
        "feels_like": 38.97,
        "pressure": 1013,
        "humidity": 70,
        "temp_min": 41.97,
        "temp_max": 45.64
      },
      "wind": {
        "speed": 8.05,
        "deg": 210
      },
      "clouds": {
        "all": 90
      },
      "weather": [
        {
          "id": 804,
          "main": "Clouds",
          "description": "overcast clouds",
          "icon": "04d"
        }
      ]
    },
    {
      "dt": 1643752800,
      "main": {
        "temp": 42.44,
        "feels_like": 38.82,
        "pressure": 1014,
        "humidity": 80,
        "temp_min": 40.41,
        "temp_max": 45.68
      },
      "wind": {
        "speed": 5.75,
        "deg": 210
      },
      "clouds": {
        "all": 90
      },
      "weather": [
        {
          "id": 501,
          "main": "Rain",
          "description": "moderate rain",
          "icon": "10d"
        }
      ],
      "rain": {
        "1h": 0.56
      }
    },
    {
      "dt": 1643756400,
      "main": {
        "temp": 41,
        "feels_like": 36.39,
        "pressure": 1015,
        "humidity": 91,
        "temp_min": 38.91,
        "temp_max": 43.68
      },
      "wind": {
        "speed": 6.91,
        "deg": 210
      },
      "clouds": {
        "all": 90
      },
      "weather": [
        {
          "id": 301,
          "main": "Drizzle",
          "description": "drizzle",
          "icon": "09d"
        },
        {
          "id": 500,
          "main": "Rain",
          "description": "light rain",
          "icon": "10d"
        }
      ],
      "rain": {
        "1h": 0.44
      }
    },
    {
      "dt": 1643760000,
      "main": {
        "temp": 40.08,
        "feels_like": 37.96,
        "pressure": 1016,
        "humidity": 94,
        "temp_min": 37.9,
        "temp_max": 43.61
      },
      "wind": {
        "speed": 3.44,
        "deg": 240
      },
      "clouds": {
        "all": 90
      },
      "weather": [
        {
          "id": 301,
          "main": "Drizzle",
          "description": "drizzle",
          "icon": "09n"
        },
        {
          "id": 500,
          "main": "Rain",
          "description": "light rain",
          "icon": "10n"
        }
      ],
      "rain": {
        "1h": 0.65
      }
    },
    {
      "dt": 1643763600,
      "main": {
        "temp": 39.25,
        "feels_like": 37.02,
        "pressure": 1017,
        "humidity": 97,
        "temp_min": 36.97,
        "temp_max": 42.69
      },
      "wind": {
        "speed": 3.44,
        "deg": 250
      },
      "clouds": {
        "all": 90
      },
      "weather": [
        {
          "id": 501,
          "main": "Rain",
          "description": "moderate rain",
          "icon": "10n"
        }
      ],
      "rain": {
        "1h": 2.51
      }
    },
    {
      "dt": 1643767200,
      "main": {
        "temp": 38.57,
        "feels_like": 33.48,
        "pressure": 1017,
        "humidity": 98,
        "temp_min": 35.96,
        "temp_max": 40.64
      },
      "wind": {
        "speed": 6.91,
        "deg": 250
      },
      "clouds": {
        "all": 90
      },
      "weather": [
        {
          "id": 301,
          "main": "Drizzle",
          "description": "drizzle",
          "icon": "09n"
        },
        {
          "id": 500,
          "main": "Rain",
          "description": "light rain",
          "icon": "10n"
        }
      ],
      "rain": {
        "1h": 0.98
      }
    },
    {
      "dt": 1643770800,
      "main": {
        "temp": 37.27,
        "feels_like": 34.75,
        "pressure": 1018,
        "humidity": 99,
        "temp_min": 34.97,
        "temp_max": 40.68
      },
      "wind": {
        "speed": 3.44,
        "deg": 280
      },
      "clouds": {
        "all": 90
      },
      "weather": [
        {
          "id": 501,
          "main": "Rain",
          "description": "moderate rain",
          "icon": "10n"
        }
      ],
      "rain": {
        "1h": 1.15
      }
    },
    {
      "dt": 1643774400,
      "main": {
        "temp": 36.77,
        "feels_like": 36.77,
        "pressure": 1018,
        "humidity": 95,
        "temp_min": 33.96,
        "temp_max": 38.64
      },
      "wind": {
        "speed": 0,
        "deg": 0
      },
      "clouds": {
        "all": 90
      },
      "weather": [
        {
          "id": 500,
          "main": "Rain",
          "description": "light rain",
          "icon": "10n"
        }
      ],
      "rain": {
        "1h": 0.56
      }
    },
    {
      "dt": 1643778000,
      "main": {
        "temp": 35.73,
        "feels_like": 35.73,
        "pressure": 1018,
        "humidity": 95,
        "temp_min": 32.97,
        "temp_max": 38.44
      },
      "wind": {
        "speed": 0,
        "deg": 0
      },
      "clouds": {
        "all": 90
      },
      "weather": [
        {
          "id": 500,
          "main": "Rain",
          "description": "light rain",
          "icon": "10n"
        }
      ],
      "rain": {
        "1h": 0.73
      }
    },
    {
      "dt": 1643781600,
      "main": {
        "temp": 33.8,
        "feels_like": 27.72,
        "pressure": 1018,
        "humidity": 97,
        "temp_min": 30.9,
        "temp_max": 36.68
      },
      "wind": {
        "speed": 6.91,
        "deg": 340
      },
      "clouds": {
        "all": 90
      },
      "weather": [
        {
          "id": 601,
          "main": "Snow",
          "description": "snow",
          "icon": "13n"
        }
      ],
      "snow": {
        "1h": 0.95
      }
    },
    {
      "dt": 1643785200,
      "main": {
        "temp": 32.54,
        "feels_like": 26.2,
        "pressure": 1019,
        "humidity": 98,
        "temp_min": 30.79,
        "temp_max": 36.21
      },
      "wind": {
        "speed": 6.91,
        "deg": 350
      },
      "clouds": {
        "all": 90
      },
      "weather": [
        {
          "id": 601,
          "main": "Snow",
          "description": "snow",
          "icon": "13n"
        }
      ],
      "snow": {
        "1h": 1.15
      }
    },
    {
      "dt": 1643788800,
      "main": {
        "temp": 32.23,
        "feels_like": 26.71,
        "pressure": 1020,
        "humidity": 98,
        "temp_min": 29.79,
        "temp_max": 34.36
      },
      "wind": {
        "speed": 5.75,
        "deg": 350
      },
      "clouds": {
        "all": 90
      },
      "weather": [
        {
          "id": 601,
          "main": "Snow",
          "description": "snow",
          "icon": "13n"
        }
      ],
      "snow": {
        "1h": 2.42
      }
    },
    {
      "dt": 1643792400,
      "main": {
        "temp": 31.59,
        "feels_like": 22.5,
        "pressure": 1020,
        "humidity": 96,
        "temp_min": 27.97,
        "temp_max": 34.36
      },
      "wind": {
        "speed": 11.5,
        "deg": 360,
        "gust": 17.27
      },
      "clouds": {
        "all": 100
      },
      "weather": [
        {
          "id": 601,
          "main": "Snow",
          "description": "snow",
          "icon": "13n"
        }
      ],
      "snow": {
        "1h": 1.15
      }
    },
    {
      "dt": 1643796000,
      "main": {
        "temp": 30.49,
        "feels_like": 21.67,
        "pressure": 1020,
        "humidity": 98,
        "temp_min": 27.79,
        "temp_max": 33.37
      },
      "wind": {
        "speed": 10.36,
        "deg": 10
      },
      "clouds": {
        "all": 90
      },
      "weather": [
        {
          "id": 601,
          "main": "Snow",
          "description": "snow",
          "icon": "13n"
        }
      ],
      "snow": {
        "1h": 1.41
      }
    },
    {
      "dt": 1643799600,
      "main": {
        "temp": 30.06,
        "feels_like": 21.74,
        "pressure": 1020,
        "humidity": 98,
        "temp_min": 26.56,
        "temp_max": 33.37
      },
      "wind": {
        "speed": 9.22,
        "deg": 20
      },
      "clouds": {
        "all": 90
      },
      "weather": [
        {
          "id": 601,
          "main": "Snow",
          "description": "snow",
          "icon": "13n"
        }
      ],
      "snow": {
        "1h": 0.92
      }
    },
    {
      "dt": 1643803200,
      "main": {
        "temp": 29.16,
        "feels_like": 19.44,
        "pressure": 1021,
        "humidity": 96,
        "temp_min": 25.79,
        "temp_max": 32.36
      },
      "wind": {
        "speed": 11.5,
        "deg": 360,
        "gust": 16.11
      },
      "clouds": {
        "all": 90
      },
      "weather": [
        {
          "id": 601,
          "main": "Snow",
          "description": "snow",
          "icon": "13n"
        }
      ],
      "snow": {
        "1h": 1.19
      }
    },
    {
      "dt": 1643806800,
      "main": {
        "temp": 28.78,
        "feels_like": 19.54,
        "pressure": 1021,
        "humidity": 96,
        "temp_min": 25.95,
        "temp_max": 30.81
      },
      "wind": {
        "speed": 10.36,
        "deg": 360
      },
      "clouds": {
        "all": 90
      },
      "weather": [
        {
          "id": 601,
          "main": "Snow",
          "description": "snow",
          "icon": "13d"
        }
      ],
      "snow": {
        "1h": 0.92
      }
    }
  ]
}


Content from https://openweathermap.org/history-bulk:

History Bulk
Home
API
History Bulk
This product enables you to extract hourly historical weather data for over
46+ years
               deep
for any chosen location or coordinate. It includes 15 weather
parameters
.
You can find more info on how to access the historical data on our
pricing page
.
Buy History Bulk
Features of History Bulk
Historical weather data available from 1st January 1979 with 1-hour step.
The weather data archive that includes 15 weather parameters such as temperature, feels like,
                     precipitation, wind and
many more
. You can also select which weather
                     parameters you want to get.
You can set up your location in 4 different ways:
Choose a location on the map
Input a location name
Input coordinates
Import a list of coordinates via CSV file
The measurement units and the output file format (CSV or JSON) can be configured in accordance to
                     your preferences.
You can choose to obtain the data for multiple locations in one file or in an archive with separate
                     files for each location.
Buy History Bulk
The examples of data can be found in the
"Sample data"
section.
Please
contact us
when requesting data for a
                  large number of locations. We’ll be happy to prepare and export the data for you.
How to get historical weather data
To request History Bulk for your locations, please follow these steps:
Go to the
OpenWeatherMap Marketplace
and
                     choose
"History Bulk"
product.
Select locations. There are 4 ways to set your locations:
Click on the map.
Click on the map and the pin will be set on the chosen location.
                        Click
                        on the "Add location" to add this location into your order or click on another place on the
                        map.
Input a location name.
Click on the search line, input location name and choose it
                        from
                        the dropdown list. The chosen location will be displayed on the map, click on the "Add
                        location"
                        tab to add this location into your order.
Input coordinates.
Click on the search line, choose "By coordinate" option, enter
                        latitude and longitude to the form and push the "Enter" button on your keyboard. The chosen
                        location will be displayed on the map, click on the "Add location" tab to add this location
                        into
                        your order.
Import a list of coordinates via CSV file.
Click on the search line, choose "Import"
                        option and follow the detail instruction on the form to download your CSV file with a list of
                        coordinations.
Set the time period for the uploaded weather archive.
Configure list of weather parameters, measurement units and the format of the downloadable output
                     file per your preferences.
Click on the "Place order" button and check your order details.
To complete the checkout process, please click on the "Checkout" button and proceed to payment.
Buy History Bulk
After the successful payment you will be able to find your order in two ways:
You will receive a letter to your email with the link to download your current order.
All purchases can be also found in your personal account, in the
"Order"
section.
Please see the following tips if you have any troubles to open weather archives of your orders:
If you are using the Windows operating system, please use 7zip or WinRAR to unpack the archive.
In case you are using a Linux family operating system, the archive should be opened by standard
                     means.
Sample data
There are two formats of files History Bulk can be provided in. Please find the examples below:
JSON
CSV
Weather fields in History Bulk
If you do not see some of the parameters in your bulk, it means that these weather phenomena just have
               not happened in the chosen time period at the chosen location. Only really measured or calculated data is
               displayed in your bulk.
Parameters
city_name
City name
lat
Geographical coordinates of the location (latitude)
lon
Geographical coordinates of the location (longitude)
main
main.temp
Temperature
main.temp_min
Minimum temperature at the moment. This is deviation from
                           temperature that is possible for large cities and megalopolises geographically expanded (use
                           these parameter optionally).
main.temp_max
Maximum temperature at the moment. This is deviation from
                           temperature that is possible for large cities and megalopolises geographically expanded (use
                           these parameter optionally).
main.feels_like
This temperature parameter accounts for the human perception of
                           weather
main.pressure
Atmospheric pressure (on the sea level), hPa
main.humidity
Humidity, %
main.dew_point
Atmospheric temperature (varying according to pressure and
                           humidity) below which water droplets begin to condense and dew can form. Units – default:
                           kelvin
wind
wind.speed
Wind speed. Units – default: meter/sec
wind.deg
Wind direction, degrees (meteorological)
wind.gust
Wind gust. Units – default: meter/sec
clouds
clouds.all
Cloudiness, %
rain
rain.1h
Rain volume for the last hour, mm
rain.3h
Rain volume for the last 3 hours, mm
snow
snow.1h
Snow volume for the last hour, mm (in liquid state)
snow.3h
Snow volume for the last 3 hours, mm (in liquid state)
weather
(more info
Weather condition
                        codes
)
weather.id
Weather condition id
weather.main
Group of weather parameters (Rain, Snow, Extreme etc.)
weather.description
Weather condition within the group. Please find more
here
weather.icon
Weather
icon id
visibility
Average visibility, metres. The maximum value of the visibility is 10km
dt
Time of data calculation, unix, UTC
dt_iso
Date and time in UTC format
timezone
Shift in seconds from UTC
Example
JSON Example
[{
   "city_name":"Custom location",
   "lat":51.485927,
   "lon":0.24995,
   "main":{
     "temp":277.72,
     "temp_min":275.632,
     "temp_max":279.15,
     "feels_like":273.99,
     "pressure":1029,
     "humidity":75,
     "dew_point" : 280.33
     },
   "wind":{
     "speed":2.6,
     "deg":10,
     "gust": 5.8
     },
   "rain":{
     "3h":1
     },
   "clouds":{
     "all":75
     },
   "weather":[{
     "id":500,
     "main":"Rain",
     "description":"light rain",
     "icon":"10n"
     }],
   "visibility":10000,
   "dt":1585612800,
   "dt_iso":"2020-03-31 00:00:00 +0000 UTC",
   "timezone":3600
},
We provide a broad variety of products such as
One Call API 3.0
,
Solar Irradiance & Energy Prediction service,
Road Risk API,
Road Risk API,
Air Pollution API
. Please
                        review our
product list
page and find more
                        info in the product documentation and
pricing
pages.
List of weather condition codes
List of
weather condition codes
with icons (range of
                  thunderstorm, drizzle, rain, snow, clouds, atmosphere etc.)


Content from https://openweathermap.org/api/weathermaps:

Weather maps 1.0
Home
API
Weather maps 1.0
OpenWeatherMap provides many kinds of weather maps including Precipitation, Clouds, Pressure, Temperature,
            Wind. You can connect them to mobile and web apps.
We have launched
Weather maps 2.0
!
Now available Forecast, Historical and Current weather maps. 14 weather map layers with 1-hour step. You
               can get all of them using only one simple URL!
Learn more
URL format
The following endpoint is available for everyone. It requires only the
API key
authentication.
https://tile.openweathermap.org/map/{layer}/{z}/{x}/{y}.png?appid=
{API key}
Parameters
{layer}
required
layer name
{z}
required
number of zoom level. You could find information about correlation between zoom levels, X, Y tile
                     coordinate numbers and level scale
here
{x}
required
number of x tile coordinate. You could find information about correlation between zoom levels, X,
                     Y tile coordinate numbers and level scale
here
{y}
required
number of y tile coordinate. You could find information about correlation between zoom levels, X,
                     Y tile coordinate numbers and level scale
here
appid
required
Your unique API key (you can always find it on your account page under the
"API key" tab
)
Examples of weather map layers
Clouds
layer
:
clouds_new
area
:
worldwide
Preview
                        weathermap
Precipitation
layer
:
precipitation_new
area
:
worldwide
Sea level pressure
layer
:
pressure_new
area
:
worldwide
Preview
                        weathermap
Wind speed
layer
:
wind_new
area
:
worldwide
Preview
                        weathermap
Temperature
layer
:
temp_new
area
:
worldwide
Preview
                        weathermap
Map styles legend
Default styles for weather layers
Google Maps JavaScript API based on OpenWeatherMap API
Google has closed their Weather and Cloud solutions since 4th of June 2015 and recommended to use
               OpenWeatherMap with the Google Maps JavaScript API as an alternative solution.
'Displaying weather data with the Google Maps API and OpenWeatherMap'
manual
.
Libraries to connect weather layers
Open Layers
The following functions are available for the OpenLayers library:
Classes of weather layer and weather stations layer
Possibility to set your own style
Classes with clustered markers
Support of marker server clustering
Leaflet
The OpenWeatherMap javascript library is designed to work with the Leaflet mapping service. The current
               version of the library allows the following:
Embedding of layer with current weather in cities
Embedding of layer with weather stations
The library supports customer clustering
Leaflet library
Another implementation of map based on Leaflet technology supports OWM's TileLayers and current
               city/station data. It is configurable with many options. For current city/station data the library
               supports refreshing the data in intervals, some types of client-side clustering (show only the
               station/city with the highest rank for a defined pixel square), custom image set (if you provide one),
               different languages ("en", "de", "ru", "fr", but translation is incomplete), minZoom and others.
Source and documentation (README.md) is available on GitHub
https://github.com/buche/leaflet-openweathermap
Example of weather map:
https://github.com/owm-inc/VANE-intro/tree/master/apps


Content from https://openweathermap.org/price_subscribe:

Subscription
Home
Price
Subscription
Welcome to subscription page!
MONTHLY (PayPal recurrent payment)
1. Enter your API key
(How to get):
2. Choose your
                  subscription:
Startup : $40.00 USD - monthly
Developer : $180.00 USD - monthly
Professional : $470.00 USD - monthly
Enterprise : $2,000.00 USD - monthly
I have read and agree to the
Terms
                    and conditions of sale
,
Privacy policy
, and
Websites
                    terms and conditions of use
. I hereby consent to immediate performance of the contract when
                  clicking on the 'Subscribe' button and acknowledge that I will lose my right of withdrawal from the
                  contract once the automatic download of the digital content has begun.
LONG-TERM (manual invoicing)
We accept:
Credit and debit cards (payment via PayPal)
Wire transfer
We do not accept:
Checks
Cash
Request for
            invoice
Please, read first:
How to buy
Terms
            and conditions of sale
Privacy policy
Websites
            terms and conditions of use


Content from https://openweathermap.org/technology:

Technology
Home
Technology
Why our Free Weather API is so good yet free
Such powerful technologies as our ML can significantly advance both the
                accuracy and computing speed of global assemble forecasting models, a practice that was impossible only
                a few years ago. That makes the entire calculation fast and cost-effective, providing millions of
                customers with accurate forecasts promptly.
Weather data should be open to anyone
Not many types of data can affect business decisions and personal everyday plans on
                the
                same scale as weather data does. And that is not to mention the billions of dollars that businesses and
                governments are losing indeed due to extreme weather conditions that are beyond their control. However,
                most applications of accurate forecasts and history for businesses are more routine, yet more practical
                for daily analysis and decision-making. To name just a few, these include analysis of the impact of
                weather on customers’ demand for retailers, planning of safe routes for transport companies, accurate
                evaluation of customers’ cases for insurers, sensitive planning of energy consumption for householders,
                and timely watering of crops for farmers.
Modern technologies make accurate weather data not only widely available, but also nearly free
What seemed impossible just a few years ago, you can now do at lightning speed.
                Machine
                learning (ML), neural networks, big data, cloud spaces – all of this is easily accessible for
                calculating hugely sophisticated forecasting models such as Numerical Weather Prediction (NWP) or
                short-term forecasts that update rapidly.
ML empowers the classic forecasting models
When it comes to the computing and valuation of complex hydro-meteorological models,
                we
                rely on the most honourable agencies such as NOAA, Met Office, ECMWF, Environmental Canada. But we can
                enhance their models with our knowledge of data science and ML, given that most of the mathematics
                behind forecasting is well-known. For example, the forecasting algorithms for its extreme form, nowcast,
                have been in use since the 1950s’ radar data is open, and even free for some territories. Additionally,
                there are lots of specialised instruments for developers, such as Python libraries for the STEP
                (Short-term Ensemble Prediction System) computation.
Plethora of open weather data to be fed the ML model
Fortunately, global meteorological companies such as NOAA, the Met Office,
                Environment
                Canada and ECMWF share our belief that weather data should be open. They supply us with enormous data
                feeds, including data from radars, weather satellites and weather stations. They also provide a lot of
                more specialised products such as road alerts, road risks and marine weather.
Weather data finds their way to developers with Openweather ML model
Before weather data can find its way to businesses, it has to pass through the hands
                of
                developers, and they have to come to us.
Our weather products
are based on open data
                and open technologies. With our convolutional neural networks and ML technologies, we significantly
                enhance fundamental global forecast models with radar-based nowcasts, weather satellite data and the
                vast network of weather stations (82,000), rain gauges and other weather sensors. Developers access
                these vast amounts of data via our light-speed, elegant APIs.
Openweather ML calculates weather data for any location, for any moment, in the past, now, and in the
                future
With
our APIs
, you can get data for any location on the globe:
                minutely forecast for the two hours, hourly forecasts for one week, current weather, and history for the
                46+ years back, with a vast range of meteorological parameters. All these remarkable
                products are
                available
for free
with up to 1 million calls per month. For those who are looking
                for a bigger service, we provide several
paid subscriptions
and a range of
historical products
.
If you want to know how accurate our weather model is, please read our
detailed report
.
For all requests, please contact us at
info@openweathermap.org
.


Content from https://openweathermap.org/api/uvi:

Ultraviolet Index (Deprecated)
Home
Ultraviolet Index (Deprecated)
The product retired on
1st April 2021
, please find UV data in
One Call
                  API 3.0
.
One Call API includs current, hourly forecast for 7 days and 5 days historical UV data.
Access current, forecast and historical UV data for any location on Earth including over 200,000 cities!
            Data is available in the JSON format.
Call current UV data
Parameters of API call
lat, lon
required
Geographical coordinates (latitude, longitude)
appid
required
Your unique API key (you can always find it on your account page under the
"API key" tab
)
Example of API response
Example of API response
{
"lat":37.75,
"lon":-122.37,
"date_iso":"2017-06-26T12:00:00Z",
"date":1498478400,
"value":10.06
}
Call forecast UV data
The data is available for 8 days ahead.
Parameters of API call
lat, lon
required
Geographical coordinates (latitude, longitude)
appid
required
Your unique API key (you can always find it on your account page under the
"API key" tab
)
cnt
optional
A number of timestamps in response.
Example of API call
Example of API response
[
      {
          "lat":37.75,
          "lon":-122.37,
          "date_iso":"2017-06-27T12:00:00Z",
          "date":1498564800,
          "value":10.1
      },
      {
          "lat":37.75,
          "lon":-122.37,
          "date_iso":"2017-06-28T12:00:00Z",
          "date":1498651200,
          "value":10.19
      },
      ...
      {
          "lat":37.75,
          "lon":-122.37,
          "date_iso":"2017-07-04T12:00:00Z",
          "date":1499169600,
          "value":10.05
      }
  ]
Call historical UV data
Parameters
lat, lon
required
Geographical coordinates (latitude, longitude)
appid
required
Your unique API key (you can always find it on your account page under the
"API key" tab
)
cnt
optional
A number of timestamps in response.
start
optional
Starting point of time period in UNIX time
end
optional
Final point of time period in UNIX time
Example of API call
Example of API response
[
    {
        "lat":37.75,
        "lon":-122.37,
        "date_iso":"2017-06-22T12:00:00Z",
        "date":1498132800,
        "value":9.92
    },
    {
        "lat":37.75,
        "lon":-122.37,
        "date_iso":"2017-06-23T12:00:00Z",
        "date":1498219200,
        "value":10.09
    },
    {
        "lat":37.75,
        "lon":-122.37,
        "date_iso":"2017-06-24T12:00:00Z",
        "date":1498305600,
        "value":10.95
    },
    {
        "lat":37.75,
        "lon":-122.37,
        "date_iso":"2017-06-25T12:00:00Z",
        "date":1498392000,
        "value":11.03
    },
    {
        "lat":37.75,
        "lon":-122.37,
        "date_iso":"2017-06-26T12:00:00Z",
        "date":1498478400,
        "value":10.06
    }
]
The data is available starting from the 2017-06-22.
Server response format
Please remember that data is provided only for 12:00 p.m.
Example
{
  "lat": 38.75,
  "lon": 40.25,
  "date_iso": "2017-06-23T12:00:00Z",
  "date": 1498219200,
  "value": 10.16
}
lat
float
latitude for returned
                     data
lon
float
longitude for returned
                     data
date_iso
string
date and time
                     corresponding to returned date
date
integer
ISO 8601 timestamp
value
float
longitude for
                     returned data
Codes of requests
If API call is successful - 200 HTTP-code is returned. If location is not found or wrong APPID is
                  specified then HTTP-code 404 or HTTP-code 400 are returned accordingly.


Content from https://openweathermap.org/bulk:

Bulk Download
Home
Bulk Download
The service allows you to regularly download current weather, weather forecasts and their 7-day
            archives in JSON or CSV format. Weather bulks are grouped by
types of weather data
and
location lists
, such as a variety of city lists or ZIP code lists of EU, UK, and US.
About
Current, forecast and historical weather data is available via regulary updated JSON or CSV files. In
               order to receive this data, you will need to download an archive via provided link. Each archive will
               contain selected weather data by chosen locations lists.
This product has access to all types of weather data (current weather, forecasts, bulk archives) and
               data
               formats. The weather data can be downloaded by list of major cities (22,635 cities across the globe),
               extended cities list (209,579 cities across the globe) and variety of city lists or ZIP code lists of EU,
               UK, and US.
Please note, that we can develop a custom regularly updated current, forecast and historical bulks.
                  Please
contact us
to learn more about it.
How to use the service
Use links of the following types in order to access bulks files:
To get
Current
and
Forecast
bulks files:
https://bulk.openweathermap.org/snapshot/{BULK_FILE_NAME}?appid=
{API key}
To get access to
7-days archive
of current and forecasts bulk files:
https://bulk.openweathermap.org/archive/{BULK_FILE_NAME}?appid=
{API key}
Parameters
{BULK_FILE_NAME}
required
Specified in the
"File name"
table column in the
"Types of bulk
                              files"
section
appid
required
Your unique API key (you can always find it on your account page under the
"API key" tab
)
All bulk files available both in JSON and CSV formats. File names provided in the
tables below
are relevant for JSON format. If you want to
                        upload data in the CSV formate, please change
json
on
csv
in the file
                        name.
Examples:
JSON file name:
weather_16.json.gz
CSV file name:
weather_16.csv.gz
Unpack the downloaded file by using any suitable archiver software. After this is done, you will
                     have a JSON or CSV format file that is ready to use. The file implies line-by-line processing.
Examples of bulk files can be found here:
bulk samples
.
To download updated weather data, please also use the same link. Data in the files get updated in
                     accordance with the schedule found in the
"Updated"
column of the downloaded file.
Please note that weather data in the fill is rewritten regularly.
Types of bulk files
There are 3 types of bulk files:
Current bulk
,
Forecasts
                  bulks
and
7-days archive
weather bulks.
Please note that scheduled update times are specified in UTC.
Current weather bulks
With Current weather bulk you can upload bulk file of current weather for chosen
city
                     lists and ZIP codes locations lists
.
Examples of bulk files can be found here:
bulk samples
. Please pay attention that
weather_14.json.gz
and
weather_16.json.gz
files refer for current weather.
File name
Number of locations
Updated, UTC time
weather_14.json.gz
22,635 cities
1 time/hour
(00:10, 01:10, 02:10,...)
weather_16.json.gz
209,579 cities
1 time/hour
(00:20, 01:20, 02:20,...)
weather_zip_eu.json.gz
153,952
EU ZIP codes
1 time/hour
(00:20, 01:20, 02:20,...)
weather_zip_us.json.gz
41,959
US ZIP codes
1 time/hour
(00:20, 01:20, 02:20,...)
weather_zip_uk.json.gz
15,225
UK ZIP codes
1 time/hour
(00:20, 01:20, 02:20,...)
Example of link to download bulk file in CSV format
https://bulk.openweathermap.org/snapshot/weather_zip_us.csv.gz?appid=
{API key}
If you are interested in to get Current bulk files for 7 previous days, please read
"7-day archives of bulk files"
section.
Forecast bulks
WIth Forecast bulk you can upload bulk file of Forecast weather with a variable data granulation for
                  chosen cities and ZIP codes locations.
Examples of bulk files can be found here:
bulk samples
. Please pay attention that
hourly_14.json.gz
,
hourly_16.json.gz
,
daily_14.json.gz
and
daily_16.json.gz
files refer for forecast weather.
Hourly forecast for 4 days ahead
File name
Number of locations
Updated, UTC time
hourly1h_14.json.gz
22,635 cities
4 times/day
(03:00, 09:00, 15:00, 21:00)
hourly1h_16.json.gz
209,579 cities
4 times/day
(03:00, 09:00, 15:00, 21:00)
hourly1h_zip_eu.json.gz
153,952
EU ZIP codes
2 times/day
(08:00, 20:00)
hourly1h_zip_us.json.gz
41,959
US ZIP codes
2 times/day
(08:00, 20:00)
hourly1h_zip_uk.json.gz
15,225
UK ZIP codes
2 times/day
(08:00, 20:00)
Example of link to download bulk file in CSV format
https://bulk.openweathermap.org/snapshot/hourly1h_zip_eu.csv.gz?appid=
{API key}
Daily forecast for 16 days ahead
File name
Number of locations
Updated, UTC time
daily_14.json.gz
22,635 cities
2 times/day
(07:00, 19:00)
daily_16.json.gz
209,579 cities
2 times/day
(07:00, 19:00)
daily_zip_eu.json.gz
153,952
EU ZIP codes
2 times/day
(08:00, 20:00)
daily_zip_us.json.gz
41,959
US ZIP codes
2 times/day
(08:00, 20:00)
daily_zip_uk.json.gz
15,225
UK ZIP codes
2 times/day
(08:00, 20:00)
Example of link to download bulk file in CSV format
https://bulk.openweathermap.org/snapshot/daily_zip_uk.csv.gz?appid=
{API key}
3-hour step forecast for 5 days ahead
File name
Number of locations
Updated, UTC time
hourly_14.json.gz
22,635 cities
1 time/hour
(00:10, 01:10, 02:10,...)
hourly_16.json.gz
209,579 cities
2 times/day
(07:00, 19:00)
hourly_zip_eu.json.gz
153,952
EU ZIP codes
2 times/day
(08:00, 20:00)
hourly_zip_us.json.gz
41,959
US ZIP codes
2 times/day
(08:00, 20:00)
hourly_zip_uk.json.gz
15,225
UK ZIP codes
2 times/day
(08:00, 20:00)
Example of link to download bulk file in CSV format
https://bulk.openweathermap.org/snapshot/hourly_zip_eu.csv.gz?appid=
{API key}
If you are interested in to get Forecasts bulk files for 7 previous days, please read
"7-day archives of bulk files"
section.
7-day archive of current and forecast weather bulks files
You can get all weather bulks files for the 7 previous days. The structure of data the same as for
                  current and forecasts bulks files.
7-day archive of current weather bulk files
File name
Number of locations
Available data per day,
UTC time
weather_14_mmddyy_hhmm.json.gz
Example of file name: weather_14_011020_0200.json.gz
22,635 cities
01:00, 02:00, 03:00, 04:00, 05:00, 06:00, 07:00, 08:00, 09:00, 10:00, 11:00, 12:00, 13:00,
                           14:00, 15:00, 16:00, 17:00, 18:00, 19:00, 20:00, 21:00, 22:00, 23:00, 00:00
weather_16_mmddyy_hhmm.json.gz
Example of file name: weather_16_011020_0200.json.gz
209,579 cities
01:00, 02:00, 03:00, 04:00, 05:00, 06:00, 07:00, 08:00, 09:00, 10:00, 11:00, 12:00, 13:00,
                           14:00, 15:00, 16:00, 17:00, 18:00, 19:00, 20:00, 21:00, 22:00, 23:00, 00:00
weather_zip_eu_mmddyy_hhmm.json.gz
Example of file name: weather_zip_eu_011020_2000.json.gz
153,952
EU ZIP codes
01:00, 02:00, 03:00, 04:00, 05:00, 06:00, 07:00, 08:00, 09:00, 10:00, 11:00, 12:00, 13:00,
                           14:00, 15:00, 16:00, 17:00, 18:00, 19:00, 20:00, 21:00, 22:00, 23:00, 00:00
weather_zip_us_mmddyy_hhmm.json.gz
Example of file name: weather_zip_us_011020_2000.json.gz
41,959
US ZIP codes
01:00, 02:00, 03:00, 04:00, 05:00, 06:00, 07:00, 08:00, 09:00, 10:00, 11:00, 12:00, 13:00,
                           14:00, 15:00, 16:00, 17:00, 18:00, 19:00, 20:00, 21:00, 22:00, 23:00, 00:00
weather_zip_uk_mmddyy_hhmm.json.gz
Example of file name: weather_zip_uk_011020_2000.json.gz
15,225
UK ZIP codes
01:00, 02:00, 03:00, 04:00, 05:00, 06:00, 07:00, 08:00, 09:00, 10:00, 11:00, 12:00, 13:00,
                           14:00, 15:00, 16:00, 17:00, 18:00, 19:00, 20:00, 21:00, 22:00, 23:00, 00:00
Example of link to download bulk file in CSV format
https://bulk.openweathermap.org/archive/weather_zip_uk_011020_2000.csv.gz?appid=
{API key}
7-day archive of hourly forecast for 4 days ahead
File name
Number of locations
Available data per day,
UTC time
hourly1h_14_mmddyy_hhmm.json.gz
Example of file name: hourly1h_14_011020_0200.json.gz
22,635 cities
02:00, 08:00, 14:00, 20:00
hourly1h_16_mmddyy_hhmm.json.gz
Example of file name: hourly1h_16_011020_0200.json.gz
209,579 cities
02:00, 08:00, 14:00, 20:00
hourly1h_zip_eu_mmddyy_hhmm.json.gz
Example of file name: hourly1h_zip_eu_011020_2000.json.gz
153,952
EU ZIP codes
07:00, 19:00
hourly1h_zip_us_mmddyy_hhmm.json.gz
Example of file name: hourly1h_zip_us_011020_2000.json.gz
41,959
US ZIP codes
07:00, 19:00
hourly1h_zip_uk_mmddyy_hhmm.json.gz
Example of file name: hourly1h_zip_uk_011020_2000.json.gz
15,225
UK ZIP codes
07:00, 19:00
7-day archive of daily forecast for 16 days ahead
File name
Number of locations
Available data per day,
UTC time
daily_14_mmddyy_hhmm.json.gz
Example of file name: daily_14_011020_0200.json.gz
22,635 cities
06:00, 18:00
daily_16_mmddyy_hhmm.json.gz
Example of file name: daily_16_011020_0200.json.gz
209,579 cities
06:00, 18:00
daily_zip_eu_mmddyy_hhmm.json.gz
Example of file name: daily_zip_eu_011020_2000.json.gz
153,952
EU ZIP codes
07:00, 19:00
daily_zip_us_mmddyy_hhmm.json.gz
Example of file name: daily_zip_us_011020_2000.json.gz
41,959
US ZIP codes
07:00, 19:00
daily_zip_uk_mmddyy_hhmm.json.gz
Example of file name: daily_uk_011020_2000.json.gz
15,225
UK ZIP codes
07:00, 19:00
7-day archive of 3-hour step forecast for 5 days ahead
File name
Number of locations
Available data per day,
UTC time
hourly_14_mmddyy_hhmm.json.gz
Example of file name: hourly_14_011020_0200.json.gz
22,635 cities
01:00, 02:00, 03:00, 04:00, 05:00, 06:00, 07:00, 08:00, 09:00, 10:00, 11:00, 12:00, 13:00,
                           14:00, 15:00, 16:00, 17:00, 18:00, 19:00, 20:00, 21:00, 22:00, 23:00, 00:00
hourly_16_mmddyy_hhmm.json.gz
Example of file name: hourly_16_011020_0200.json.gz
209,579 cities
06:00, 18:00
hourly_zip_eu_mmddyy_hhmm.json.gz
Example of file name: hourly_zip_eu_011020_2000.json.gz
153,952
EU ZIP codes
07:00, 19:00
hourly_zip_us_mmddyy_hhmm.json.gz
Example of file name: hourly_zip_us_011020_2000.json.gz
41,959
US ZIP codes
07:00, 19:00
hourly_zip_uk_mmddyy_hhmm.json.gz
Example of file name: hourly_uk_011020_2000.json.gz
15,225
UK ZIP codes
07:00, 19:00
Location lists
There are 5 lists of locations for each type of weather data:
List of major cities across the globe - 22,635 cities. You can download the full list of cities
here
Extended cities list across the globe - 209,579 cities. You can download the full list of cities
here
Full list of the US ZIP codes
Full list of the UK ZIP codes
Full list of the all Europe ZIP codes
Bulk file samples
Samples of bulk files can be downloaded here:
bulk samples
.
Please pay attention that:
weather_14.json.gz
and
weather_16.json.gz
files refer for current
                     weather
hourly_14.json.gz
,
hourly_16.json.gz
,
daily_14.json.gz
and
daily_16.json.gz
files refer for forecast weather


Content from https://openweathermap.org/triggers:

Weather Triggers
Home
Weather Triggers
You can use simple syntax and a few API methods to create triggers which will fire on an occurrence of the
            selected weather conditions (temperature, humidity, pressure, etc.) in a specified period of time. For
            example, if you are interested in the forthcoming frosts or the probability of a wind speed increase in a
            certain place, you can obtain this information with the help of our new tool. More detailed description
            about working with the service is given below.
If the trigger's conditions are met, our service will generate an alert. In order to receive this alert you
            need to poll the service with the specified time interval. We plan to add push notifications and new data
            sources to this product's functionality in the nearest future.
Three simple steps for working with Weather Triggers API:
Create an account in
members area
and
receive a key to access API
.
Create the trigger with the necessary
conditions
for temperature,
                  pressure, humidity, wind speed, wind direction and clouds.
Poll our service and receive information about an occurrence or a forecast of the upcoming events in
                  which you are interested.
Weather Triggers API basic methods
Minimal prerequisites to start working with our service: create a trigger and receive a list of the
               current alerts.
[POST] /triggers
This method is used to create a trigger with the necessary conditions and the indication of an
                  interval for observations.
URL Example
http://api.openweathermap.org/data/3.0/triggers
Request Parameters
{
   "time_period":{
      "start":{
         "expression":"after",
         "amount":132000000
      },
      "end":{
         "expression":"after",
         "amount":432000000
      }
   },
   "conditions":[
      {
         "name":"temp",
         "expression":"$gt",
         "amount":299
      }
   ],
   "area":[
      {
         "type":"Point",
         "coordinates":[
            53,
            37
         ]
      }
   ]
}
API Response
{
   "__v":0,
   "_id":"585268b72516b90010058184",
   "alerts":{

   },
   "area":[
      {
         "type":"Point",
         "_id":"585268b72516b90010058185",
         "coordinates":[
            53,
            37
         ]
      }
   ],
   "conditions":[
      {
         "name":"temp",
         "expression":"$gt",
         "amount":299,
         "_id":"585268b72516b90010058186"
      }
   ],
   "time_period":{
      "end":{
         "expression":"after",
         "amount":432000000
      },
      "start":{
         "expression":"after",
         "amount":132000000
      }
   }
}
A full description of the returned data structure and the list of parameters can be found
here
.
Headers:
Content-Type: application/json
[GET] /triggers/{:id}
This method is used to get all information about a trigger, including the current alerts. Information
                  about an occurence of the expected events is in an
alert's
nested structure. The trigger
                  calls a separate method for receiving history notifications.
URL Example
http://api.openweathermap.org/data/3.0/triggers/5852816a9aaacb00153134a3
{
     "_id":"5852816a9aaacb00153134a3",
     "__v":0,
     "alerts":{
        "8b48b2cd21c23d2894466caccba1ed1f":{
           "conditions":[
              {
                 "current_value":{
                    "min":263.576,
                    "max":263.576
                 },
                 "condition":{
                    "name":"temp",
                    "expression":"$lt",
                    "amount":273,
                    "_id":"5852816a9aaacb00153134a5"
                 }
              }
           ],
           "last_update":1481802090232,
           "date":1482181200000,
           "coordinates":{
              "lon":37,
              "lat":53
           }
        }
     },
     "area":[
        {
           "type":"Point",
           "_id":"5852816a9aaacb00153134a4",
           "coordinates":[
              37,
              53
           ]
        }
     ],
     "conditions":[
        {
           "name":"temp",
           "expression":"$lt",
           "amount":273,
           "_id":"5852816a9aaacb00153134a5"
        }
     ],
     "time_period":{
        "end":{
           "amount":432000000,
           "expression":"after"
        },
        "start":{
           "amount":132000000,
           "expression":"after"
        }
     }
  }
A full description of the returned data structure and the list of parameters can be found
here
.
Additional features of Weather Triggers API
Allows you to get a list of all triggers, change and remove them, receive and manage alerts history.
[GET] /triggers
The method is used to get a list of all triggers (with the current alerts) which are connected to your
                  account.
URL Example
http://api.openweathermap.org/data/3.0/triggers
[
   {
      "_id":"585268b72516b90010058184",
      "__v":0,
      "alerts":{

      },
      "area":[
         {
            "type":"Point",
            "_id":"585268b72516b90010058185",
            "coordinates":[
               53,
               37
            ]
         }
      ],
      "conditions":[
         {
            "name":"temp",
            "expression":"$gt",
            "amount":299,
            "_id":"585268b72516b90010058186"
         }
      ],
      "time_period":{
         "end":{
            "expression":"after",
            "amount":432000000
         },
         "start":{
            "expression":"after",
            "amount":132000000
         }
      }
   },
   {
      "_id":"585280edbe54110025ea52bb",
      "__v":0,
      "alerts":{

      },
      "area":[
         {
            "type":"Point",
            "_id":"585280edbe54110025ea52bc",
            "coordinates":[
               53,
               37
            ]
         }
      ],
      "conditions":[
         {
            "name":"temp",
            "expression":"$lt",
            "amount":273,
            "_id":"585280edbe54110025ea52bd"
         }
      ],
      "time_period":{
         "end":{
            "amount":432000000,
            "expression":"after"
         },
         "start":{
            "amount":132000000,
            "expression":"after"
         }
      }
   },
   {
      "_id":"5852816a9aaacb00153134a3",
      "__v":0,
      "alerts":{
         "8b48b2cd21c23d2894466caccba1ed1f":{
            "conditions":[
               {
                  "current_value":{
                     "min":263.576,
                     "max":263.576
                  },
                  "condition":{
                     "name":"temp",
                     "expression":"$lt",
                     "amount":273,
                     "_id":"5852816a9aaacb00153134a5"
                  }
               }
            ],
            "last_update":1481802090232,
            "date":1482181200000,
            "coordinates":{
               "lon":37,
               "lat":53
            }
         }
      },
      "area":[
         {
            "type":"Point",
            "_id":"5852816a9aaacb00153134a4",
            "coordinates":[
               37,
               53
            ]
         }
      ],
      "conditions":[
         {
            "name":"temp",
            "expression":"$lt",
            "amount":273,
            "_id":"5852816a9aaacb00153134a5"
         }
      ],
      "time_period":{
         "end":{
            "amount":432000000,
            "expression":"after"
         },
         "start":{
            "amount":132000000,
            "expression":"after"
         }
      }
   }
]
A full description of the returned data structure and the list of parameters can be found
here
.
[PUT] /triggers/{:id}
This method is used to change a trigger's parameters.
IMPORTANT! If the trigger is changed, all related current alerts will be removed.
URL Example
http://api.openweathermap.org/data/3.0/triggers/585280edbe54110025ea52bb
Request Parameters
{
   "time_period":{
      "start":{
         "expression":"after",
         "amount":132000000
      },
      "end":{
         "expression":"after",
         "amount":132000000
      }
   },
   "conditions":[
      {
         "name":"temp",
         "expression":"$lt",
         "amount":270
      }
   ],
   "area":[
      {
         "type":"Point",
         "coordinates":[
            53,
            37
         ]
      }
   ]
}
API Response
{
   "_id":"585268b72516b90010058184",
   "__v":1,
   "alerts":{

   },
   "area":[
      {
         "type":"Point",
         "_id":"58528903d083a2001b7cb428",
         "coordinates":[
            53,
            37
         ]
      }
   ],
   "conditions":[
      {
         "name":"temp",
         "expression":"$lt",
         "amount":270,
         "_id":"58528903d083a2001b7cb427"
      }
   ],
   "time_period":{
      "start":{
         "expression":"after",
         "amount":132000000
      },
      "end":{
         "expression":"after",
         "amount":132000000
      }
   }
}
A full description of the returned data structure and the list of parameters can be found
here
.
Headers:
Content-Type: application/json
[DELETE] /triggers/{:id}
This method is used to remove a trigger from your account. In case of successful removal the service
                  will return an HTTP-code
204
(Successful answer).
IMPORTANT! Along with the trigger all of its alerts (current and past) will also be removed and they
                  couldn't be restored.
URL Example
http://api.openweathermap.org/data/3.0/triggers/585268b72516b90010058184
[GET] /triggers/{:id}/history
This method is used to get a list of historical alerts which were generated by the specified trigger,
                  but now become irrelevant.
URL Example
http://api.openweathermap.org/data/3.0/triggers/5852816a9aaacb00153134a3/history
[GET] /triggers/{:trigger_id}/history/{:alert_id}
This method is used to get information about the specific alert in the trigger's history. You need to
                  pass the trigger's and the alert's ids to the query.
URL Example
http://api.openweathermap.org/data/3.0/triggers/58528.../history/671e2...
[
   {
      "_id":"585268b72516b90010058184",
      "__v":0,
      "alerts":{

      },
      "area":[
         {
            "type":"Point",
            "_id":"585268b72516b90010058185",
            "coordinates":[
               53,
               37
            ]
         }
      ],
      "conditions":[
         {
            "name":"temp",
            "expression":"$gt",
            "amount":299,
            "_id":"585268b72516b90010058186"
         }
      ],
      "time_period":{
         "end":{
            "expression":"after",
            "amount":432000000
         },
         "start":{
            "expression":"after",
            "amount":132000000
         }
      }
   },
   {
      "_id":"585280edbe54110025ea52bb",
      "__v":0,
      "alerts":{

      },
      "area":[
         {
            "type":"Point",
            "_id":"585280edbe54110025ea52bc",
            "coordinates":[
               53,
               37
            ]
         }
      ],
      "conditions":[
         {
            "name":"temp",
            "expression":"$lt",
            "amount":273,
            "_id":"585280edbe54110025ea52bd"
         }
      ],
      "time_period":{
         "end":{
            "amount":432000000,
            "expression":"after"
         },
         "start":{
            "amount":132000000,
            "expression":"after"
         }
      }
   },
   {
      "_id":"5852816a9aaacb00153134a3",
      "__v":0,
      "alerts":{
         "8b48b2cd21c23d2894466caccba1ed1f":{
            "conditions":[
               {
                  "current_value":{
                     "min":263.576,
                     "max":263.576
                  },
                  "condition":{
                     "name":"temp",
                     "expression":"$lt",
                     "amount":273,
                     "_id":"5852816a9aaacb00153134a5"
                  }
               }
            ],
            "last_update":1481802090232,
            "date":1482181200000,
            "coordinates":{
               "lon":37,
               "lat":53
            }
         }
      },
      "area":[
         {
            "type":"Point",
            "_id":"5852816a9aaacb00153134a4",
            "coordinates":[
               37,
               53
            ]
         }
      ],
      "conditions":[
         {
            "name":"temp",
            "expression":"$lt",
            "amount":273,
            "_id":"5852816a9aaacb00153134a5"
         }
      ],
      "time_period":{
         "end":{
            "amount":432000000,
            "expression":"after"
         },
         "start":{
            "amount":132000000,
            "expression":"after"
         }
      }
   }
]
[DELETE] /triggers/{:trigger_id}/history/{:alert_id}
This method is used to remove a specific alert from a trigger's history. In case of successful removal
                  service will return an HTTP-code
204
(Successful answer).
URL Example
http://api.openweathermap.org/data/3.0/triggers/58528.../history/671e2...
[DELETE] /triggers/{:id}/history
This method is used to remove all history of alerts from a trigger. In case of successful removal
                  service will return an HTTP-code
204
(Successful answer).
URL Example
http://api.openweathermap.org/data/3.0/triggers/5852816a9aaacb00153134a3/history
Weather Triggers Structure
Below is a complete description of the weather triggers and alerts data structures. All
               request and response parameters are also explained further in this section.
Struct Example
{
   "__v":0,
   "_id":"585268b72516b90010058184",
   "alerts":{

   },
   "area":[
      {
         "type":"Point",
         "_id":"585268b72516b90010058185",
         "coordinates":[
            53,
            37
         ]
      }
   ],
   "conditions":[
      {
         "name":"temp",
         "expression":"$gt",
         "amount":299,
         "_id":"585268b72516b90010058186"
      }
   ],
   "time_period":{
      "end":{
         "expression":"after",
         "amount":432000000
      },
      "start":{
         "expression":"after",
         "amount":132000000
      }
   }
}
Parameters
_id
Document id
owner
User's id
time_period
Time interval's scope used to do the matching between the weather data and the trigger conditions
conditions
A set of conditions required for an alert creation
area
A set of locations where the weather data will be collected and matched with a trigger conditions
alerts
The named set of this trigger's current alerts
All fields contain a nested structure except the
_id
and the
owner
fields.
time_period
The structure of a
time_period
contains
start
and
end
fields.
                  These fields also contain nested structures describing the beginning and the end of a time interval
                  which is used to check the conditions.
The beginning and the end of a time interval represents a set of instructions for dynamic timestamp
                  estimation. Timestamp is calculated considering the current time at the moment when conditions are
                  being checked.
Parameters
amount
Number of milliseconds
expression
Specifies how to process value of the
amount
field.
The field
expression
has three admissible values:
exact
- the field
amount
will be interpreted as a timestamp
                              indicating an exact date/time
аfter
- the field
amount
will be interpreted as a number of
                              milliseconds which needs to be added to the current timestamp at the moment of validation
                              to receive a chosen date/time.
before
- the field
amount
will be interpreted as a number of
                              milliseconds which needs to be subtracted from the current timestamp at the moment of
                              validation to receive a chosen date/time.
Struct Example
{
   "time_period":{
      "end":{
         "amount":432000000,
         "expression":"after"
      },
      "start":{
         "amount":132000000,
         "expression":"after"
      }
   }
}
conditions
The field
conditions
contains an array of objects describing the parameters that are used
                  to do the comparison.
Parameters
name
The name of the parameter to be compared with.
The following values are allowed:
temp
,
pressure
,
humidity
,
wind_speed
,
wind_direction
,
clouds
. Value of the
name
field
                           specifies the corresponding parameter in a response from the
Weather
                              API
which will be compared with.
expression
The expression which will be used to compare.
Field
expression
indicates how exactly to perform comparison. The following
                           values are available:
$gt
- more than a value specified in
amount
.
$lt
- less than a value specified in
amount
.
$gte
- greater than or equals to a value specified in
amount
.
$lte
- less than or equals to a value specified in
amount
.
$eq
- equals to a value specified in
amount
.
$ne
- not equals to a value specified in
amount
.
amount
Numerical value to be compared with
Struct Example
{
   "conditions":[
      {
         "name":"temp",
         "expression":"$gt",
         "amount":299,
         "_id":"57fcdd4d13b0c80024ac1faa"
      }
   ]
}
area
Field
area
is an array of objects, each of which could be interpreted as a point, a point
                  set, polygon or set of polygons.
Parameters
type
Object type
coordinates
Set of coordinates
GeoJson
is taken as a syntactic
                  basis. In the
type
field the following values are allowed:
Point
,
MultiPoint
,
Polygon
,
MultiPolygon
.
Suchlike content is expected in the
coordinates
field, depending on the specified
type
:
type
coordinates
Point
[100.0, 0.0]
MultiPoint
[ [100.0, 0.0], [101.0, 1.0] ]
Polygon (without hole)
[ [ [100.0, 0.0], [101.0, 0.0], [101.0, 1.0], [100.0, 1.0], [100.0, 0.0] ] ]
Polygon (with hole)
[ [ [100.0, 0.0], [101.0, 0.0], [101.0, 1.0], [100.0, 1.0], [100.0, 0.0] ],[ [100.2, 0.2],
                        [100.8, 0.2], [100.8, 0.8], [100.2, 0.8], [100.2, 0.2] ] ]
MultiPolygon
[ [ [ [102.0, 2.0], [103.0, 2.0], [103.0, 3.0], [102.0,3.0], [102.0, 2.0] ] ],[ [ [100.0, 0.0],
                        [101.0, 0.0], [101.0, 1.0], [100.0, 1.0], [100.0, 0.0] ],[ [100.2, 0.2], [100.8, 0.2], [100.8,
                        0.8], [100.2, 0.8], [100.2, 0.2] ] ] ]
Struct Example
{
       "area":[
          {
             "type":"Point",
             "_id":"57fcdd4d13b0c80024ac1fa9",
             "coordinates":[
                53,
                37
             ]
          }
       ]
    }
alerts
The field
alerts
contains a set of key/value pairs. The
MD5 line
is an alert identifier and
                  serves as a key. An identification key is composed of three parameters:
Timestamp, weather data was received for.
Type of weather API.
The coordinates of the query to weather API.
Parameters
conditions
Current value and condition to fire on
last_update
Time of the last check when this condition have been fired on
date
Time of the measurement that matched a trigger's conditions
coordinates
Coordinates, for which measurements were requested
Struct Example
{
   "alerts":{
      "671e2e711b86117906b4b81aa61c9bab":{
         "conditions":[
            {
               "current_value":{
                  "min":270.636,
                  "max":270.636
               },
               "condition":{
                  "name":"temp",
                  "expression":"$gt",
                  "amount":100,
                  "_id":"5832d39802ec0200200abe83"
               }
            }
         ],
         "last_update":1479902521846,
         "date":1480280400000,
         "coordinates":{
            "lon":53,
            "lat":37
         }
      }
   }
}
history_alerts
Data model in the history of alerts almost repeats the structure of alerts in a trigger object, but
                  with two additional fields:
owner
and
triggerId
.
Parameters
_id
Document id
owner
user's id
triggerId
id of a trigger
conditions
Current value and condition to fire on
last_update
Time of the last check when this condition have been fired on
date
Time of the measurement that matched a trigger's conditions
coordinates
Coordinates, for which measurements were requested


Content from https://openweathermap.org/news/post/air-pollution-ways-forecast-and-calculate-it:

×
OpenWeather
Meteorological Service
Speak to
      the Chief
Meteorologist Dan Hart and
his team!
Air pollution: ways to forecast and calculate it
Posted on 01 May 2016
WEATHER
#api
,
#climatechange
,
#airpollution
In recent years, the fight against air pollution has become global. Humanity, at least when we are speaking about developed countries, starts to realize finally that the Earth is our common home which can get not suitable for living in the near future. Atmospheric pollution takes place when substances harmful for living creatures diffuse throughout the surrounding air, and then this destructive activity has its toxic impact later since it causes global changes of climate of the Earth.
Processes of global warming, oxidation of world ocean, melting of the ice caps at the poles, thinning of the ozone layer, dense smog over metropolitan areas – these are only a part of the problems that have arisen as a result of air pollution. Generally speaking, air pollution is a penetration of physical, chemical and/or biological contents into air that are usually not common for air, or a change of natural concentration of these contents in the air.
The most important indicators of air pollution are
carbon monoxide (CO)
,
ozone (O3)
,
sulfur dioxide (SO2)
and
nitrogen dioxide (NO2)
. With the increase in their permissible concentration in the air these gases affect both the environment and human well-being.
• Carbon monoxide (CO)
Any process during which the partial burning of carbon-containing substance happens is a possible source of producing of carbon monoxide.
Carbon monoxide occurs in the atmosphere as a byproduct of industrial plants; petroleum industry and chemical plants contribute to a large amount of carbon monoxide production. The main sources of carbon monoxide are the burning of fossil fuels and the exhaust gases of internal combustion engines. This gas is extremely toxic.
In a human body carbon monoxide is inhaled with air and comes to blood where it combines with hemoglobin to produce carboxyhemoglobin, which assumes the space in hemoglobin that normally carries oxygen, but carboxyhemoglobin is ineffective for delivering oxygen to bodily tissues. Thus it causes seizure, coma and fatality. The most significant damage is caused to central nervous system. Breathing a small concentration of carbon monoxide results in a feeling of heaviness, a feeling of squeezing in head, a heavy headache, severe pain in forehead and temples, dizziness, tremors, thirst, increased heart rate, nausea, vomiting, a rise in body temperature to 38-40C. Weakness in legs indicates influence of carbon monoxide on the spinal cord. High toxicity of carbon monoxide and its lack of colour, odour and taste make this gas extremely dangerous.
•  Ozone (O3)
Actually ozone is present in a low concentration throughout the Earth's atmosphere. Ozone is an allotrope of oxygen and is vital for living creatures. Ozone gas forms the crucial ozone layer between about 10 km and 30 km above the Earth’s surface preventing damaging ultraviolet light from reaching the Earth's surface, to the benefit of both plants and animals. But in close proximity to a human being ozone is much less salutary.
Ozone is a substance of the highest, the first class of hazard since it is a very strong oxidizer, which is extremely toxic to humans, and is the third largest greenhouse gas originating in human activity of environmental pollution.
As a component of smog, ozone is not discharged to the atmosphere, and is formed by the action of daylight UV rays on ozone precursors. Ozone precursors are a group of pollutants, predominantly those emitted during the combustion of fossil fuels; these are nitrogen oxides, volatile hydrocarbons and some other compounds.
Ozone is harmful to living beings, its action slow but serious. Long-term exposure to air rich in ozone has been shown to increase risk of cardiovascular diseases, respiratory problems, developing atherosclerosis.
Exposure to high ozone concentration above the permissible limit values is linked to headache, mucosal irritation, coughing, dizziness, fatigue, weak cardiac activity. Breathing of ozone leads to emergence or exacerbation of respiratory diseases, populations at risk are children, the elderly, and asthmatics.
Ozone adversely affects not only human health, but it is also harmful for agriculture: tons of crop of rice, wheat, soybeans and corn are lost annually due to toxicity of this gas.
•   Sulfur dioxide (SO2)
Sulfur dioxide is the most common air contaminant as many sorts of fuel contain sulfur. This gas has a general toxic effect and causes respiratory problems. Symptoms of poisoning are the following: a cough, rheum, hoarseness, strong sore throat and a peculiar taste in the mouth. Breathing of high concentration of sulfur dioxide results in difficulty swallowing, choking, speech disorder, nausea and vomiting, acute pulmonary edema may develop.
•    Nitrogen dioxide (NO2)
Nitrogen dioxide (NO2) is a reddish-brown gas that has a characteristic sharp, biting odor. The main sources of nitrogen dioxide are internal combustion engines burning fossil fuels. Often this brown gas is called “Megapolis gas”. Its presence in the atmosphere contributes to acid rains and reduces the ozone layer. Nitrogen dioxide is highly toxic, and it adversely affects the sense of smell. Thus, a 10-minute inhalation of nitrogen dioxide is enough for a person to stop feeling smell; dryness in the throat appears, mucous membranes become irritated. Even small concentrations of nitrogen dioxide irritate the respiratory tract, and high concentrations cause pulmonary edema. Along with influence on the respiratory tract and lungs, nitrogen causes changes in blood composition, in particular, it reduces hemoglobin concentration in blood. Cancer and cardiovascular diseases are the results of the harmful effects of nitrogen dioxide.
One of the challenges of global and local assessment of the environmental situation consists in the fact that the values of the basic indicators vary widely not only from region to region but also even within a few kilometers. It depends on many factors such as anthropogenic (the proximity of fuel combustion sources, of industrial plants, actively ongoing agriculture and street traffic) and weather factors (wind direction, humidity and sunlight). Geographical location of sources of pollution and objects under consideration is not less important. All this must be taken into account in making forecasts, in development of measures to fix critical situations and in creating long-term plans for environmental improvement.
One should understand that all these measures are unity of specific factors, which can be measured, calculated, forecast, and as a result, regulated. And modern technologies already allow doing that.
Not wanting to stay away from the solution of world problems, OWM company has released a new product called “Air quality data” based on the technology of Big Data Platform in April 2016. There is a package of APIs for data on the main indicators of air pollution, on the basis of which it is possible to adequately and accurately evaluate the environmental situation anywhere in the world and create forecasts for the adoption of preventive measures.
APIs for historical data (since November 2015) allow to create analytical services for the analysis of situation in the past, taking into account the impact of seasonal, weather and anthropogenic factors. It also helps making conclusions on necessary measures to improve the environmental situation across the countries and even continents.
However no matter how advanced technology is, people and their determination to take the necessary steps have always been and will be the crucial power in preventing a potential disaster.
Return to the Blog


Content from https://openweathermap.org/news/post/satellite-images-api:

×
OpenWeather
Meteorological Service
Speak to
      the Chief
Meteorologist Dan Hart and
his team!
Satellite Images API for Agriculture: NDVI, EVI, True and False colour
Posted on 16 May 2018
AGRO
#api
,
#agriculture
,
#satelliteimages
,
#smartfarming
By:
Bronislava Stavnitskaya
,
Product Manager, OpenWeather.
In this article, we would like to look in more detail at one of the essential elements of our Agro API: the Satellite Images API. The Satellite Images API is the dataset from the Landsat 8 and Sentinel-2 satellites on the basis of which we calculate quantitative indices, such as NDVI, EVI and others, and from which we also obtain ready-made images of territories in True and False colour, NDVI and EVI.
True colour and False colour
True colour – “True colour” is a rendering of the red, green and blue satellite imagery spectral bands to create the natural-looking RGB composite image.
False colour (b5 b4 b3) – “False colour” is a rendering using NIR (near infrared) band which is more useful for showing land cover and differentiating it from urban and farmland areas. In these images, it is possible to pick out different types of vegetation. Also easily discernible is the boundary between land and water, which enables changes in shorelines to be tracked.
NDVI and EVI vegetation indices
These are among the most common indices enabling quantitative assessment of vegetation cover. They are convenient for tracking the growth rate of plants and monitoring any changes in them.
NDVI – This is an index calculated according to a set formula which uses near infrared and red wavelengths. It is used in calculating and monitoring vegetation growth and its dynamics. The NDV Index is displayed in images using the white to green palette, where dark green indicates a good yield and white indicates a poor one or a lack of vegetation.
EVI – In areas of the dense canopy where the Leaf Area Index (LAI) is high, NDVI values can be improved using information from the blue wavelength. Information in this part of the spectrum can help correct atmospheric influences and background interference caused by soil.
We provide historical data, as well as satellite images that are as up to date as possible (allowing for the data source and cloud cover) for the very nearest time period. These images are available to all account users. Free tariff users can get all the satellite data that exists in our archive (the depth of this data is 1 year). For Small and Corporate tariff users, satellite data for all areas in the world is available. You can learn more about our pricing plans
here
.
Please note that there are limits to the total area that you can request data for, and to the number of requests you can make per minute. However, should you exceed these figures, we will continue to provide you with the data you need so that your work is not affected and your customers will not run and hide!*
You can find all the details and the full set of the Agro API’s capabilities
here
.
As always, we would be glad to hear your comments and suggestions regarding our product!
* At the end of your billing month, we will provide you with a separate bill for any additional area, beyond the tariff limits, for which you requested data.
Return to the Blog


Content from https://openweathermap.org/news/post/satellite-imagery-landsat-8-and-its-band-combinations:

×
OpenWeather
Meteorological Service
Speak to
      the Chief
Meteorologist Dan Hart and
his team!
Satellite imagery: Landsat 8 and its Band Combinations.
Posted on 08 Dec 2016
TECHNOLOGIES
#satelliteimages
,
#querybuilder
,
#vane
By:
Olga Makarova
,
PR Manager, OpenWeather.
In the current version of the VANE Language, we use images from the Landsat 8 satellite, which captures the Earth’s entire surface every 16 days. The satellite makes hundreds of images, with a unique name for each one (such as “LC81410552016219LGN00”) and a pixel size of 30 metres. Each image consists of 11 bands; the size of an uncompressed image is 2 GB.
Landsat 8 Operational Land Imager (OLI) and Thermal Infrared Sensor (TIRS)
images consist of nine spectral bands with a spatial resolution of 30 metres for Bands 1 to 7 and 9. New Band 1 (ultra-blue) is useful for coastal and aerosol studies, and also new Band 9 is applicable for cirrus cloud detection. The resolution of Band 8 (panchromatic) is 15 metres. Thermal Bands 10 and 11 provide more accurate surface temperatures and are collected at 100 metres. The approximate scene size is 170 km north–south by 183 km east–west (106 by 114 miles).
By default, we get Bands 2, 3, 4, 5 and 7, but it is possible to download any other bands.
Updated! We have combined our satellite imagery into one simple and fast
Satellite Imagery API
. Satellite images (True and False colour, NDVI, EVI), historical data, etc. More information
here
!
Landsat 8 Operational Land Imager (OLI) and Thermal Infrared Sensor (TIRS) – launched 11 February 2013
Bands
Wavelength
(micrometres)
Resolution
(metres)
Band 1 – Coastal aerosol
0.43 – 0.45
30
Band 2 – Blue
0.45 – 0.51
30
Band 3 – Green
0.53 – 0.59
30
Band 4 – Red
0.64 – 0.67
30
Band 5 – Near Infrared (NIR)
0.85 – 0.88
30
Band 6 – SWIR 1
1.57 – 1.65
30
Band 7 – SWIR 2
2.11 – 2.29
30
Band 8 – Panchromatic
0.50 – 0.68
15
Band 9 – Cirrus
1.36 – 1.38
30
Band 10 – Thermal Infrared (TIRS) 1
10.60 – 11.19
100 * (30)
Band 11 – Thermal Infrared (TIRS) 2
11.50 – 12.51
100 * (30)
Let’s consider how these bands and their combinations can be used to display Landsat 8 images.
Bands 2, 3 and 4
The blue, green and red spectra combine together to create full-colour images.
One of the simplest operations is to generate an RGB map. Here an image consists of Bands 4-3-2, which correspond to the well-known RGB colour model.
Image #1: France, a spot near Toulouse.
http://owm.io/sql-viewer?lat=44.4949&lon=1.1175&zoom=13&select=b4,b3,b2&op=rgb&from=l8&tabActive=2
Image #2: The Sahara desert.
http://owm.io/sql-viewer?lat=21.11&lon=-11.39&zoom=9&where=day%3E2016-09-01,day%3C2016-09-10&select=b4,b3,b2&op=rgb&from=l8&tabActive=1
Band 5
Near Infrared (NIR) – this part of the spectrum is one of the most frequently used, as healthy plants reflect it the most: the water in their leaves scatters the wavelengths back into the sky. This information is useful for vegetation analysis. By matching this band with others, one can get indexes such as NDVI, which provide more precise measurement of plant condition compared with looking only at the visible greenness.
5, 4, 3 – Traditional Colour Infrared (CIR) image
Please note how the healthier vegetation appears more clearly in a brighter shade of red. This band combination is often used for remote sensing of agricultural land, forest and wetlands.
Let’s look at image #1 in the 5-4-3 band combination.
http://owm.io/sql-viewer?lat=44.4949&lon=1.1175&zoom=13&select=b5,b4,b3&op=rgb&from=l8&tabActive=2
Band 7
–
The Shortwave Infrared (SWIR2)
Spectra Shortwave Infrared lets you clearly distinguish wet soil from dry soil, and also differentiates the Earth’s structure: rocks and soils that can look almost similar in other bands have a strong distinction in SWIR.
We get the following picture if we take Image #2 and use infrared band 7 instead of red band 4:
http://owm.io/sql-viewer?lat=21.1767&lon=-11.5192&zoom=9&where=day%3E2016-09-01,day%3C2016-09-10&select=b7,b3,b2&op=rgb&from=l8&tabActive=2
5, 4, 3 – False colour image
— "False colour" is a rendering using the NIR (near infrared) band that is more useful for showing land cover and differentiating it from urban and farmland areas. In these images, it is possible to pick out different types of vegetation. Also easily discernible is the boundary between land and water, which enables changes in shorelines to be tracked.
Compare the image below, made in the essential RGB colours, with the ones that follow it:
http://owm.io/sql-viewer?lat=60.9358&lon=59.3948&zoom=9&select=b4,b3,b2&op=rgb&from=l8&tabActive=2
And here is the 5-4-3 band combination:
https://owm.io/sql-viewer?lat=60.9398&lon=59.2108&zoom=9&op=falsecolor&from=l8&tabActive=2
7, 5, 2 – False colour image
This band combination is convenient for monitoring agricultural crops, which are displayed in bright green. Bare earth is shown in purple, while uncultivated vegetation appears in subtle green.
http://owm.io/sql-viewer?lat=60.9358&lon=59.3948&zoom=9&select=b7,b5,b2&op=rgb&from=l8&tabActive=2
7, 5, 3 – False colour image
This false colour image shows the land in orange and green colours, ice is depicted in beaming purple, and water appears in blue. This band combination is similar to the 7-5-2 one, but the former shows vegetation in brighter shades of green.
http://owm.io/sql-viewer?lat=60.9358&lon=59.3948&zoom=9&select=b7,b5,b3&op=rgb&from=l8&tabActive=2
Return to the Blog


Content from https://openweathermap.org/news/post/helping-farmers-manage-their-enterprises-weather-and-satellite-apis-agroservices1:

×
OpenWeather
Meteorological Service
Speak to
      the Chief
Meteorologist Dan Hart and
his team!
Weather and satellite APIs for precision farming
Posted on 07 May 2018
AGRO
,
WEATHER
#api
,
#agriculture
,
#satelliteimages
,
#weather
,
#smartfarming
By:
Olga Makarova
,
PR Manager, OpenWeather
Objectives
As farms mainly consist of crop fields, which can be hundreds of acres in size, much time and a great deal of resources are demanded of farmers in obtaining an accurate picture of the overall condition of these farms.
Drying out of plants or, conversely, an excess of moisture and a rise in the number of pests: these can all take their toll on the size and quality of the harvest and demand a rapid response. There are also such problems as the danger of overusing fertilisers, which poses a threat not only in terms of extra costs but also in that it is harmful to the environment and primarily to the health of farmers themselves.
To maximise harvests, constant monitoring is required throughout the season; and it is not easy finding the time to keep up with changes for each crop, not to mention monitoring the condition of every single acre. When deciding on long-term plans, a comparative analysis has to be carried out for both the usual course of the seasonal cycle and, in particular, any crises that have arisen.
To assess the current situation and to keep track of changes compared with preceding seasons and with the condition of neighbouring fields, accurate information on both the past and the present is needed, as well as future forecasts that are as precise as possible.
Solutions
There are currently numerous services that help with managing farms for any acreage: checking boundaries and nutrient and moisture intake, monitoring the negative effects of weather conditions and diseases, and controlling pest numbers. And this can all be done without having to visit the fields, just by using a phone or tablet screen or a PC.
It is exactly to provide these services that
OpenWeather
offers a wide range of
APIs for different weather and satellite data
combined in the one product, the
Agro API
,
with universal and simple syntax.
What we offer
About the Agro API
Our product comprises a set of straightforward and user-friendly APIs that are easy to embed in farming applications. Each API is dedicated to its own particular area, which means the user can be flexible about how often the data is updated and receive only information that is necessary.
By using our satellite and weather data, the user can assess the condition of farmland in real time and start planning.
This product is also geared toward the insurance and banking sector and can be used as a farm rating tool.
We provide the full range of data from satellites and weather stations for monitoring the condition of farmland and for making subsequent decisions.
All data processing is carried out online.
Weather:
Current, Forecast, History
Air temperature, humidity, wind speed, etc.. We provide not only current readings but also historical data for analysis and weather forecasts.
TSOIL & MSOIL:
Temperature and Soil Moisture
Crucial indices allowing you to adjust irrigation work and prevent crop root damage
PA & TA:
Accumulated Temperature
and
Precipitation
Temperature quantity index, expressed as the sum of diurnal temperatures exceeding a set threshold. Humidity quantity index, expressed as the sum of precipitation. This data is essential to decision-making regarding the date and favourability of conditions for sowing important crops.
NDVI & EVI:
Normalised Difference Vegetation Index & Enhanced Vegetation Index
These are two of the most common indices allowing assessment of vegetation cover. We provide
current and historical data to allow analysis of vegetation growth rates and subsequent forecasting.
UV index:
Ultraviolet Index
UV radiation has a direct effect on plant photosynthesis. Short-wavelength UV light in small quantities can increase the growth of certain types of plants and have a beneficial effect on further development, while constant exposure to medium-wavelength UV can kill crops. This index is useful for a complete analysis of potential agricultural land.
True and False Colour
Mainly used to show vegetation cover and differentiate it from urban land and any land not used for agricultural purposes. With these images it is also possible to distinguish between different types of vegetation.
Weather data can be requested for a
polygon
*.
We are offering you the chance to try out our free package. All you have to do is set up a
user account
** and you will receive a personal
API key
.
We have also put together paid services as part of which the user is provided with a wider range of functions, which you can find out about
here
.
* Currently, as part of the existing paid packages, we are providing data that is of the utmost
relevance
to agribusiness. Other territories can be added upon request.
** Users who are already registered can use their username and password for their new account.
Return to the Blog


Content from https://openweathermap.org/news/post/new-agro-api-service-agriculture:

×
OpenWeather
Meteorological Service
Speak to
      the Chief
Meteorologist Dan Hart and
his team!
Agro API – service for agriculture
Posted on 23 Apr 2018
AGRO
#api
,
#agriculture
,
#satelliteimages
,
#weather
,
#smartfarming
By:
Bronislava Stavnitskaya
,
Product Manager, OpenWeather
The
OpenWeather
team are pleased to announce that we are launching a new product aimed primarily at specialists developing
agricultural
services and addressing the specific requirements of this sector. This product is also geared toward the insurance and banking sectors and can be used as a farm rating tool.
As part of this product, we are providing an
API
for receiving weather data (current weather, forecasts and history), satellite data (current and historical) and weather and vegetation indices based upon this.
As well as the data we already provide in other products, here we have added specialised agricultural indices such as soil temperature and moisture, accumulated temperature, accumulated precipitation and satellite data*: satellite imagery and vegetation indices (EVI and NDVI) based upon it. Weather data can be requested for a
polygon
. Find out more
here
.
We are offering you the chance to try out our free package. All you have to do is set up a
user account
** and you will receive a personal
API key
.
We have also put together paid services as part of which the user is provided with a wider range of functions, which you can find out about
here
.
* Currently, as part of the existing paid packages, we are providing data that is of the utmost
relevance
to agribusiness. Other territories can be added upon request.
** Users who are already registered can use their username and password for their new account.
We look forward to your feedback and comments! We will be glad to answer any questions you might have. You can email us at
info@openweathermap.org
.
Return to the Blog


Content from https://openweathermap.org/weather-conditions:

Weather Conditions
Home
Weather Conditions
Weather icons
Example of API response
https://api.openweathermap.org/data/2.5/weather?q=London
Example of API response
... 
  "weather": [
	{
	  "id": 500,
	  "main":"Rain",
	  "description": "light rain",
	  "icon": "10n"
	}
  ],
...
NOTE: It is possible to meet more than one weather condition for a requested location. The first weather
				condition in API respond is primary.
An
					example
How to get icon URL
For code 500 - light rain icon = "10d". See below a
full list of codes
URL is
https://openweathermap.org/img/wn/10d@2x.png
Icon list
Day icon
Night icon
Description
01d.png
01n.png
clear sky
02d.png
02n.png
few clouds
03d.png
03n.png
scattered clouds
04d.png
04n.png
broken clouds
09d.png
09n.png
shower rain
10d.png
10n.png
rain
11d.png
11n.png
thunderstorm
13d.png
13n.png
snow
50d.png
50n.png
mist
Weather condition codes
Group 2xx: Thunderstorm
200
Thunderstorm
thunderstorm with light rain
11d
201
Thunderstorm
thunderstorm with rain
11d
202
Thunderstorm
thunderstorm with heavy rain
11d
210
Thunderstorm
light thunderstorm
11d
211
Thunderstorm
thunderstorm
11d
212
Thunderstorm
heavy thunderstorm
11d
221
Thunderstorm
ragged thunderstorm
11d
230
Thunderstorm
thunderstorm with light drizzle
11d
231
Thunderstorm
thunderstorm with drizzle
11d
232
Thunderstorm
thunderstorm with heavy drizzle
11d
Group 3xx: Drizzle
300
Drizzle
light intensity drizzle
09d
301
Drizzle
drizzle
09d
302
Drizzle
heavy intensity drizzle
09d
310
Drizzle
light intensity drizzle rain
09d
311
Drizzle
drizzle rain
09d
312
Drizzle
heavy intensity drizzle rain
09d
313
Drizzle
shower rain and drizzle
09d
314
Drizzle
heavy shower rain and drizzle
09d
321
Drizzle
shower drizzle
09d
Group 5xx: Rain
500
Rain
light rain
10d
501
Rain
moderate rain
10d
502
Rain
heavy intensity rain
10d
503
Rain
very heavy rain
10d
504
Rain
extreme rain
10d
511
Rain
freezing rain
13d
520
Rain
light intensity shower rain
09d
521
Rain
shower rain
09d
522
Rain
heavy intensity shower rain
09d
531
Rain
ragged shower rain
09d
Group 6xx: Snow
600
Snow
light snow
13d
601
Snow
snow
13d
602
Snow
heavy snow
13d
611
Snow
sleet
13d
612
Snow
light shower sleet
13d
613
Snow
shower sleet
13d
615
Snow
light rain and snow
13d
616
Snow
rain and snow
13d
620
Snow
light shower snow
13d
621
Snow
shower snow
13d
622
Snow
heavy shower snow
13d
Group 7xx: Atmosphere
701
Mist
mist
50d
711
Smoke
smoke
50d
721
Haze
haze
50d
731
Dust
sand/dust whirls
50d
741
Fog
fog
50d
751
Sand
sand
50d
761
Dust
dust
50d
762
Ash
volcanic ash
50d
771
Squall
squalls
50d
781
Tornado
tornado
50d
Group 800: Clear
800
Clear
clear sky
01d
01n
Group 80x: Clouds
801
Clouds
few clouds: 11-25%
02d
02n
802
Clouds
scattered clouds: 25-50%
03d
03n
803
Clouds
broken clouds: 51-84%
04d
04n
804
Clouds
overcast clouds: 85-100%
04d
04n


Content from https://openweathermap.org/map_legend:

Map legend
Home
API
Map layers
Map legend
Map styles legend
Default legend for weather maps colors.
Classic rain (mm)
{
	raster-opacity: 0.6;
	raster-scaling: lanczos;
	raster-colorizer-default-mode: linear;
	raster-colorizer-default-color: transparent;
	raster-colorizer-stops:
	stop(0, rgba(225, 200, 100, 0))
	stop(0.1, rgba(200, 150, 150, 0))
	stop(0.2, rgba(150, 150, 170, 0))
	stop(0.5, rgba(120, 120, 190, 0))
	stop(1, rgba(110, 110, 205, 0.3))
	stop(10, rgba(80,80, 225, 0.7))
	stop(140, rgba(20, 20, 255, 0.9));
}
Snow (mm)
{
	stop(0, transparent)
	stop(5, #00d8ff)
	stop(10, #00b6ff)
	stop(25.076, #9549ff);
}
Classic clouds (0-100%)
{
 	stop(0, rgba(255, 255, 255, 0.0))
	stop(10, rgba(253, 253, 255, 0.1))
	stop(20, rgba(252, 251, 255, 0.2))
	stop(30, rgba(250, 250, 255, 0.3))
	stop(40, rgba(249, 248, 255, 0.4))
	stop(50, rgba(247, 247, 255, 0.5))
	stop(60, rgba(246, 245, 255, 0.75))
	stop(70, rgba(244, 244, 255, 1))
	stop(80, rgba(243, 242, 255, 1))
	stop(90, rgba(242, 241, 255, 1))
	stop(100, rgba(240, 240, 255, 1));
}
Temperature (°C)
{
        stop(-65, rgba(130, 22, 146, 1))
        stop(-55, rgba(130, 22, 146, 1))
        stop(-45, rgba(130, 22, 146, 1))
        stop(-40, rgba(130, 22, 146, 1))
        stop(-30, rgba(130, 87, 219, 1))
        stop(-20, rgba(32, 140, 236, 1))
        stop(-10, rgba(32, 196, 232, 1))
        stop(0, rgba(35, 221, 221, 1))
        stop(10, rgba(194, 255, 40, 1))
        stop(20, rgba(255, 240, 40, 1))
        stop(25, rgba(255, 194, 40,1))
        stop(30, rgba(252, 128, 20, 1));
}
Pressure (Pa)
{
 	stop(94000, rgba(0,115,255,1))
	stop(96000, rgba(0,170,255,1))
	stop(98000, rgba(75,208,214,1))
	stop(100000, rgba(141,231,199,1))
	stop(101000, rgba(176,247,32,1))
	stop(102000, rgba(240,184,0,1))
	stop(104000, rgba(251,85,21,1))
	stop(106000, rgba(243,54,59,1))
	stop(108000, rgba(198,0,0,1));
}
Wind (m/s)
{
  	stop(1, rgba(255,255,255, 0))
	stop(5, rgba(238,206,206, 0.4))
	stop(15, rgba(179,100,188, 0.7))
	stop(15, rgba(179,100,188, 0.7))
	stop(25,rgba(63,33,59, 0.8))
	stop(50, rgba(116,76,172, 0.9))
	stop(100, rgba(70,0,175,1))
	stop(200, rgba(13,17,38,1));
 }


Content from https://openweathermap.org/news/:

×
OpenWeather
Meteorological Service
Speak to
      the Chief
Meteorologist Dan Hart and
his team!
ALL
WEATHER
AGRO
PLATFORM
TECHNOLOGIES
EDUCATION
TEAM&COMPANY
EVENTS
WEBINAR
HISTORY
ENERGY
02 May 2025
ENERGY
,
HISTORY
,
WEATHER
From Scorching Heat to Icy Winters: How Miners Adapt to Extreme Weather
In our previous article, How Heavy Rain Can Affect Diamond Mining we looked at the effect of weather patterns on a specific mining sector - we now investigate the wide range of weather challenges that mine operations face around the world.
#historydata
#climatechange
#data
01 May 2025
HISTORY
,
TEAM&COMPANY
,
WEATHER
Celebrating the Turn of the Seasons: Weather and May Day Traditions Around the World
May Day traditions remind us of our enduring relationship with the weather. They are a colourful, joyful expression of hope, renewal, and gratitude for the warmth and light that allows nature, and human communities, to thrive. As we observe or p...
#historydata
#data
#product
30 Apr 2025
PLATFORM
,
TEAM&COMPANY
,
WEATHER
Should Extreme Weather Trigger a Remote Work Policy? Here’s Why It Matters!
The way we work is constantly evolving, shaped by technology and changing societal expectations. Increasingly, however, another powerful force is influencing workplace decisions: extreme weather.
#climatechange
#dashboard
#dataquality
#product
29 Apr 2025
PLATFORM
,
TEAM&COMPANY
,
WEATHER
Weather Intelligence for Last-Mile Delivery
Weather significantly impacts last-mile delivery costs, efficiency, safety, and customer satisfaction. As weather patterns shift, relying on chance isn't viable. By integrating reliable, hyperlocal weather data and forecasts, logistics companies...
#climatechange
#transport
#dashboard
#dataquality
28 Apr 2025
HISTORY
,
TECHNOLOGIES
,
WEATHER
How Weather Shapes Consumer Demand
Accurate demand forecasting is fundamental for business success. It guides crucial decisions about inventory levels, staffing, logistics, and marketing campaigns. While many factors influence consumer choices, one of the most powerful yet freque...
#api
#historydata
#climatechange
#bulk
25 Apr 2025
PLATFORM
,
TEAM&COMPANY
,
WEATHER
Weather’s Impact on Employee Productivity
The daily weather is more than just a topic for casual conversation; it can have subtle and sometimes significant effects on employee productivity and overall workplace dynamics. Understanding these influences allows businesses to better anticip...
#airpollution
#dashboard
#dataquality
#data
24 Apr 2025
PLATFORM
,
TEAM&COMPANY
,
WEATHER
Impact of Weather on Cycling
Weather is an inseparable part of cycling. From challenging winds and persistent rain to temperature fluctuations and visibility issues, conditions significantly impact safety, comfort, and enjoyment. By utilising accurate and detailed weather f...
#api
#dashboard
#dataquality
23 Apr 2025
PLATFORM
,
TEAM&COMPANY
,
WEATHER
Extreme cold can slow your metabolism. Why does your body burn more calories in winter?
Understanding the nuances of how our bodies react to cold, supported by accurate temperature information from reliable sources like OpenWeather, allows us to better navigate the changing seasons and manage our health effectively.
#api
#climatechange
#weatherapp
#product
22 Apr 2025
TEAM&COMPANY
,
TECHNOLOGIES
,
WEATHER
How Heavy Rain Can Affect Diamond Mining.
Diamond mining, a process often involving vast open pits, is inherently susceptible to environmental factors. Among the most significant of these is heavy rainfall, which can lead directly to flooding events that cause substantial delays and dis...
#climatechange
#onecallapi
#data
17 Apr 2025
EDUCATION
,
PLATFORM
,
WEATHER
Can your body predict the weather? The truth behind ‘weather-sensitive’ people.
Many people claim they can feel changes in the weather coming – perhaps an ache in their joints signals rain, or a headache brews before a storm. This phenomenon, sometimes called 'meteoropathy' or weather sensitivity, is a common experience, bu...
#airpollution
#weatherapp
#data

